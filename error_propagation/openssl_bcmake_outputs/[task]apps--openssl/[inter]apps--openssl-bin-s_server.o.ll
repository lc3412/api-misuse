; ModuleID = '/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl/[inter]apps--openssl-bin-s_server.o.i'
source_filename = "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl/[inter]apps--openssl-bin-s_server.o.i"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.options_st = type { i8*, i32, i32, i8* }
%struct.tlsextctx_st = type { i8*, %struct.bio_st*, i32 }
%struct.bio_st = type opaque
%struct.ssl_ctx_st = type opaque
%struct.verify_options_st = type { i32, i32, i32, i32 }
%struct.tlsextstatusctx_st = type { i32, i8*, i8*, i8*, i8*, i32, i32 }
%struct.ssl_session_st = type opaque
%struct.srpsrvparm_st = type { i8*, %struct.SRP_VBASE_st*, %struct.SRP_user_pwd_st* }
%struct.SRP_VBASE_st = type { %struct.stack_st_SRP_user_pwd*, %struct.stack_st_SRP_gN_cache*, i8*, %struct.bignum_st*, %struct.bignum_st* }
%struct.stack_st_SRP_user_pwd = type opaque
%struct.stack_st_SRP_gN_cache = type opaque
%struct.bignum_st = type opaque
%struct.SRP_user_pwd_st = type { i8*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i8* }
%struct.simple_ssl_session_st = type { i8*, i32, i8*, i32, %struct.simple_ssl_session_st* }
%struct.engine_st = type opaque
%struct.evp_pkey_st = type opaque
%struct.ssl_conf_ctx_st = type opaque
%struct.ssl_method_st = type opaque
%struct.ssl_excert_st = type opaque
%struct.stack_st_OPENSSL_STRING = type opaque
%struct.stack_st_X509 = type opaque
%struct.stack_st_X509_CRL = type opaque
%struct.x509_st = type opaque
%struct.X509_VERIFY_PARAM_st = type opaque
%struct.tlsextnextprotoctx_st = type { i8*, i64 }
%struct.tlsextalpnctx_st = type { i8*, i64 }
%struct.X509_crl_st = type opaque
%struct.dh_st = type opaque
%struct.bio_method_st = type opaque
%struct.stack_st_X509_NAME = type opaque
%struct.stack_st = type opaque
%struct.ssl_st = type opaque
%struct.ssl_cipher_st = type opaque
%struct.x509_store_ctx_st = type opaque
%struct.ocsp_response_st = type opaque
%struct.fd_set = type { [16 x i64] }
%struct.stack_st_SSL_CIPHER = type opaque
%struct.timeval = type { i64, i64 }
%struct.x509_object_st = type opaque
%struct.ocsp_request_st = type opaque
%struct.ocsp_cert_id_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.X509_extension_st = type opaque
%struct.x509_store_st = type opaque
%struct.X509_name_st = type opaque
%struct.evp_md_st = type opaque
%struct.ocsp_one_request_st = type opaque
%struct.stack_st_CONF_VALUE = type opaque
%struct.srtp_protection_profile_st = type { i8*, i64 }
%union.bio_addr_st = type opaque

@psk_key = global i8* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Display this summary\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"TCP/IP port to listen on for connections (default is 4433)\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@.str.5 = private unnamed_addr constant [79 x i8] c"TCP/IP optional host and port to listen on for connections (default is *:4433)\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"unix\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Unix domain socket to accept on\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"Use IPv4 only\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"6\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"Use IPv6 only\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"For -unix, unlink existing socket first\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"Set session ID context\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"verify\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"Turn on peer certificate verification\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Verify\00", align 1
@.str.19 = private unnamed_addr constant [56 x i8] c"Turn on peer certificate verification, must have a cert\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"cert\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"Certificate file to use; default is server.pem\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"nameopt\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"Various certificate name options\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"naccept\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"Terminate after #num connections\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"serverinfo\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"PEM serverinfo file for certificate\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"certform\00", align 1
@.str.29 = private unnamed_addr constant [44 x i8] c"Certificate format (PEM or DER) PEM default\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.31 = private unnamed_addr constant [51 x i8] c"Private Key if not in -cert; default is server.pem\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"keyform\00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"Key format (PEM, DER or ENGINE) PEM default\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"pass\00", align 1
@.str.35 = private unnamed_addr constant [36 x i8] c"Private key file pass phrase source\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"dcert\00", align 1
@.str.37 = private unnamed_addr constant [49 x i8] c"Second certificate file to use (usually for DSA)\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"dhparam\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"DH parameters file to use\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"dcertform\00", align 1
@.str.41 = private unnamed_addr constant [51 x i8] c"Second certificate format (PEM or DER) PEM default\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"dkey\00", align 1
@.str.43 = private unnamed_addr constant [49 x i8] c"Second private key file to use (usually for DSA)\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"dkeyform\00", align 1
@.str.45 = private unnamed_addr constant [51 x i8] c"Second key format (PEM, DER or ENGINE) PEM default\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"dpass\00", align 1
@.str.47 = private unnamed_addr constant [43 x i8] c"Second private key file pass phrase source\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"nbio_test\00", align 1
@.str.49 = private unnamed_addr constant [36 x i8] c"Test with the non-blocking test bio\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"crlf\00", align 1
@.str.51 = private unnamed_addr constant [35 x i8] c"Convert LF from terminal into CRLF\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"Print more output\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"msg\00", align 1
@.str.55 = private unnamed_addr constant [23 x i8] c"Show protocol messages\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"msgfile\00", align 1
@.str.57 = private unnamed_addr constant [57 x i8] c"File to send output of -msg or -trace, instead of stdout\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"Print the SSL states\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"CAfile\00", align 1
@.str.61 = private unnamed_addr constant [24 x i8] c"PEM format file of CA's\00", align 1
@.str.62 = private unnamed_addr constant [7 x i8] c"CApath\00", align 1
@.str.63 = private unnamed_addr constant [29 x i8] c"PEM format directory of CA's\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"no-CAfile\00", align 1
@.str.65 = private unnamed_addr constant [42 x i8] c"Do not load the default certificates file\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"no-CApath\00", align 1
@.str.67 = private unnamed_addr constant [65 x i8] c"Do not load certificates from the default certificates directory\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"nocert\00", align 1
@.str.69 = private unnamed_addr constant [37 x i8] c"Don't use any certificates (Anon-DH)\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"No server output\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"no_resume_ephemeral\00", align 1
@.str.73 = private unnamed_addr constant [56 x i8] c"Disable caching and tickets if ephemeral (EC)DH is used\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"www\00", align 1
@.str.75 = private unnamed_addr constant [40 x i8] c"Respond to a 'GET /' with a status page\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"WWW\00", align 1
@.str.77 = private unnamed_addr constant [39 x i8] c"Respond to a 'GET with the file ./path\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"servername\00", align 1
@.str.79 = private unnamed_addr constant [38 x i8] c"Servername for HostName TLS extension\00", align 1
@.str.80 = private unnamed_addr constant [17 x i8] c"servername_fatal\00", align 1
@.str.81 = private unnamed_addr constant [50 x i8] c"mismatch send fatal alert (default warning alert)\00", align 1
@.str.82 = private unnamed_addr constant [6 x i8] c"cert2\00", align 1
@.str.83 = private unnamed_addr constant [62 x i8] c"Certificate file to use for servername; default isserver2.pem\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"key2\00", align 1
@.str.85 = private unnamed_addr constant [57 x i8] c"-Private Key file to use for servername if not in -cert2\00", align 1
@.str.86 = private unnamed_addr constant [12 x i8] c"tlsextdebug\00", align 1
@.str.87 = private unnamed_addr constant [40 x i8] c"Hex dump of all TLS extensions received\00", align 1
@.str.88 = private unnamed_addr constant [5 x i8] c"HTTP\00", align 1
@.str.89 = private unnamed_addr constant [43 x i8] c"Like -WWW but ./path includes HTTP headers\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"id_prefix\00", align 1
@.str.91 = private unnamed_addr constant [45 x i8] c"Generate SSL/TLS session IDs prefixed by arg\00", align 1
@.str.92 = private unnamed_addr constant [5 x i8] c"rand\00", align 1
@.str.93 = private unnamed_addr constant [50 x i8] c"Load the file(s) into the random number generator\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"writerand\00", align 1
@.str.95 = private unnamed_addr constant [40 x i8] c"Write random data to the specified file\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"keymatexport\00", align 1
@.str.97 = private unnamed_addr constant [35 x i8] c"Export keying material using label\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"keymatexportlen\00", align 1
@.str.99 = private unnamed_addr constant [49 x i8] c"Export len bytes of keying material (default 20)\00", align 1
@.str.100 = private unnamed_addr constant [4 x i8] c"CRL\00", align 1
@.str.101 = private unnamed_addr constant [16 x i8] c"CRL file to use\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"crl_download\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Download CRL from distribution points\00", align 1
@.str.104 = private unnamed_addr constant [11 x i8] c"cert_chain\00", align 1
@.str.105 = private unnamed_addr constant [37 x i8] c"certificate chain file in PEM format\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"dcert_chain\00", align 1
@.str.107 = private unnamed_addr constant [44 x i8] c"second certificate chain file in PEM format\00", align 1
@.str.108 = private unnamed_addr constant [12 x i8] c"chainCApath\00", align 1
@.str.109 = private unnamed_addr constant [64 x i8] c"use dir as certificate store path to build CA certificate chain\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"verifyCApath\00", align 1
@.str.111 = private unnamed_addr constant [59 x i8] c"use dir as certificate store path to verify CA certificate\00", align 1
@.str.112 = private unnamed_addr constant [9 x i8] c"no_cache\00", align 1
@.str.113 = private unnamed_addr constant [22 x i8] c"Disable session cache\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"ext_cache\00", align 1
@.str.115 = private unnamed_addr constant [53 x i8] c"Disable internal cache, setup and use external cache\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"CRLform\00", align 1
@.str.117 = private unnamed_addr constant [39 x i8] c"CRL format (PEM or DER) PEM is default\00", align 1
@.str.118 = private unnamed_addr constant [20 x i8] c"verify_return_error\00", align 1
@.str.119 = private unnamed_addr constant [39 x i8] c"Close connection on verification error\00", align 1
@.str.120 = private unnamed_addr constant [13 x i8] c"verify_quiet\00", align 1
@.str.121 = private unnamed_addr constant [38 x i8] c"No verify output except verify errors\00", align 1
@.str.122 = private unnamed_addr constant [12 x i8] c"build_chain\00", align 1
@.str.123 = private unnamed_addr constant [24 x i8] c"Build certificate chain\00", align 1
@.str.124 = private unnamed_addr constant [12 x i8] c"chainCAfile\00", align 1
@.str.125 = private unnamed_addr constant [43 x i8] c"CA file for certificate chain (PEM format)\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"verifyCAfile\00", align 1
@.str.127 = private unnamed_addr constant [50 x i8] c"CA file for certificate verification (PEM format)\00", align 1
@.str.128 = private unnamed_addr constant [8 x i8] c"ign_eof\00", align 1
@.str.129 = private unnamed_addr constant [39 x i8] c"ignore input eof (default when -quiet)\00", align 1
@.str.130 = private unnamed_addr constant [11 x i8] c"no_ign_eof\00", align 1
@.str.131 = private unnamed_addr constant [24 x i8] c"Do not ignore input eof\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.133 = private unnamed_addr constant [39 x i8] c"Request certificate status from server\00", align 1
@.str.134 = private unnamed_addr constant [15 x i8] c"status_verbose\00", align 1
@.str.135 = private unnamed_addr constant [49 x i8] c"Print more output in certificate status callback\00", align 1
@.str.136 = private unnamed_addr constant [15 x i8] c"status_timeout\00", align 1
@.str.137 = private unnamed_addr constant [33 x i8] c"Status request responder timeout\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"status_url\00", align 1
@.str.139 = private unnamed_addr constant [28 x i8] c"Status request fallback URL\00", align 1
@.str.140 = private unnamed_addr constant [12 x i8] c"status_file\00", align 1
@.str.141 = private unnamed_addr constant [42 x i8] c"File containing DER encoded OCSP Response\00", align 1
@.str.142 = private unnamed_addr constant [15 x i8] c"security_debug\00", align 1
@.str.143 = private unnamed_addr constant [45 x i8] c"Print output from SSL/TLS security framework\00", align 1
@.str.144 = private unnamed_addr constant [23 x i8] c"security_debug_verbose\00", align 1
@.str.145 = private unnamed_addr constant [50 x i8] c"Print more output from SSL/TLS security framework\00", align 1
@.str.146 = private unnamed_addr constant [6 x i8] c"brief\00", align 1
@.str.147 = private unnamed_addr constant [58 x i8] c"Restrict output to brief summary of connection parameters\00", align 1
@.str.148 = private unnamed_addr constant [4 x i8] c"rev\00", align 1
@.str.149 = private unnamed_addr constant [82 x i8] c"act as a simple test server which just sends back with the received text reversed\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.151 = private unnamed_addr constant [29 x i8] c"Operate in asynchronous mode\00", align 1
@.str.152 = private unnamed_addr constant [11 x i8] c"ssl_config\00", align 1
@.str.153 = private unnamed_addr constant [48 x i8] c"Configure SSL_CTX using the configuration 'val'\00", align 1
@.str.154 = private unnamed_addr constant [14 x i8] c"max_send_frag\00", align 1
@.str.155 = private unnamed_addr constant [29 x i8] c"Maximum Size of send frames \00", align 1
@.str.156 = private unnamed_addr constant [16 x i8] c"split_send_frag\00", align 1
@.str.157 = private unnamed_addr constant [46 x i8] c"Size used to split data for encrypt pipelines\00", align 1
@.str.158 = private unnamed_addr constant [14 x i8] c"max_pipelines\00", align 1
@.str.159 = private unnamed_addr constant [55 x i8] c"Maximum number of encrypt/decrypt pipelines to be used\00", align 1
@.str.160 = private unnamed_addr constant [9 x i8] c"read_buf\00", align 1
@.str.161 = private unnamed_addr constant [52 x i8] c"Default read buffer size to be used for connections\00", align 1
@.str.162 = private unnamed_addr constant [8 x i8] c"no_ssl3\00", align 1
@.str.163 = private unnamed_addr constant [19 x i8] c"Just disable SSLv3\00", align 1
@.str.164 = private unnamed_addr constant [8 x i8] c"no_tls1\00", align 1
@.str.165 = private unnamed_addr constant [19 x i8] c"Just disable TLSv1\00", align 1
@.str.166 = private unnamed_addr constant [10 x i8] c"no_tls1_1\00", align 1
@.str.167 = private unnamed_addr constant [21 x i8] c"Just disable TLSv1.1\00", align 1
@.str.168 = private unnamed_addr constant [10 x i8] c"no_tls1_2\00", align 1
@.str.169 = private unnamed_addr constant [21 x i8] c"Just disable TLSv1.2\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"no_tls1_3\00", align 1
@.str.171 = private unnamed_addr constant [21 x i8] c"Just disable TLSv1.3\00", align 1
@.str.172 = private unnamed_addr constant [5 x i8] c"bugs\00", align 1
@.str.173 = private unnamed_addr constant [30 x i8] c"Turn on SSL bug compatibility\00", align 1
@.str.174 = private unnamed_addr constant [8 x i8] c"no_comp\00", align 1
@.str.175 = private unnamed_addr constant [38 x i8] c"Disable SSL/TLS compression (default)\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"comp\00", align 1
@.str.177 = private unnamed_addr constant [30 x i8] c"Use SSL/TLS-level compression\00", align 1
@.str.178 = private unnamed_addr constant [10 x i8] c"no_ticket\00", align 1
@.str.179 = private unnamed_addr constant [35 x i8] c"Disable use of TLS session tickets\00", align 1
@.str.180 = private unnamed_addr constant [11 x i8] c"serverpref\00", align 1
@.str.181 = private unnamed_addr constant [32 x i8] c"Use server's cipher preferences\00", align 1
@.str.182 = private unnamed_addr constant [21 x i8] c"legacy_renegotiation\00", align 1
@.str.183 = private unnamed_addr constant [47 x i8] c"Enable use of legacy renegotiation (dangerous)\00", align 1
@.str.184 = private unnamed_addr constant [17 x i8] c"no_renegotiation\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"Disable all renegotiation.\00", align 1
@.str.186 = private unnamed_addr constant [22 x i8] c"legacy_server_connect\00", align 1
@.str.187 = private unnamed_addr constant [58 x i8] c"Allow initial connection to servers that don't support RI\00", align 1
@.str.188 = private unnamed_addr constant [23 x i8] c"no_resumption_on_reneg\00", align 1
@.str.189 = private unnamed_addr constant [45 x i8] c"Disallow session resumption on renegotiation\00", align 1
@.str.190 = private unnamed_addr constant [25 x i8] c"no_legacy_server_connect\00", align 1
@.str.191 = private unnamed_addr constant [61 x i8] c"Disallow initial connection to servers that don't support RI\00", align 1
@.str.192 = private unnamed_addr constant [17 x i8] c"allow_no_dhe_kex\00", align 1
@.str.193 = private unnamed_addr constant [62 x i8] c"In TLSv1.3 allow non-(ec)dhe based key exchange on resumption\00", align 1
@.str.194 = private unnamed_addr constant [18 x i8] c"prioritize_chacha\00", align 1
@.str.195 = private unnamed_addr constant [52 x i8] c"Prioritize ChaCha ciphers when preferred by clients\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.197 = private unnamed_addr constant [54 x i8] c"Enforce strict certificate checks as per TLS standard\00", align 1
@.str.198 = private unnamed_addr constant [8 x i8] c"sigalgs\00", align 1
@.str.199 = private unnamed_addr constant [55 x i8] c"Signature algorithms to support (colon-separated list)\00", align 1
@.str.200 = private unnamed_addr constant [15 x i8] c"client_sigalgs\00", align 1
@.str.201 = private unnamed_addr constant [93 x i8] c"Signature algorithms to support for client certificate authentication (colon-separated list)\00", align 1
@.str.202 = private unnamed_addr constant [7 x i8] c"groups\00", align 1
@.str.203 = private unnamed_addr constant [43 x i8] c"Groups to advertise (colon-separated list)\00", align 1
@.str.204 = private unnamed_addr constant [7 x i8] c"curves\00", align 1
@.str.205 = private unnamed_addr constant [12 x i8] c"named_curve\00", align 1
@.str.206 = private unnamed_addr constant [49 x i8] c"Elliptic curve used for ECDHE (server-side only)\00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str.208 = private unnamed_addr constant [49 x i8] c"Specify TLSv1.2 and below cipher list to be used\00", align 1
@.str.209 = private unnamed_addr constant [13 x i8] c"ciphersuites\00", align 1
@.str.210 = private unnamed_addr constant [40 x i8] c"Specify TLSv1.3 ciphersuites to be used\00", align 1
@.str.211 = private unnamed_addr constant [13 x i8] c"min_protocol\00", align 1
@.str.212 = private unnamed_addr constant [48 x i8] c"Specify the minimum protocol version to be used\00", align 1
@.str.213 = private unnamed_addr constant [13 x i8] c"max_protocol\00", align 1
@.str.214 = private unnamed_addr constant [48 x i8] c"Specify the maximum protocol version to be used\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"record_padding\00", align 1
@.str.216 = private unnamed_addr constant [38 x i8] c"Block size to pad TLS 1.3 records to.\00", align 1
@.str.217 = private unnamed_addr constant [22 x i8] c"debug_broken_protocol\00", align 1
@.str.218 = private unnamed_addr constant [62 x i8] c"Perform all sorts of protocol violations for testing purposes\00", align 1
@.str.219 = private unnamed_addr constant [13 x i8] c"no_middlebox\00", align 1
@.str.220 = private unnamed_addr constant [38 x i8] c"Disable TLSv1.3 middlebox compat mode\00", align 1
@.str.221 = private unnamed_addr constant [7 x i8] c"policy\00", align 1
@.str.222 = private unnamed_addr constant [41 x i8] c"adds policy to the acceptable policy set\00", align 1
@.str.223 = private unnamed_addr constant [8 x i8] c"purpose\00", align 1
@.str.224 = private unnamed_addr constant [26 x i8] c"certificate chain purpose\00", align 1
@.str.225 = private unnamed_addr constant [12 x i8] c"verify_name\00", align 1
@.str.226 = private unnamed_addr constant [25 x i8] c"verification policy name\00", align 1
@.str.227 = private unnamed_addr constant [13 x i8] c"verify_depth\00", align 1
@.str.228 = private unnamed_addr constant [18 x i8] c"chain depth limit\00", align 1
@.str.229 = private unnamed_addr constant [11 x i8] c"auth_level\00", align 1
@.str.230 = private unnamed_addr constant [36 x i8] c"chain authentication security level\00", align 1
@.str.231 = private unnamed_addr constant [7 x i8] c"attime\00", align 1
@.str.232 = private unnamed_addr constant [24 x i8] c"verification epoch time\00", align 1
@.str.233 = private unnamed_addr constant [16 x i8] c"verify_hostname\00", align 1
@.str.234 = private unnamed_addr constant [23 x i8] c"expected peer hostname\00", align 1
@.str.235 = private unnamed_addr constant [13 x i8] c"verify_email\00", align 1
@.str.236 = private unnamed_addr constant [20 x i8] c"expected peer email\00", align 1
@.str.237 = private unnamed_addr constant [10 x i8] c"verify_ip\00", align 1
@.str.238 = private unnamed_addr constant [25 x i8] c"expected peer IP address\00", align 1
@.str.239 = private unnamed_addr constant [16 x i8] c"ignore_critical\00", align 1
@.str.240 = private unnamed_addr constant [37 x i8] c"permit unhandled critical extensions\00", align 1
@.str.241 = private unnamed_addr constant [14 x i8] c"issuer_checks\00", align 1
@.str.242 = private unnamed_addr constant [13 x i8] c"(deprecated)\00", align 1
@.str.243 = private unnamed_addr constant [10 x i8] c"crl_check\00", align 1
@.str.244 = private unnamed_addr constant [34 x i8] c"check leaf certificate revocation\00", align 1
@.str.245 = private unnamed_addr constant [14 x i8] c"crl_check_all\00", align 1
@.str.246 = private unnamed_addr constant [28 x i8] c"check full chain revocation\00", align 1
@.str.247 = private unnamed_addr constant [13 x i8] c"policy_check\00", align 1
@.str.248 = private unnamed_addr constant [30 x i8] c"perform rfc5280 policy checks\00", align 1
@.str.249 = private unnamed_addr constant [16 x i8] c"explicit_policy\00", align 1
@.str.250 = private unnamed_addr constant [44 x i8] c"set policy variable require-explicit-policy\00", align 1
@.str.251 = private unnamed_addr constant [12 x i8] c"inhibit_any\00", align 1
@.str.252 = private unnamed_addr constant [39 x i8] c"set policy variable inhibit-any-policy\00", align 1
@.str.253 = private unnamed_addr constant [12 x i8] c"inhibit_map\00", align 1
@.str.254 = private unnamed_addr constant [43 x i8] c"set policy variable inhibit-policy-mapping\00", align 1
@.str.255 = private unnamed_addr constant [12 x i8] c"x509_strict\00", align 1
@.str.256 = private unnamed_addr constant [47 x i8] c"disable certificate compatibility work-arounds\00", align 1
@.str.257 = private unnamed_addr constant [13 x i8] c"extended_crl\00", align 1
@.str.258 = private unnamed_addr constant [29 x i8] c"enable extended CRL features\00", align 1
@.str.259 = private unnamed_addr constant [11 x i8] c"use_deltas\00", align 1
@.str.260 = private unnamed_addr constant [15 x i8] c"use delta CRLs\00", align 1
@.str.261 = private unnamed_addr constant [13 x i8] c"policy_print\00", align 1
@.str.262 = private unnamed_addr constant [36 x i8] c"print policy processing diagnostics\00", align 1
@.str.263 = private unnamed_addr constant [13 x i8] c"check_ss_sig\00", align 1
@.str.264 = private unnamed_addr constant [30 x i8] c"check root CA self-signatures\00", align 1
@.str.265 = private unnamed_addr constant [14 x i8] c"trusted_first\00", align 1
@.str.266 = private unnamed_addr constant [35 x i8] c"search trust store first (default)\00", align 1
@.str.267 = private unnamed_addr constant [16 x i8] c"suiteB_128_only\00", align 1
@.str.268 = private unnamed_addr constant [26 x i8] c"Suite B 128-bit-only mode\00", align 1
@.str.269 = private unnamed_addr constant [11 x i8] c"suiteB_128\00", align 1
@.str.270 = private unnamed_addr constant [49 x i8] c"Suite B 128-bit mode allowing 192-bit algorithms\00", align 1
@.str.271 = private unnamed_addr constant [11 x i8] c"suiteB_192\00", align 1
@.str.272 = private unnamed_addr constant [26 x i8] c"Suite B 192-bit-only mode\00", align 1
@.str.273 = private unnamed_addr constant [14 x i8] c"partial_chain\00", align 1
@.str.274 = private unnamed_addr constant [55 x i8] c"accept chains anchored by intermediate trust-store CAs\00", align 1
@.str.275 = private unnamed_addr constant [14 x i8] c"no_alt_chains\00", align 1
@.str.276 = private unnamed_addr constant [14 x i8] c"no_check_time\00", align 1
@.str.277 = private unnamed_addr constant [33 x i8] c"ignore certificate validity time\00", align 1
@.str.278 = private unnamed_addr constant [18 x i8] c"allow_proxy_certs\00", align 1
@.str.279 = private unnamed_addr constant [36 x i8] c"allow the use of proxy certificates\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"xkey\00", align 1
@.str.281 = private unnamed_addr constant [30 x i8] c"key for Extended certificates\00", align 1
@.str.282 = private unnamed_addr constant [6 x i8] c"xcert\00", align 1
@.str.283 = private unnamed_addr constant [31 x i8] c"cert for Extended certificates\00", align 1
@.str.284 = private unnamed_addr constant [7 x i8] c"xchain\00", align 1
@.str.285 = private unnamed_addr constant [32 x i8] c"chain for Extended certificates\00", align 1
@.str.286 = private unnamed_addr constant [13 x i8] c"xchain_build\00", align 1
@.str.287 = private unnamed_addr constant [54 x i8] c"build certificate chain for the extended certificates\00", align 1
@.str.288 = private unnamed_addr constant [10 x i8] c"xcertform\00", align 1
@.str.289 = private unnamed_addr constant [57 x i8] c"format of Extended certificate (PEM or DER) PEM default \00", align 1
@.str.290 = private unnamed_addr constant [9 x i8] c"xkeyform\00", align 1
@.str.291 = private unnamed_addr constant [62 x i8] c"format of Extended certificate's key (PEM or DER) PEM default\00", align 1
@.str.292 = private unnamed_addr constant [5 x i8] c"nbio\00", align 1
@.str.293 = private unnamed_addr constant [20 x i8] c"Use non-blocking IO\00", align 1
@.str.294 = private unnamed_addr constant [13 x i8] c"psk_identity\00", align 1
@.str.295 = private unnamed_addr constant [23 x i8] c"PSK identity to expect\00", align 1
@.str.296 = private unnamed_addr constant [9 x i8] c"psk_hint\00", align 1
@.str.297 = private unnamed_addr constant [25 x i8] c"PSK identity hint to use\00", align 1
@.str.298 = private unnamed_addr constant [4 x i8] c"psk\00", align 1
@.str.299 = private unnamed_addr constant [24 x i8] c"PSK in hex (without 0x)\00", align 1
@.str.300 = private unnamed_addr constant [12 x i8] c"psk_session\00", align 1
@.str.301 = private unnamed_addr constant [34 x i8] c"File to read PSK SSL session from\00", align 1
@.str.302 = private unnamed_addr constant [9 x i8] c"srpvfile\00", align 1
@.str.303 = private unnamed_addr constant [26 x i8] c"The verifier file for SRP\00", align 1
@.str.304 = private unnamed_addr constant [12 x i8] c"srpuserseed\00", align 1
@.str.305 = private unnamed_addr constant [38 x i8] c"A seed string for a default user salt\00", align 1
@.str.306 = private unnamed_addr constant [5 x i8] c"tls1\00", align 1
@.str.307 = private unnamed_addr constant [16 x i8] c"Just talk TLSv1\00", align 1
@.str.308 = private unnamed_addr constant [7 x i8] c"tls1_1\00", align 1
@.str.309 = private unnamed_addr constant [18 x i8] c"Just talk TLSv1.1\00", align 1
@.str.310 = private unnamed_addr constant [7 x i8] c"tls1_2\00", align 1
@.str.311 = private unnamed_addr constant [18 x i8] c"just talk TLSv1.2\00", align 1
@.str.312 = private unnamed_addr constant [7 x i8] c"tls1_3\00", align 1
@.str.313 = private unnamed_addr constant [18 x i8] c"just talk TLSv1.3\00", align 1
@.str.314 = private unnamed_addr constant [5 x i8] c"dtls\00", align 1
@.str.315 = private unnamed_addr constant [21 x i8] c"Use any DTLS version\00", align 1
@.str.316 = private unnamed_addr constant [8 x i8] c"timeout\00", align 1
@.str.317 = private unnamed_addr constant [16 x i8] c"Enable timeouts\00", align 1
@.str.318 = private unnamed_addr constant [4 x i8] c"mtu\00", align 1
@.str.319 = private unnamed_addr constant [19 x i8] c"Set link layer MTU\00", align 1
@.str.320 = private unnamed_addr constant [7 x i8] c"listen\00", align 1
@.str.321 = private unnamed_addr constant [61 x i8] c"Listen for a DTLS ClientHello with a cookie and then connect\00", align 1
@.str.322 = private unnamed_addr constant [10 x i8] c"stateless\00", align 1
@.str.323 = private unnamed_addr constant [24 x i8] c"Require TLSv1.3 cookies\00", align 1
@.str.324 = private unnamed_addr constant [6 x i8] c"dtls1\00", align 1
@.str.325 = private unnamed_addr constant [17 x i8] c"Just talk DTLSv1\00", align 1
@.str.326 = private unnamed_addr constant [8 x i8] c"dtls1_2\00", align 1
@.str.327 = private unnamed_addr constant [19 x i8] c"Just talk DTLSv1.2\00", align 1
@.str.328 = private unnamed_addr constant [7 x i8] c"no_dhe\00", align 1
@.str.329 = private unnamed_addr constant [21 x i8] c"Disable ephemeral DH\00", align 1
@.str.330 = private unnamed_addr constant [13 x i8] c"nextprotoneg\00", align 1
@.str.331 = private unnamed_addr constant [74 x i8] c"Set the advertised protocols for the NPN extension (comma-separated list)\00", align 1
@.str.332 = private unnamed_addr constant [9 x i8] c"use_srtp\00", align 1
@.str.333 = private unnamed_addr constant [62 x i8] c"Offer SRTP key management with a colon-separated profile list\00", align 1
@.str.334 = private unnamed_addr constant [5 x i8] c"alpn\00", align 1
@.str.335 = private unnamed_addr constant [75 x i8] c"Set the advertised protocols for the ALPN extension (comma-separated list)\00", align 1
@.str.336 = private unnamed_addr constant [7 x i8] c"engine\00", align 1
@.str.337 = private unnamed_addr constant [39 x i8] c"Use engine, possibly a hardware device\00", align 1
@.str.338 = private unnamed_addr constant [11 x i8] c"keylogfile\00", align 1
@.str.339 = private unnamed_addr constant [26 x i8] c"Write TLS secrets to file\00", align 1
@.str.340 = private unnamed_addr constant [15 x i8] c"max_early_data\00", align 1
@.str.341 = private unnamed_addr constant [67 x i8] c"The maximum number of bytes of early data as advertised in tickets\00", align 1
@.str.342 = private unnamed_addr constant [20 x i8] c"recv_max_early_data\00", align 1
@.str.343 = private unnamed_addr constant [55 x i8] c"The maximum number of bytes of early data (hard limit)\00", align 1
@.str.344 = private unnamed_addr constant [11 x i8] c"early_data\00", align 1
@.str.345 = private unnamed_addr constant [27 x i8] c"Attempt to read early data\00", align 1
@.str.346 = private unnamed_addr constant [12 x i8] c"num_tickets\00", align 1
@.str.347 = private unnamed_addr constant [78 x i8] c"The number of TLSv1.3 session tickets that a server will automatically  issue\00", align 1
@.str.348 = private unnamed_addr constant [12 x i8] c"anti_replay\00", align 1
@.str.349 = private unnamed_addr constant [43 x i8] c"Switch on anti-replay protection (default)\00", align 1
@.str.350 = private unnamed_addr constant [15 x i8] c"no_anti_replay\00", align 1
@.str.351 = private unnamed_addr constant [34 x i8] c"Switch off anti-replay protection\00", align 1
@s_server_options = constant [178 x %struct.options_st] [%struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 1, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 6, i32 112, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 115, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.5, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 7, i32 115, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 3, i32 45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0), i32 4, i32 45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i32 8, i32 45, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i32 13, i32 115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i32 10, i32 110, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i32 12, i32 110, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.19, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 14, i32 60, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i32 11, i32 115, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i32 9, i32 112, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i32 17, i32 115, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i32 18, i32 70, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i32 19, i32 115, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.31, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), i32 20, i32 102, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i32 21, i32 115, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i32 25, i32 60, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i32 23, i32 60, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i32 24, i32 70, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.41, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i32 28, i32 60, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.43, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i32 26, i32 70, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.45, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i32 27, i32 115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.47, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i32 46, i32 45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.49, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i32 62, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.51, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 49, i32 45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i32 0, i32 0), i32 56, i32 45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 57, i32 62, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.57, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i32 61, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i32 41, i32 60, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.61, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.62, i32 0, i32 0), i32 31, i32 47, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.63, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i32 42, i32 45, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i32 32, i32 45, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.67, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i32 30, i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.69, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0), i32 63, i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i32 0, i32 0), i32 66, i32 45, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.73, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i32 0, i32 0), i32 74, i32 45, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.75, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i32 75, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.77, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i32 0, i32 0), i32 97, i32 115, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.79, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.80, i32 0, i32 0), i32 98, i32 45, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.81, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.82, i32 0, i32 0), i32 99, i32 60, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.83, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0), i32 100, i32 60, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.85, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.86, i32 0, i32 0), i32 50, i32 45, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.87, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i32 0, i32 0), i32 76, i32 45, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.89, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i32 0, i32 0), i32 96, i32 115, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.91, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.92, i32 0, i32 0), i32 1501, i32 115, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.93, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i32 0, i32 0), i32 1502, i32 62, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.95, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0), i32 104, i32 115, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.97, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0), i32 105, i32 112, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.99, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.100, i32 0, i32 0), i32 15, i32 60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.101, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.102, i32 0, i32 0), i32 16, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i32 0, i32 0), i32 22, i32 60, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.105, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i32 0, i32 0), i32 29, i32 60, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.107, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i32 0, i32 0), i32 33, i32 47, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.109, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i32 0, i32 0), i32 34, i32 47, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.111, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.112, i32 0, i32 0), i32 35, i32 45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.113, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), i32 36, i32 45, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.115, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.116, i32 0, i32 0), i32 37, i32 70, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.117, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.118, i32 0, i32 0), i32 38, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.119, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.120, i32 0, i32 0), i32 39, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.121, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.122, i32 0, i32 0), i32 40, i32 45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.123, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.124, i32 0, i32 0), i32 43, i32 60, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.125, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.126, i32 0, i32 0), i32 44, i32 60, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.127, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.128, i32 0, i32 0), i32 47, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.129, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.130, i32 0, i32 0), i32 48, i32 45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.131, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), i32 51, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.133, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.134, i32 0, i32 0), i32 52, i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.135, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.136, i32 0, i32 0), i32 53, i32 110, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.137, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.138, i32 0, i32 0), i32 54, i32 115, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.139, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.140, i32 0, i32 0), i32 55, i32 60, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.141, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.142, i32 0, i32 0), i32 59, i32 45, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.143, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i32 0, i32 0), i32 60, i32 45, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.145, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.146, i32 0, i32 0), i32 64, i32 45, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.147, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.148, i32 0, i32 0), i32 73, i32 45, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.149, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i32 0, i32 0), i32 77, i32 45, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.151, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.152, i32 0, i32 0), i32 78, i32 115, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.153, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i32 0, i32 0), i32 79, i32 112, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.156, i32 0, i32 0), i32 80, i32 112, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.157, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.158, i32 0, i32 0), i32 81, i32 112, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.159, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.160, i32 0, i32 0), i32 82, i32 112, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.161, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.162, i32 0, i32 0), i32 3001, i32 45, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.163, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.164, i32 0, i32 0), i32 3002, i32 45, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.165, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.166, i32 0, i32 0), i32 3003, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.167, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.168, i32 0, i32 0), i32 3004, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.169, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i32 0, i32 0), i32 3005, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.171, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i32 0, i32 0), i32 3006, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.173, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.174, i32 0, i32 0), i32 3007, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.175, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0), i32 3026, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.177, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.178, i32 0, i32 0), i32 3008, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.179, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.180, i32 0, i32 0), i32 3009, i32 45, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.181, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.182, i32 0, i32 0), i32 3010, i32 45, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.183, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.184, i32 0, i32 0), i32 3029, i32 45, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.186, i32 0, i32 0), i32 3011, i32 45, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.187, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.188, i32 0, i32 0), i32 3012, i32 45, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.189, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.190, i32 0, i32 0), i32 3013, i32 45, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.191, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.192, i32 0, i32 0), i32 3014, i32 45, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.193, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.194, i32 0, i32 0), i32 3015, i32 45, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.195, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i32 0, i32 0), i32 3016, i32 45, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.197, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.198, i32 0, i32 0), i32 3017, i32 115, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.199, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.200, i32 0, i32 0), i32 3018, i32 115, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.201, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0), i32 3019, i32 115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.203, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.204, i32 0, i32 0), i32 3020, i32 115, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.203, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.205, i32 0, i32 0), i32 3021, i32 115, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.206, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i32 0, i32 0), i32 3022, i32 115, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.208, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.209, i32 0, i32 0), i32 3023, i32 115, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.210, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.211, i32 0, i32 0), i32 3027, i32 115, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.212, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.213, i32 0, i32 0), i32 3028, i32 115, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.214, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i32 0, i32 0), i32 3024, i32 115, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.216, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.217, i32 0, i32 0), i32 3025, i32 45, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.218, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.219, i32 0, i32 0), i32 3030, i32 45, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.220, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.221, i32 0, i32 0), i32 2001, i32 115, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.222, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.223, i32 0, i32 0), i32 2002, i32 115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.224, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.225, i32 0, i32 0), i32 2003, i32 115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.226, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.227, i32 0, i32 0), i32 2004, i32 110, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.228, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.229, i32 0, i32 0), i32 2029, i32 110, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.230, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.231, i32 0, i32 0), i32 2005, i32 77, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.232, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.233, i32 0, i32 0), i32 2006, i32 115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.234, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.235, i32 0, i32 0), i32 2007, i32 115, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.236, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.237, i32 0, i32 0), i32 2008, i32 115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.238, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.239, i32 0, i32 0), i32 2009, i32 45, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.240, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.241, i32 0, i32 0), i32 2010, i32 45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.242, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.243, i32 0, i32 0), i32 2011, i32 45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.244, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.245, i32 0, i32 0), i32 2012, i32 45, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.246, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.247, i32 0, i32 0), i32 2013, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.248, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.249, i32 0, i32 0), i32 2014, i32 45, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.250, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.251, i32 0, i32 0), i32 2015, i32 45, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.252, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.253, i32 0, i32 0), i32 2016, i32 45, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.254, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.255, i32 0, i32 0), i32 2017, i32 45, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.256, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.257, i32 0, i32 0), i32 2018, i32 45, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.258, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.259, i32 0, i32 0), i32 2019, i32 45, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.260, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.261, i32 0, i32 0), i32 2020, i32 45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.262, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.263, i32 0, i32 0), i32 2021, i32 45, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.264, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.265, i32 0, i32 0), i32 2022, i32 45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.266, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.267, i32 0, i32 0), i32 2023, i32 45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.268, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.269, i32 0, i32 0), i32 2024, i32 45, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.270, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.271, i32 0, i32 0), i32 2025, i32 45, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.272, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.273, i32 0, i32 0), i32 2026, i32 45, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.274, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.275, i32 0, i32 0), i32 2027, i32 45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.242, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.276, i32 0, i32 0), i32 2028, i32 45, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.277, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.278, i32 0, i32 0), i32 2030, i32 45, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.279, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), i32 1001, i32 60, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.281, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.282, i32 0, i32 0), i32 1002, i32 60, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.283, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.284, i32 0, i32 0), i32 1003, i32 60, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.285, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.286, i32 0, i32 0), i32 1004, i32 45, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.287, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.288, i32 0, i32 0), i32 1005, i32 70, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.289, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.290, i32 0, i32 0), i32 1006, i32 70, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.291, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.292, i32 0, i32 0), i32 45, i32 45, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.293, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.294, i32 0, i32 0), i32 67, i32 115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.295, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.296, i32 0, i32 0), i32 68, i32 115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.297, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.298, i32 0, i32 0), i32 69, i32 115, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.299, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.300, i32 0, i32 0), i32 70, i32 60, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.301, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.302, i32 0, i32 0), i32 71, i32 60, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.303, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.304, i32 0, i32 0), i32 72, i32 115, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.305, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.306, i32 0, i32 0), i32 87, i32 45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.307, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.308, i32 0, i32 0), i32 86, i32 45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.309, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.310, i32 0, i32 0), i32 85, i32 45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.311, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0), i32 84, i32 45, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.313, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.314, i32 0, i32 0), i32 88, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.315, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.316, i32 0, i32 0), i32 92, i32 45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.317, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i32 0, i32 0), i32 93, i32 112, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.319, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.320, i32 0, i32 0), i32 94, i32 45, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.321, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.322, i32 0, i32 0), i32 95, i32 45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.323, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.324, i32 0, i32 0), i32 89, i32 45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.325, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.326, i32 0, i32 0), i32 90, i32 45, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.327, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.328, i32 0, i32 0), i32 65, i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.329, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.330, i32 0, i32 0), i32 101, i32 115, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.331, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.332, i32 0, i32 0), i32 103, i32 115, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.333, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.334, i32 0, i32 0), i32 102, i32 115, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.335, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i32 0, i32 0), i32 2, i32 115, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.337, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.338, i32 0, i32 0), i32 106, i32 62, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.339, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.340, i32 0, i32 0), i32 107, i32 110, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.341, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.342, i32 0, i32 0), i32 108, i32 110, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.343, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.344, i32 0, i32 0), i32 109, i32 45, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.345, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.346, i32 0, i32 0), i32 110, i32 110, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.347, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.348, i32 0, i32 0), i32 111, i32 45, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.349, i32 0, i32 0) }, %struct.options_st { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.350, i32 0, i32 0), i32 112, i32 45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.351, i32 0, i32 0) }, %struct.options_st zeroinitializer], align 16
@.str.352 = private unnamed_addr constant [5 x i8] c"4433\00", align 1
@.str.353 = private unnamed_addr constant [16 x i8] c"apps/s_server.c\00", align 1
@s_server_main.tlsextcbp = private unnamed_addr constant %struct.tlsextctx_st { i8* null, %struct.bio_st* null, i32 1 }, align 8
@.str.354 = private unnamed_addr constant [11 x i8] c"server.pem\00", align 1
@.str.355 = private unnamed_addr constant [12 x i8] c"server2.pem\00", align 1
@local_argc = internal global i32 0, align 4
@local_argv = internal global i8** null, align 8
@ctx2 = internal global %struct.ssl_ctx_st* null, align 8
@ctx = internal global %struct.ssl_ctx_st* null, align 8
@s_nbio_test = internal global i32 0, align 4
@s_nbio = internal global i32 0, align 4
@www = internal global i32 0, align 4
@bio_s_out = internal global %struct.bio_st* null, align 8
@s_debug = internal global i32 0, align 4
@s_msg = internal global i32 0, align 4
@s_quiet = internal global i32 0, align 4
@s_brief = internal global i32 0, align 4
@async = internal global i32 0, align 4
@bio_err = external global %struct.bio_st*, align 8
@.str.356 = private unnamed_addr constant [39 x i8] c"Cannot supply multiple protocol flags\0A\00", align 1
@.str.357 = private unnamed_addr constant [53 x i8] c"Cannot supply both a protocol flag and '-no_<prot>'\0A\00", align 1
@.str.358 = private unnamed_addr constant [28 x i8] c"%s: Use -help for summary.\0A\00", align 1
@.str.359 = private unnamed_addr constant [43 x i8] c"%s: -port argument malformed or ambiguous\0A\00", align 1
@.str.360 = private unnamed_addr constant [45 x i8] c"%s: -accept argument malformed or ambiguous\0A\00", align 1
@verify_args = external global %struct.verify_options_st, align 4
@.str.361 = private unnamed_addr constant [20 x i8] c"verify depth is %d\0A\00", align 1
@.str.362 = private unnamed_addr constant [47 x i8] c"verify depth is %d, must return a certificate\0A\00", align 1
@.str.363 = private unnamed_addr constant [31 x i8] c"%s: Memory allocation failure\0A\00", align 1
@s_ign_eof = internal global i32 0, align 4
@s_tlsextdebug = internal global i32 0, align 4
@tlscstatp = internal global %struct.tlsextstatusctx_st { i32 -1, i8* null, i8* null, i8* null, i8* null, i32 0, i32 0 }, align 8
@.str.364 = private unnamed_addr constant [19 x i8] c"Error parsing URL\0A\00", align 1
@.str.365 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@bio_s_msg = internal global %struct.bio_st* null, align 8
@s_crlf = internal global i32 0, align 4
@psk_identity = internal global i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.406, i32 0, i32 0), align 8
@.str.366 = private unnamed_addr constant [23 x i8] c"Not a hex number '%s'\0A\00", align 1
@enable_timeouts = internal global i32 0, align 4
@socket_mtu = internal global i64 0, align 8
@dtlslisten = internal global i32 0, align 4
@stateless = internal global i32 0, align 4
@session_id_prefix = internal global i8* null, align 8
@keymatexportlabel = internal global i8* null, align 8
@keymatexportlen = internal global i32 20, align 4
@.str.367 = private unnamed_addr constant [34 x i8] c"Invalid value for max_early_data\0A\00", align 1
@.str.368 = private unnamed_addr constant [39 x i8] c"Invalid value for recv_max_early_data\0A\00", align 1
@early_data = internal global i32 0, align 4
@.str.369 = private unnamed_addr constant [42 x i8] c"Cannot supply -nextprotoneg with TLSv1.3\0A\00", align 1
@.str.370 = private unnamed_addr constant [41 x i8] c"Can't use -HTTP, -www or -WWW with DTLS\0A\00", align 1
@.str.371 = private unnamed_addr constant [32 x i8] c"Can only use -listen with DTLS\0A\00", align 1
@.str.372 = private unnamed_addr constant [35 x i8] c"Can only use --stateless with TLS\0A\00", align 1
@.str.373 = private unnamed_addr constant [47 x i8] c"Can't use unix sockets and datagrams together\0A\00", align 1
@.str.374 = private unnamed_addr constant [70 x i8] c"Can't use -early_data in combination with -www, -WWW, -HTTP, or -rev\0A\00", align 1
@.str.375 = private unnamed_addr constant [24 x i8] c"Error getting password\0A\00", align 1
@.str.376 = private unnamed_addr constant [36 x i8] c"server certificate private key file\00", align 1
@.str.377 = private unnamed_addr constant [24 x i8] c"server certificate file\00", align 1
@.str.378 = private unnamed_addr constant [25 x i8] c"server certificate chain\00", align 1
@.str.379 = private unnamed_addr constant [43 x i8] c"second server certificate private key file\00", align 1
@.str.380 = private unnamed_addr constant [31 x i8] c"second server certificate file\00", align 1
@.str.381 = private unnamed_addr constant [19 x i8] c"Error loading CRL\0A\00", align 1
@.str.382 = private unnamed_addr constant [18 x i8] c"Error adding CRL\0A\00", align 1
@.str.383 = private unnamed_addr constant [36 x i8] c"second certificate private key file\00", align 1
@.str.384 = private unnamed_addr constant [32 x i8] c"second server certificate chain\00", align 1
@.str.385 = private unnamed_addr constant [32 x i8] c"Error using configuration \22%s\22\0A\00", align 1
@.str.386 = private unnamed_addr constant [71 x i8] c"warning: id_prefix is too long, only one new session will be possible\0A\00", align 1
@.str.387 = private unnamed_addr constant [27 x i8] c"error setting 'id_prefix'\0A\00", align 1
@.str.388 = private unnamed_addr constant [21 x i8] c"id_prefix '%s' set.\0A\00", align 1
@.str.389 = private unnamed_addr constant [57 x i8] c"%s: Max send fragment size %u is out of permitted range\0A\00", align 1
@.str.390 = private unnamed_addr constant [59 x i8] c"%s: Split send fragment size %u is out of permitted range\0A\00", align 1
@.str.391 = private unnamed_addr constant [48 x i8] c"%s: Max pipelines %u is out of permitted range\0A\00", align 1
@.str.392 = private unnamed_addr constant [28 x i8] c"Error setting SRTP profile\0A\00", align 1
@.str.393 = private unnamed_addr constant [29 x i8] c"Error setting verify params\0A\00", align 1
@.str.394 = private unnamed_addr constant [31 x i8] c"Error loading store locations\0A\00", align 1
@.str.395 = private unnamed_addr constant [34 x i8] c"Setting secondary ctx parameters\0A\00", align 1
@.str.396 = private unnamed_addr constant [28 x i8] c"Setting temp DH parameters\0A\00", align 1
@.str.397 = private unnamed_addr constant [34 x i8] c"Using default temp DH parameters\0A\00", align 1
@.str.398 = private unnamed_addr constant [34 x i8] c"Error setting temp DH parameters\0A\00", align 1
@.str.399 = private unnamed_addr constant [40 x i8] c"PSK key given, setting server callback\0A\00", align 1
@.str.400 = private unnamed_addr constant [44 x i8] c"error setting PSK identity hint to context\0A\00", align 1
@.str.401 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.402 = private unnamed_addr constant [32 x i8] c"Can't open PSK session file %s\0A\00", align 1
@psksess = internal global %struct.ssl_session_st* null, align 8
@.str.403 = private unnamed_addr constant [32 x i8] c"Can't read PSK session file %s\0A\00", align 1
@.str.404 = private unnamed_addr constant [34 x i8] c"error setting session id context\0A\00", align 1
@srp_callback_parm = internal global %struct.srpsrvparm_st zeroinitializer, align 8
@.str.405 = private unnamed_addr constant [49 x i8] c"Cannot initialize SRP verifier file \22%s\22:ret=%d\0A\00", align 1
@accept_socket = internal global i32 -1, align 4
@.str.406 = private unnamed_addr constant [16 x i8] c"Client_identity\00", align 1
@.str.407 = private unnamed_addr constant [42 x i8] c"ALPN protocols advertised by the client: \00", align 1
@.str.408 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.409 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.410 = private unnamed_addr constant [26 x i8] c"ALPN protocols selected: \00", align 1
@.str.411 = private unnamed_addr constant [15 x i8] c"psk_server_cb\0A\00", align 1
@.str.412 = private unnamed_addr constant [41 x i8] c"Error: client did not send PSK identity\0A\00", align 1
@.str.413 = private unnamed_addr constant [29 x i8] c"identity_len=%d identity=%s\0A\00", align 1
@.str.414 = private unnamed_addr constant [76 x i8] c"PSK warning: client identity not what we expected (got '%s' expected '%s')\0A\00", align 1
@.str.415 = private unnamed_addr constant [27 x i8] c"PSK client identity found\0A\00", align 1
@.str.416 = private unnamed_addr constant [42 x i8] c"Could not convert PSK key '%s' to buffer\0A\00", align 1
@.str.417 = private unnamed_addr constant [56 x i8] c"psk buffer of callback is too small (%d) for key (%ld)\0A\00", align 1
@.str.418 = private unnamed_addr constant [21 x i8] c"fetched PSK len=%ld\0A\00", align 1
@.str.419 = private unnamed_addr constant [30 x i8] c"Error in PSK server callback\0A\00", align 1
@tls13_aes128gcmsha256_id = external constant [0 x i8], align 1
@.str.420 = private unnamed_addr constant [36 x i8] c"Error finding suitable ciphersuite\0A\00", align 1
@.str.421 = private unnamed_addr constant [29 x i8] c"Hostname in TLS extension: \22\00", align 1
@.str.422 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.423 = private unnamed_addr constant [7 x i8] c"\5Cx%02x\00", align 1
@.str.424 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.425 = private unnamed_addr constant [27 x i8] c"Switching server context.\0A\00", align 1
@.str.426 = private unnamed_addr constant [21 x i8] c"SRP username = \22%s\22\0A\00", align 1
@.str.427 = private unnamed_addr constant [23 x i8] c"User %s doesn't exist\0A\00", align 1
@.str.428 = private unnamed_addr constant [48 x i8] c"SRP parameters set: username = \22%s\22 info=\22%s\22 \0A\00", align 1
@.str.429 = private unnamed_addr constant [30 x i8] c"cert_status: callback called\0A\00", align 1
@.str.430 = private unnamed_addr constant [45 x i8] c"cert_status: Cannot open OCSP response file\0A\00", align 1
@.str.431 = private unnamed_addr constant [42 x i8] c"cert_status: Error reading OCSP response\0A\00", align 1
@.str.432 = private unnamed_addr constant [34 x i8] c"cert_status: ocsp response sent:\0A\00", align 1
@.str.433 = private unnamed_addr constant [34 x i8] c"cert_status: can't parse AIA URL\0A\00", align 1
@.str.434 = private unnamed_addr constant [26 x i8] c"cert_status: AIA URL: %s\0A\00", align 1
@.str.435 = private unnamed_addr constant [50 x i8] c"cert_status: no AIA and no default responder URL\0A\00", align 1
@.str.436 = private unnamed_addr constant [49 x i8] c"cert_status: Can't retrieve issuer certificate.\0A\00", align 1
@.str.437 = private unnamed_addr constant [39 x i8] c"cert_status: error querying responder\0A\00", align 1
@.str.438 = private unnamed_addr constant [33 x i8] c"%4ld items in the session cache\0A\00", align 1
@.str.439 = private unnamed_addr constant [38 x i8] c"%4ld client connects (SSL_connect())\0A\00", align 1
@.str.440 = private unnamed_addr constant [42 x i8] c"%4ld client renegotiates (SSL_connect())\0A\00", align 1
@.str.441 = private unnamed_addr constant [36 x i8] c"%4ld client connects that finished\0A\00", align 1
@.str.442 = private unnamed_addr constant [36 x i8] c"%4ld server accepts (SSL_accept())\0A\00", align 1
@.str.443 = private unnamed_addr constant [41 x i8] c"%4ld server renegotiates (SSL_accept())\0A\00", align 1
@.str.444 = private unnamed_addr constant [35 x i8] c"%4ld server accepts that finished\0A\00", align 1
@.str.445 = private unnamed_addr constant [25 x i8] c"%4ld session cache hits\0A\00", align 1
@.str.446 = private unnamed_addr constant [27 x i8] c"%4ld session cache misses\0A\00", align 1
@.str.447 = private unnamed_addr constant [29 x i8] c"%4ld session cache timeouts\0A\00", align 1
@.str.448 = private unnamed_addr constant [26 x i8] c"%4ld callback cache hits\0A\00", align 1
@.str.449 = private unnamed_addr constant [41 x i8] c"%4ld cache full overflows (%ld allowed)\0A\00", align 1
@.str.450 = private unnamed_addr constant [14 x i8] c"server buffer\00", align 1
@.str.451 = private unnamed_addr constant [27 x i8] c"Turned on non blocking io\0A\00", align 1
@.str.452 = private unnamed_addr constant [34 x i8] c"Error setting session id context\0A\00", align 1
@.str.453 = private unnamed_addr constant [31 x i8] c"Error clearing SSL connection\0A\00", align 1
@.str.454 = private unnamed_addr constant [37 x i8] c"MTU too small. Must be at least %ld\0A\00", align 1
@.str.455 = private unnamed_addr constant [19 x i8] c"Failed to set MTU\0A\00", align 1
@.str.456 = private unnamed_addr constant [22 x i8] c"Unable to create BIO\0A\00", align 1
@.str.457 = private unnamed_addr constant [26 x i8] c"Error reading early data\0A\00", align 1
@.str.458 = private unnamed_addr constant [22 x i8] c"Early data received:\0A\00", align 1
@.str.459 = private unnamed_addr constant [24 x i8] c"No early data received\0A\00", align 1
@.str.460 = private unnamed_addr constant [25 x i8] c"Early data was rejected\0A\00", align 1
@.str.461 = private unnamed_addr constant [20 x i8] c"\0AEnd of early data\0A\00", align 1
@.str.462 = private unnamed_addr constant [18 x i8] c"TIMEOUT occurred\0A\00", align 1
@.str.463 = private unnamed_addr constant [6 x i8] c"DONE\0A\00", align 1
@.str.464 = private unnamed_addr constant [24 x i8] c"SSL_do_handshake -> %d\0A\00", align 1
@.str.465 = private unnamed_addr constant [28 x i8] c"Failed to initiate request\0A\00", align 1
@sv_body.str = internal global i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.466, i32 0, i32 0), align 8
@.str.466 = private unnamed_addr constant [28 x i8] c"Lets print some clear text\0A\00", align 1
@.str.467 = private unnamed_addr constant [28 x i8] c"LOOKUP renego during write\0A\00", align 1
@.str.468 = private unnamed_addr constant [16 x i8] c"LOOKUP done %s\0A\00", align 1
@.str.469 = private unnamed_addr constant [23 x i8] c"LOOKUP not successful\0A\00", align 1
@.str.470 = private unnamed_addr constant [21 x i8] c"Write BLOCK (Async)\0A\00", align 1
@.str.471 = private unnamed_addr constant [13 x i8] c"Write BLOCK\0A\00", align 1
@.str.472 = private unnamed_addr constant [7 x i8] c"ERROR\0A\00", align 1
@.str.473 = private unnamed_addr constant [27 x i8] c"LOOKUP renego during read\0A\00", align 1
@.str.474 = private unnamed_addr constant [20 x i8] c"Read BLOCK (Async)\0A\00", align 1
@.str.475 = private unnamed_addr constant [12 x i8] c"Read BLOCK\0A\00", align 1
@.str.476 = private unnamed_addr constant [19 x i8] c"shutting down SSL\0A\00", align 1
@.str.477 = private unnamed_addr constant [19 x i8] c"CONNECTION CLOSED\0A\00", align 1
@.str.478 = private unnamed_addr constant [20 x i8] c"Client certificate\0A\00", align 1
@.str.479 = private unnamed_addr constant [19 x i8] c"Shared ciphers:%s\0A\00", align 1
@.str.480 = private unnamed_addr constant [14 x i8] c"CIPHER is %s\0A\00", align 1
@.str.481 = private unnamed_addr constant [7 x i8] c"(NONE)\00", align 1
@.str.482 = private unnamed_addr constant [14 x i8] c"NEXTPROTO is \00", align 1
@.str.483 = private unnamed_addr constant [39 x i8] c"SRTP Extension negotiated, profile=%s\0A\00", align 1
@.str.484 = private unnamed_addr constant [19 x i8] c"Reused session-id\0A\00", align 1
@.str.485 = private unnamed_addr constant [37 x i8] c"Secure Renegotiation IS%s supported\0A\00", align 1
@.str.486 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.487 = private unnamed_addr constant [5 x i8] c" NOT\00", align 1
@.str.488 = private unnamed_addr constant [27 x i8] c"Renegotiation is DISABLED\0A\00", align 1
@.str.489 = private unnamed_addr constant [27 x i8] c"Keying material exporter:\0A\00", align 1
@.str.490 = private unnamed_addr constant [17 x i8] c"    Label: '%s'\0A\00", align 1
@.str.491 = private unnamed_addr constant [22 x i8] c"    Length: %i bytes\0A\00", align 1
@.str.492 = private unnamed_addr constant [11 x i8] c"export key\00", align 1
@.str.493 = private unnamed_addr constant [11 x i8] c"    Error\0A\00", align 1
@.str.494 = private unnamed_addr constant [22 x i8] c"    Keying material: \00", align 1
@.str.495 = private unnamed_addr constant [5 x i8] c"%02X\00", align 1
@.str.496 = private unnamed_addr constant [24 x i8] c"shutdown accept socket\0A\00", align 1
@.str.497 = private unnamed_addr constant [16 x i8] c"ERROR - memory\0A\00", align 1
@.str.498 = private unnamed_addr constant [27 x i8] c"ERROR - unable to connect\0A\00", align 1
@.str.499 = private unnamed_addr constant [25 x i8] c"LOOKUP during accept %s\0A\00", align 1
@.str.500 = private unnamed_addr constant [7 x i8] c"DELAY\0A\00", align 1
@.str.501 = private unnamed_addr constant [17 x i8] c"verify error:%s\0A\00", align 1
@.str.502 = private unnamed_addr constant [18 x i8] c"server www buffer\00", align 1
@.str.503 = private unnamed_addr constant [14 x i8] c"read R BLOCK\0A\00", align 1
@.str.504 = private unnamed_addr constant [5 x i8] c"GET \00", align 1
@.str.505 = private unnamed_addr constant [12 x i8] c"GET /stats \00", align 1
@www_body.space = internal global i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.506, i32 0, i32 0), align 8
@.str.506 = private unnamed_addr constant [27 x i8] c"                          \00", align 1
@.str.507 = private unnamed_addr constant [11 x i8] c"GET /reneg\00", align 1
@.str.508 = private unnamed_addr constant [15 x i8] c"GET /renegcert\00", align 1
@.str.509 = private unnamed_addr constant [23 x i8] c"SSL_renegotiate -> %d\0A\00", align 1
@.str.510 = private unnamed_addr constant [30 x i8] c"SSL_do_handshake() Retval %d\0A\00", align 1
@.str.511 = private unnamed_addr constant [35 x i8] c"Error waiting for client response\0A\00", align 1
@.str.512 = private unnamed_addr constant [45 x i8] c"HTTP/1.0 200 ok\0D\0AContent-type: text/html\0D\0A\0D\0A\00", align 1
@.str.513 = private unnamed_addr constant [32 x i8] c"<HTML><BODY BGCOLOR=\22#ffffff\22>\0A\00", align 1
@.str.514 = private unnamed_addr constant [7 x i8] c"<pre>\0A\00", align 1
@.str.515 = private unnamed_addr constant [5 x i8] c"&lt;\00", align 1
@.str.516 = private unnamed_addr constant [5 x i8] c"&gt;\00", align 1
@.str.517 = private unnamed_addr constant [6 x i8] c"&amp;\00", align 1
@.str.518 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.519 = private unnamed_addr constant [38 x i8] c"Ciphers supported in s_server binary\0A\00", align 1
@.str.520 = private unnamed_addr constant [13 x i8] c"%-11s:%-25s \00", align 1
@.str.521 = private unnamed_addr constant [49 x i8] c"---\0ACiphers common between both SSL end points:\0A\00", align 1
@.str.522 = private unnamed_addr constant [13 x i8] c"---\0AReused, \00", align 1
@.str.523 = private unnamed_addr constant [10 x i8] c"---\0ANew, \00", align 1
@.str.524 = private unnamed_addr constant [18 x i8] c"%s, Cipher is %s\0A\00", align 1
@.str.525 = private unnamed_addr constant [5 x i8] c"---\0A\00", align 1
@.str.526 = private unnamed_addr constant [33 x i8] c"no client certificate available\0A\00", align 1
@.str.527 = private unnamed_addr constant [25 x i8] c"</pre></BODY></HTML>\0D\0A\0D\0A\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"GET /\00", align 1
@www_body.text = internal global i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.529, i32 0, i32 0), align 8
@.str.529 = private unnamed_addr constant [46 x i8] c"HTTP/1.0 200 ok\0D\0AContent-type: text/plain\0D\0A\0D\0A\00", align 1
@.str.530 = private unnamed_addr constant [31 x i8] c"'%s' is an invalid file name\0D\0A\00", align 1
@.str.531 = private unnamed_addr constant [31 x i8] c"'%s' contains '..' reference\0D\0A\00", align 1
@.str.532 = private unnamed_addr constant [26 x i8] c"'%s' is an invalid path\0D\0A\00", align 1
@.str.533 = private unnamed_addr constant [22 x i8] c"'%s' is a directory\0D\0A\00", align 1
@.str.534 = private unnamed_addr constant [21 x i8] c"Error opening '%s'\0D\0A\00", align 1
@.str.535 = private unnamed_addr constant [9 x i8] c"FILE:%s\0A\00", align 1
@.str.536 = private unnamed_addr constant [6 x i8] c".html\00", align 1
@.str.537 = private unnamed_addr constant [5 x i8] c".php\00", align 1
@.str.538 = private unnamed_addr constant [5 x i8] c".htm\00", align 1
@.str.539 = private unnamed_addr constant [16 x i8] c"rwrite W BLOCK\0A\00", align 1
@.str.540 = private unnamed_addr constant [18 x i8] c"server rev buffer\00", align 1
@.str.541 = private unnamed_addr constant [20 x i8] c"CONNECTION FAILURE\0A\00", align 1
@.str.542 = private unnamed_addr constant [29 x i8] c"LOOKUP renego during accept\0A\00", align 1
@.str.543 = private unnamed_addr constant [24 x i8] c"CONNECTION ESTABLISHED\0A\00", align 1
@.str.544 = private unnamed_addr constant [6 x i8] c"CLOSE\00", align 1
@.str.545 = private unnamed_addr constant [12 x i8] c"get session\00", align 1
@.str.546 = private unnamed_addr constant [24 x i8] c"Error encoding session\0A\00", align 1
@.str.547 = private unnamed_addr constant [19 x i8] c"get session buffer\00", align 1
@.str.548 = private unnamed_addr constant [40 x i8] c"Out of memory adding to external cache\0A\00", align 1
@.str.549 = private unnamed_addr constant [36 x i8] c"Unexpected session encoding length\0A\00", align 1
@first = internal global %struct.simple_ssl_session_st* null, align 8
@.str.550 = private unnamed_addr constant [37 x i8] c"New session added to external cache\0A\00", align 1
@.str.551 = private unnamed_addr constant [27 x i8] c"Lookup session: cache hit\0A\00", align 1
@.str.552 = private unnamed_addr constant [28 x i8] c"Lookup session: cache miss\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @s_server_main(i32 %argc, i8** %argv) #0 !dbg !427 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %engine = alloca %struct.engine_st*, align 8
  %s_key = alloca %struct.evp_pkey_st*, align 8
  %s_dkey = alloca %struct.evp_pkey_st*, align 8
  %cctx = alloca %struct.ssl_conf_ctx_st*, align 8
  %meth = alloca %struct.ssl_method_st*, align 8
  %exc = alloca %struct.ssl_excert_st*, align 8
  %ssl_args = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %s_chain = alloca %struct.stack_st_X509*, align 8
  %s_dchain = alloca %struct.stack_st_X509*, align 8
  %crls = alloca %struct.stack_st_X509_CRL*, align 8
  %s_cert = alloca %struct.x509_st*, align 8
  %s_dcert = alloca %struct.x509_st*, align 8
  %vpm = alloca %struct.X509_VERIFY_PARAM_st*, align 8
  %CApath = alloca i8*, align 8
  %CAfile = alloca i8*, align 8
  %chCApath = alloca i8*, align 8
  %chCAfile = alloca i8*, align 8
  %dpassarg = alloca i8*, align 8
  %dpass = alloca i8*, align 8
  %passarg = alloca i8*, align 8
  %pass = alloca i8*, align 8
  %vfyCApath = alloca i8*, align 8
  %vfyCAfile = alloca i8*, align 8
  %crl_file = alloca i8*, align 8
  %prog = alloca i8*, align 8
  %unlink_unix_path = alloca i32, align 4
  %server_cb = alloca i32 (i32, i32, i32, i8*)*, align 8
  %vpmtouched = alloca i32, align 4
  %build_chain = alloca i32, align 4
  %no_cache = alloca i32, align 4
  %ext_cache = alloca i32, align 4
  %dhfile = alloca i8*, align 8
  %no_dhe = alloca i32, align 4
  %nocert = alloca i32, align 4
  %ret = alloca i32, align 4
  %noCApath = alloca i32, align 4
  %noCAfile = alloca i32, align 4
  %s_cert_format = alloca i32, align 4
  %s_key_format = alloca i32, align 4
  %s_dcert_format = alloca i32, align 4
  %s_dkey_format = alloca i32, align 4
  %rev = alloca i32, align 4
  %naccept = alloca i32, align 4
  %sdebug = alloca i32, align 4
  %socket_family = alloca i32, align 4
  %socket_type = alloca i32, align 4
  %protocol = alloca i32, align 4
  %state = alloca i32, align 4
  %crl_format = alloca i32, align 4
  %crl_download = alloca i32, align 4
  %host = alloca i8*, align 8
  %port = alloca i8*, align 8
  %context = alloca i8*, align 8
  %o = alloca i32, align 4
  %s_key2 = alloca %struct.evp_pkey_st*, align 8
  %s_cert2 = alloca %struct.x509_st*, align 8
  %tlsextcbp = alloca %struct.tlsextctx_st, align 8
  %ssl_config = alloca i8*, align 8
  %read_buf_len = alloca i32, align 4
  %next_proto_neg_in = alloca i8*, align 8
  %next_proto = alloca %struct.tlsextnextprotoctx_st, align 8
  %alpn_in = alloca i8*, align 8
  %alpn_ctx = alloca %struct.tlsextalpnctx_st, align 8
  %psk_identity_hint = alloca i8*, align 8
  %p = alloca i8*, align 8
  %srpuserseed = alloca i8*, align 8
  %srp_verifier_file = alloca i8*, align 8
  %srtp_profiles = alloca i8*, align 8
  %min_version = alloca i32, align 4
  %max_version = alloca i32, align 4
  %prot_opt = alloca i32, align 4
  %no_prot_opt = alloca i32, align 4
  %s_server_verify = alloca i32, align 4
  %s_server_session_id_context = alloca i32, align 4
  %s_cert_file = alloca i8*, align 8
  %s_key_file = alloca i8*, align 8
  %s_chain_file = alloca i8*, align 8
  %s_cert_file2 = alloca i8*, align 8
  %s_key_file2 = alloca i8*, align 8
  %s_dcert_file = alloca i8*, align 8
  %s_dkey_file = alloca i8*, align 8
  %s_dchain_file = alloca i8*, align 8
  %s_tlsextstatus = alloca i32, align 4
  %no_resume_ephemeral = alloca i32, align 4
  %max_send_fragment = alloca i32, align 4
  %split_send_fragment = alloca i32, align 4
  %max_pipelines = alloca i32, align 4
  %s_serverinfo_file = alloca i8*, align 8
  %keylog_file = alloca i8*, align 8
  %max_early_data = alloca i32, align 4
  %recv_max_early_data = alloca i32, align 4
  %psksessf = alloca i8*, align 8
  %crl = alloca %struct.X509_crl_st*, align 8
  %dh = alloca %struct.dh_st*, align 8
  %dh2 = alloca %struct.dh_st*, align 8
  %stmp = alloca %struct.bio_st*, align 8
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !430, metadata !431), !dbg !432
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !433, metadata !431), !dbg !434
  call void @llvm.dbg.declare(metadata %struct.engine_st** %engine, metadata !435, metadata !431), !dbg !439
  store %struct.engine_st* null, %struct.engine_st** %engine, align 8, !dbg !439
  call void @llvm.dbg.declare(metadata %struct.evp_pkey_st** %s_key, metadata !440, metadata !431), !dbg !444
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %s_key, align 8, !dbg !444
  call void @llvm.dbg.declare(metadata %struct.evp_pkey_st** %s_dkey, metadata !445, metadata !431), !dbg !446
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %s_dkey, align 8, !dbg !446
  call void @llvm.dbg.declare(metadata %struct.ssl_conf_ctx_st** %cctx, metadata !447, metadata !431), !dbg !451
  store %struct.ssl_conf_ctx_st* null, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !451
  call void @llvm.dbg.declare(metadata %struct.ssl_method_st** %meth, metadata !452, metadata !431), !dbg !457
  %call = call %struct.ssl_method_st* @TLS_server_method(), !dbg !458
  store %struct.ssl_method_st* %call, %struct.ssl_method_st** %meth, align 8, !dbg !457
  call void @llvm.dbg.declare(metadata %struct.ssl_excert_st** %exc, metadata !459, metadata !431), !dbg !464
  store %struct.ssl_excert_st* null, %struct.ssl_excert_st** %exc, align 8, !dbg !464
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %ssl_args, metadata !465, metadata !431), !dbg !466
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !466
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %s_chain, metadata !467, metadata !431), !dbg !470
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %s_chain, align 8, !dbg !470
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %s_dchain, metadata !471, metadata !431), !dbg !472
  store %struct.stack_st_X509* null, %struct.stack_st_X509** %s_dchain, align 8, !dbg !472
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_CRL** %crls, metadata !473, metadata !431), !dbg !474
  store %struct.stack_st_X509_CRL* null, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !474
  call void @llvm.dbg.declare(metadata %struct.x509_st** %s_cert, metadata !475, metadata !431), !dbg !479
  store %struct.x509_st* null, %struct.x509_st** %s_cert, align 8, !dbg !479
  call void @llvm.dbg.declare(metadata %struct.x509_st** %s_dcert, metadata !480, metadata !431), !dbg !481
  store %struct.x509_st* null, %struct.x509_st** %s_dcert, align 8, !dbg !481
  call void @llvm.dbg.declare(metadata %struct.X509_VERIFY_PARAM_st** %vpm, metadata !482, metadata !431), !dbg !486
  store %struct.X509_VERIFY_PARAM_st* null, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !486
  call void @llvm.dbg.declare(metadata i8** %CApath, metadata !487, metadata !431), !dbg !488
  store i8* null, i8** %CApath, align 8, !dbg !488
  call void @llvm.dbg.declare(metadata i8** %CAfile, metadata !489, metadata !431), !dbg !490
  store i8* null, i8** %CAfile, align 8, !dbg !490
  call void @llvm.dbg.declare(metadata i8** %chCApath, metadata !491, metadata !431), !dbg !492
  store i8* null, i8** %chCApath, align 8, !dbg !492
  call void @llvm.dbg.declare(metadata i8** %chCAfile, metadata !493, metadata !431), !dbg !494
  store i8* null, i8** %chCAfile, align 8, !dbg !494
  call void @llvm.dbg.declare(metadata i8** %dpassarg, metadata !495, metadata !431), !dbg !496
  store i8* null, i8** %dpassarg, align 8, !dbg !496
  call void @llvm.dbg.declare(metadata i8** %dpass, metadata !497, metadata !431), !dbg !498
  store i8* null, i8** %dpass, align 8, !dbg !498
  call void @llvm.dbg.declare(metadata i8** %passarg, metadata !499, metadata !431), !dbg !500
  store i8* null, i8** %passarg, align 8, !dbg !500
  call void @llvm.dbg.declare(metadata i8** %pass, metadata !501, metadata !431), !dbg !502
  store i8* null, i8** %pass, align 8, !dbg !502
  call void @llvm.dbg.declare(metadata i8** %vfyCApath, metadata !503, metadata !431), !dbg !504
  store i8* null, i8** %vfyCApath, align 8, !dbg !504
  call void @llvm.dbg.declare(metadata i8** %vfyCAfile, metadata !505, metadata !431), !dbg !506
  store i8* null, i8** %vfyCAfile, align 8, !dbg !506
  call void @llvm.dbg.declare(metadata i8** %crl_file, metadata !507, metadata !431), !dbg !508
  store i8* null, i8** %crl_file, align 8, !dbg !508
  call void @llvm.dbg.declare(metadata i8** %prog, metadata !509, metadata !431), !dbg !510
  call void @llvm.dbg.declare(metadata i32* %unlink_unix_path, metadata !511, metadata !431), !dbg !512
  store i32 0, i32* %unlink_unix_path, align 4, !dbg !512
  call void @llvm.dbg.declare(metadata i32 (i32, i32, i32, i8*)** %server_cb, metadata !513, metadata !431), !dbg !516
  call void @llvm.dbg.declare(metadata i32* %vpmtouched, metadata !517, metadata !431), !dbg !518
  store i32 0, i32* %vpmtouched, align 4, !dbg !518
  call void @llvm.dbg.declare(metadata i32* %build_chain, metadata !519, metadata !431), !dbg !520
  store i32 0, i32* %build_chain, align 4, !dbg !520
  call void @llvm.dbg.declare(metadata i32* %no_cache, metadata !521, metadata !431), !dbg !522
  store i32 0, i32* %no_cache, align 4, !dbg !522
  call void @llvm.dbg.declare(metadata i32* %ext_cache, metadata !523, metadata !431), !dbg !524
  store i32 0, i32* %ext_cache, align 4, !dbg !524
  call void @llvm.dbg.declare(metadata i8** %dhfile, metadata !525, metadata !431), !dbg !526
  store i8* null, i8** %dhfile, align 8, !dbg !526
  call void @llvm.dbg.declare(metadata i32* %no_dhe, metadata !527, metadata !431), !dbg !528
  store i32 0, i32* %no_dhe, align 4, !dbg !528
  call void @llvm.dbg.declare(metadata i32* %nocert, metadata !529, metadata !431), !dbg !530
  store i32 0, i32* %nocert, align 4, !dbg !530
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !531, metadata !431), !dbg !532
  store i32 1, i32* %ret, align 4, !dbg !532
  call void @llvm.dbg.declare(metadata i32* %noCApath, metadata !533, metadata !431), !dbg !534
  store i32 0, i32* %noCApath, align 4, !dbg !534
  call void @llvm.dbg.declare(metadata i32* %noCAfile, metadata !535, metadata !431), !dbg !536
  store i32 0, i32* %noCAfile, align 4, !dbg !536
  call void @llvm.dbg.declare(metadata i32* %s_cert_format, metadata !537, metadata !431), !dbg !538
  store i32 32773, i32* %s_cert_format, align 4, !dbg !538
  call void @llvm.dbg.declare(metadata i32* %s_key_format, metadata !539, metadata !431), !dbg !540
  store i32 32773, i32* %s_key_format, align 4, !dbg !540
  call void @llvm.dbg.declare(metadata i32* %s_dcert_format, metadata !541, metadata !431), !dbg !542
  store i32 32773, i32* %s_dcert_format, align 4, !dbg !542
  call void @llvm.dbg.declare(metadata i32* %s_dkey_format, metadata !543, metadata !431), !dbg !544
  store i32 32773, i32* %s_dkey_format, align 4, !dbg !544
  call void @llvm.dbg.declare(metadata i32* %rev, metadata !545, metadata !431), !dbg !546
  store i32 0, i32* %rev, align 4, !dbg !546
  call void @llvm.dbg.declare(metadata i32* %naccept, metadata !547, metadata !431), !dbg !548
  store i32 -1, i32* %naccept, align 4, !dbg !548
  call void @llvm.dbg.declare(metadata i32* %sdebug, metadata !549, metadata !431), !dbg !550
  store i32 0, i32* %sdebug, align 4, !dbg !550
  call void @llvm.dbg.declare(metadata i32* %socket_family, metadata !551, metadata !431), !dbg !552
  store i32 0, i32* %socket_family, align 4, !dbg !552
  call void @llvm.dbg.declare(metadata i32* %socket_type, metadata !553, metadata !431), !dbg !554
  store i32 1, i32* %socket_type, align 4, !dbg !554
  call void @llvm.dbg.declare(metadata i32* %protocol, metadata !555, metadata !431), !dbg !556
  store i32 0, i32* %protocol, align 4, !dbg !556
  call void @llvm.dbg.declare(metadata i32* %state, metadata !557, metadata !431), !dbg !558
  store i32 0, i32* %state, align 4, !dbg !558
  call void @llvm.dbg.declare(metadata i32* %crl_format, metadata !559, metadata !431), !dbg !560
  store i32 32773, i32* %crl_format, align 4, !dbg !560
  call void @llvm.dbg.declare(metadata i32* %crl_download, metadata !561, metadata !431), !dbg !562
  store i32 0, i32* %crl_download, align 4, !dbg !562
  call void @llvm.dbg.declare(metadata i8** %host, metadata !563, metadata !431), !dbg !564
  store i8* null, i8** %host, align 8, !dbg !564
  call void @llvm.dbg.declare(metadata i8** %port, metadata !565, metadata !431), !dbg !566
  %call1 = call i8* @CRYPTO_strdup(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1009), !dbg !567
  store i8* %call1, i8** %port, align 8, !dbg !566
  call void @llvm.dbg.declare(metadata i8** %context, metadata !568, metadata !431), !dbg !569
  store i8* null, i8** %context, align 8, !dbg !569
  call void @llvm.dbg.declare(metadata i32* %o, metadata !570, metadata !431), !dbg !572
  call void @llvm.dbg.declare(metadata %struct.evp_pkey_st** %s_key2, metadata !573, metadata !431), !dbg !574
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %s_key2, align 8, !dbg !574
  call void @llvm.dbg.declare(metadata %struct.x509_st** %s_cert2, metadata !575, metadata !431), !dbg !576
  store %struct.x509_st* null, %struct.x509_st** %s_cert2, align 8, !dbg !576
  call void @llvm.dbg.declare(metadata %struct.tlsextctx_st* %tlsextcbp, metadata !577, metadata !431), !dbg !578
  %0 = bitcast %struct.tlsextctx_st* %tlsextcbp to i8*, !dbg !578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast (%struct.tlsextctx_st* @s_server_main.tlsextcbp to i8*), i64 24, i32 8, i1 false), !dbg !578
  call void @llvm.dbg.declare(metadata i8** %ssl_config, metadata !579, metadata !431), !dbg !580
  store i8* null, i8** %ssl_config, align 8, !dbg !580
  call void @llvm.dbg.declare(metadata i32* %read_buf_len, metadata !581, metadata !431), !dbg !582
  store i32 0, i32* %read_buf_len, align 4, !dbg !582
  call void @llvm.dbg.declare(metadata i8** %next_proto_neg_in, metadata !583, metadata !431), !dbg !584
  store i8* null, i8** %next_proto_neg_in, align 8, !dbg !584
  call void @llvm.dbg.declare(metadata %struct.tlsextnextprotoctx_st* %next_proto, metadata !585, metadata !431), !dbg !594
  %1 = bitcast %struct.tlsextnextprotoctx_st* %next_proto to i8*, !dbg !594
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 8, i1 false), !dbg !594
  call void @llvm.dbg.declare(metadata i8** %alpn_in, metadata !595, metadata !431), !dbg !596
  store i8* null, i8** %alpn_in, align 8, !dbg !596
  call void @llvm.dbg.declare(metadata %struct.tlsextalpnctx_st* %alpn_ctx, metadata !597, metadata !431), !dbg !603
  %2 = bitcast %struct.tlsextalpnctx_st* %alpn_ctx to i8*, !dbg !603
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 16, i32 8, i1 false), !dbg !603
  call void @llvm.dbg.declare(metadata i8** %psk_identity_hint, metadata !604, metadata !431), !dbg !605
  store i8* null, i8** %psk_identity_hint, align 8, !dbg !605
  call void @llvm.dbg.declare(metadata i8** %p, metadata !606, metadata !431), !dbg !607
  call void @llvm.dbg.declare(metadata i8** %srpuserseed, metadata !608, metadata !431), !dbg !609
  store i8* null, i8** %srpuserseed, align 8, !dbg !609
  call void @llvm.dbg.declare(metadata i8** %srp_verifier_file, metadata !610, metadata !431), !dbg !611
  store i8* null, i8** %srp_verifier_file, align 8, !dbg !611
  call void @llvm.dbg.declare(metadata i8** %srtp_profiles, metadata !612, metadata !431), !dbg !613
  store i8* null, i8** %srtp_profiles, align 8, !dbg !613
  call void @llvm.dbg.declare(metadata i32* %min_version, metadata !614, metadata !431), !dbg !615
  store i32 0, i32* %min_version, align 4, !dbg !615
  call void @llvm.dbg.declare(metadata i32* %max_version, metadata !616, metadata !431), !dbg !617
  store i32 0, i32* %max_version, align 4, !dbg !617
  call void @llvm.dbg.declare(metadata i32* %prot_opt, metadata !618, metadata !431), !dbg !619
  store i32 0, i32* %prot_opt, align 4, !dbg !619
  call void @llvm.dbg.declare(metadata i32* %no_prot_opt, metadata !620, metadata !431), !dbg !621
  store i32 0, i32* %no_prot_opt, align 4, !dbg !621
  call void @llvm.dbg.declare(metadata i32* %s_server_verify, metadata !622, metadata !431), !dbg !623
  store i32 0, i32* %s_server_verify, align 4, !dbg !623
  call void @llvm.dbg.declare(metadata i32* %s_server_session_id_context, metadata !624, metadata !431), !dbg !625
  store i32 1, i32* %s_server_session_id_context, align 4, !dbg !625
  call void @llvm.dbg.declare(metadata i8** %s_cert_file, metadata !626, metadata !431), !dbg !627
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.354, i32 0, i32 0), i8** %s_cert_file, align 8, !dbg !627
  call void @llvm.dbg.declare(metadata i8** %s_key_file, metadata !628, metadata !431), !dbg !629
  store i8* null, i8** %s_key_file, align 8, !dbg !629
  call void @llvm.dbg.declare(metadata i8** %s_chain_file, metadata !630, metadata !431), !dbg !631
  store i8* null, i8** %s_chain_file, align 8, !dbg !631
  call void @llvm.dbg.declare(metadata i8** %s_cert_file2, metadata !632, metadata !431), !dbg !633
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.355, i32 0, i32 0), i8** %s_cert_file2, align 8, !dbg !633
  call void @llvm.dbg.declare(metadata i8** %s_key_file2, metadata !634, metadata !431), !dbg !635
  store i8* null, i8** %s_key_file2, align 8, !dbg !635
  call void @llvm.dbg.declare(metadata i8** %s_dcert_file, metadata !636, metadata !431), !dbg !637
  store i8* null, i8** %s_dcert_file, align 8, !dbg !637
  call void @llvm.dbg.declare(metadata i8** %s_dkey_file, metadata !638, metadata !431), !dbg !639
  store i8* null, i8** %s_dkey_file, align 8, !dbg !639
  call void @llvm.dbg.declare(metadata i8** %s_dchain_file, metadata !640, metadata !431), !dbg !641
  store i8* null, i8** %s_dchain_file, align 8, !dbg !641
  call void @llvm.dbg.declare(metadata i32* %s_tlsextstatus, metadata !642, metadata !431), !dbg !643
  store i32 0, i32* %s_tlsextstatus, align 4, !dbg !643
  call void @llvm.dbg.declare(metadata i32* %no_resume_ephemeral, metadata !644, metadata !431), !dbg !645
  store i32 0, i32* %no_resume_ephemeral, align 4, !dbg !645
  call void @llvm.dbg.declare(metadata i32* %max_send_fragment, metadata !646, metadata !431), !dbg !647
  store i32 0, i32* %max_send_fragment, align 4, !dbg !647
  call void @llvm.dbg.declare(metadata i32* %split_send_fragment, metadata !648, metadata !431), !dbg !649
  store i32 0, i32* %split_send_fragment, align 4, !dbg !649
  call void @llvm.dbg.declare(metadata i32* %max_pipelines, metadata !650, metadata !431), !dbg !651
  store i32 0, i32* %max_pipelines, align 4, !dbg !651
  call void @llvm.dbg.declare(metadata i8** %s_serverinfo_file, metadata !652, metadata !431), !dbg !653
  store i8* null, i8** %s_serverinfo_file, align 8, !dbg !653
  call void @llvm.dbg.declare(metadata i8** %keylog_file, metadata !654, metadata !431), !dbg !655
  store i8* null, i8** %keylog_file, align 8, !dbg !655
  call void @llvm.dbg.declare(metadata i32* %max_early_data, metadata !656, metadata !431), !dbg !657
  store i32 -1, i32* %max_early_data, align 4, !dbg !657
  call void @llvm.dbg.declare(metadata i32* %recv_max_early_data, metadata !658, metadata !431), !dbg !659
  store i32 -1, i32* %recv_max_early_data, align 4, !dbg !659
  call void @llvm.dbg.declare(metadata i8** %psksessf, metadata !660, metadata !431), !dbg !661
  store i8* null, i8** %psksessf, align 8, !dbg !661
  %3 = load i32, i32* %argc.addr, align 4, !dbg !662
  store i32 %3, i32* @local_argc, align 4, !dbg !663
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !664
  store i8** %4, i8*** @local_argv, align 8, !dbg !665
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !666
  store %struct.ssl_ctx_st* null, %struct.ssl_ctx_st** @ctx, align 8, !dbg !667
  store i32 0, i32* @s_nbio_test, align 4, !dbg !668
  store i32 0, i32* @s_nbio, align 4, !dbg !669
  store i32 0, i32* @www, align 4, !dbg !670
  store %struct.bio_st* null, %struct.bio_st** @bio_s_out, align 8, !dbg !671
  store i32 0, i32* @s_debug, align 4, !dbg !672
  store i32 0, i32* @s_msg, align 4, !dbg !673
  store i32 0, i32* @s_quiet, align 4, !dbg !674
  store i32 0, i32* @s_brief, align 4, !dbg !675
  store i32 0, i32* @async, align 4, !dbg !676
  %call2 = call %struct.ssl_conf_ctx_st* @SSL_CONF_CTX_new(), !dbg !677
  store %struct.ssl_conf_ctx_st* %call2, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !678
  %call3 = call %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new(), !dbg !679
  store %struct.X509_VERIFY_PARAM_st* %call3, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !680
  %5 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !681
  %cmp = icmp eq %struct.ssl_conf_ctx_st* %5, null, !dbg !683
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !684

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !685
  %cmp4 = icmp eq %struct.X509_VERIFY_PARAM_st* %6, null, !dbg !687
  br i1 %cmp4, label %if.then, label %if.end, !dbg !688

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %end, !dbg !689

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !690
  %call5 = call i32 @SSL_CONF_CTX_set_flags(%struct.ssl_conf_ctx_st* %7, i32 9), !dbg !691
  %8 = load i32, i32* %argc.addr, align 4, !dbg !692
  %9 = load i8**, i8*** %argv.addr, align 8, !dbg !693
  %call6 = call i8* @opt_init(i32 %8, i8** %9, %struct.options_st* getelementptr inbounds ([178 x %struct.options_st], [178 x %struct.options_st]* @s_server_options, i32 0, i32 0)), !dbg !694
  store i8* %call6, i8** %prog, align 8, !dbg !695
  br label %while.cond, !dbg !696

while.cond:                                       ; preds = %sw.epilog, %if.end
  %call7 = call i32 @opt_next(), !dbg !697
  store i32 %call7, i32* %o, align 4, !dbg !699
  %cmp8 = icmp ne i32 %call7, 0, !dbg !700
  br i1 %cmp8, label %while.body, label %while.end, !dbg !701

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %o, align 4, !dbg !702
  %cmp9 = icmp eq i32 %10, 83, !dbg !705
  br i1 %cmp9, label %land.lhs.true, label %lor.lhs.false10, !dbg !706

lor.lhs.false10:                                  ; preds = %while.body
  %11 = load i32, i32* %o, align 4, !dbg !707
  %cmp11 = icmp eq i32 %11, 87, !dbg !709
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false12, !dbg !710

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %12 = load i32, i32* %o, align 4, !dbg !711
  %cmp13 = icmp eq i32 %12, 86, !dbg !713
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false14, !dbg !714

lor.lhs.false14:                                  ; preds = %lor.lhs.false12
  %13 = load i32, i32* %o, align 4, !dbg !715
  %cmp15 = icmp eq i32 %13, 85, !dbg !717
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false16, !dbg !718

lor.lhs.false16:                                  ; preds = %lor.lhs.false14
  %14 = load i32, i32* %o, align 4, !dbg !719
  %cmp17 = icmp eq i32 %14, 84, !dbg !721
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false18, !dbg !722

lor.lhs.false18:                                  ; preds = %lor.lhs.false16
  %15 = load i32, i32* %o, align 4, !dbg !723
  %cmp19 = icmp eq i32 %15, 88, !dbg !725
  br i1 %cmp19, label %land.lhs.true, label %lor.lhs.false20, !dbg !726

lor.lhs.false20:                                  ; preds = %lor.lhs.false18
  %16 = load i32, i32* %o, align 4, !dbg !727
  %cmp21 = icmp eq i32 %16, 89, !dbg !729
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false22, !dbg !730

lor.lhs.false22:                                  ; preds = %lor.lhs.false20
  %17 = load i32, i32* %o, align 4, !dbg !731
  %cmp23 = icmp eq i32 %17, 90, !dbg !733
  br i1 %cmp23, label %land.lhs.true, label %if.end27, !dbg !734

land.lhs.true:                                    ; preds = %lor.lhs.false22, %lor.lhs.false20, %lor.lhs.false18, %lor.lhs.false16, %lor.lhs.false14, %lor.lhs.false12, %lor.lhs.false10, %while.body
  %18 = load i32, i32* %prot_opt, align 4, !dbg !735
  %inc = add nsw i32 %18, 1, !dbg !735
  store i32 %inc, i32* %prot_opt, align 4, !dbg !735
  %cmp24 = icmp sgt i32 %inc, 1, !dbg !737
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !738

if.then25:                                        ; preds = %land.lhs.true
  %19 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !739
  %call26 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %19, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.356, i32 0, i32 0)), !dbg !741
  br label %end, !dbg !742

if.end27:                                         ; preds = %land.lhs.true, %lor.lhs.false22
  %20 = load i32, i32* %o, align 4, !dbg !743
  %cmp28 = icmp eq i32 %20, 3001, !dbg !745
  br i1 %cmp28, label %if.then37, label %lor.lhs.false29, !dbg !746

lor.lhs.false29:                                  ; preds = %if.end27
  %21 = load i32, i32* %o, align 4, !dbg !747
  %cmp30 = icmp eq i32 %21, 3002, !dbg !749
  br i1 %cmp30, label %if.then37, label %lor.lhs.false31, !dbg !750

lor.lhs.false31:                                  ; preds = %lor.lhs.false29
  %22 = load i32, i32* %o, align 4, !dbg !751
  %cmp32 = icmp eq i32 %22, 3003, !dbg !753
  br i1 %cmp32, label %if.then37, label %lor.lhs.false33, !dbg !754

lor.lhs.false33:                                  ; preds = %lor.lhs.false31
  %23 = load i32, i32* %o, align 4, !dbg !755
  %cmp34 = icmp eq i32 %23, 3004, !dbg !757
  br i1 %cmp34, label %if.then37, label %lor.lhs.false35, !dbg !758

lor.lhs.false35:                                  ; preds = %lor.lhs.false33
  %24 = load i32, i32* %o, align 4, !dbg !759
  %cmp36 = icmp eq i32 %24, 3005, !dbg !761
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !762

if.then37:                                        ; preds = %lor.lhs.false35, %lor.lhs.false33, %lor.lhs.false31, %lor.lhs.false29, %if.end27
  %25 = load i32, i32* %no_prot_opt, align 4, !dbg !763
  %inc38 = add nsw i32 %25, 1, !dbg !763
  store i32 %inc38, i32* %no_prot_opt, align 4, !dbg !763
  br label %if.end39, !dbg !764

if.end39:                                         ; preds = %if.then37, %lor.lhs.false35
  %26 = load i32, i32* %prot_opt, align 4, !dbg !765
  %cmp40 = icmp eq i32 %26, 1, !dbg !767
  br i1 %cmp40, label %land.lhs.true41, label %if.end44, !dbg !768

land.lhs.true41:                                  ; preds = %if.end39
  %27 = load i32, i32* %no_prot_opt, align 4, !dbg !769
  %tobool = icmp ne i32 %27, 0, !dbg !769
  br i1 %tobool, label %if.then42, label %if.end44, !dbg !771

if.then42:                                        ; preds = %land.lhs.true41
  %28 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !772
  %call43 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %28, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.357, i32 0, i32 0)), !dbg !774
  br label %end, !dbg !775

if.end44:                                         ; preds = %land.lhs.true41, %if.end39
  %29 = load i32, i32* %o, align 4, !dbg !776
  switch i32 %29, label %sw.epilog [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb
    i32 1, label %sw.bb46
    i32 3, label %sw.bb47
    i32 4, label %sw.bb51
    i32 6, label %sw.bb55
    i32 5, label %sw.bb65
    i32 7, label %sw.bb75
    i32 8, label %sw.bb78
    i32 9, label %sw.bb79
    i32 10, label %sw.bb82
    i32 12, label %sw.bb89
    i32 13, label %sw.bb96
    i32 14, label %sw.bb98
    i32 11, label %sw.bb100
    i32 15, label %sw.bb106
    i32 16, label %sw.bb108
    i32 17, label %sw.bb109
    i32 18, label %sw.bb111
    i32 19, label %sw.bb117
    i32 20, label %sw.bb119
    i32 21, label %sw.bb125
    i32 22, label %sw.bb127
    i32 23, label %sw.bb129
    i32 24, label %sw.bb131
    i32 25, label %sw.bb137
    i32 26, label %sw.bb139
    i32 27, label %sw.bb145
    i32 28, label %sw.bb147
    i32 29, label %sw.bb149
    i32 30, label %sw.bb151
    i32 31, label %sw.bb152
    i32 32, label %sw.bb154
    i32 33, label %sw.bb155
    i32 34, label %sw.bb157
    i32 35, label %sw.bb159
    i32 36, label %sw.bb160
    i32 37, label %sw.bb161
    i32 3000, label %sw.bb167
    i32 3031, label %sw.bb167
    i32 3001, label %sw.bb168
    i32 3002, label %sw.bb168
    i32 3003, label %sw.bb168
    i32 3004, label %sw.bb168
    i32 3005, label %sw.bb168
    i32 3006, label %sw.bb168
    i32 3007, label %sw.bb168
    i32 3026, label %sw.bb168
    i32 3008, label %sw.bb168
    i32 3009, label %sw.bb168
    i32 3010, label %sw.bb168
    i32 3011, label %sw.bb168
    i32 3012, label %sw.bb168
    i32 3013, label %sw.bb168
    i32 3014, label %sw.bb168
    i32 3015, label %sw.bb168
    i32 3016, label %sw.bb168
    i32 3017, label %sw.bb168
    i32 3018, label %sw.bb168
    i32 3019, label %sw.bb168
    i32 3020, label %sw.bb168
    i32 3021, label %sw.bb168
    i32 3022, label %sw.bb168
    i32 3023, label %sw.bb168
    i32 3024, label %sw.bb168
    i32 3029, label %sw.bb168
    i32 3027, label %sw.bb168
    i32 3028, label %sw.bb168
    i32 3025, label %sw.bb168
    i32 3030, label %sw.bb168
    i32 110, label %sw.bb168
    i32 111, label %sw.bb168
    i32 112, label %sw.bb168
    i32 2000, label %sw.bb187
    i32 2031, label %sw.bb187
    i32 2001, label %sw.bb188
    i32 2002, label %sw.bb188
    i32 2003, label %sw.bb188
    i32 2004, label %sw.bb188
    i32 2029, label %sw.bb188
    i32 2005, label %sw.bb188
    i32 2006, label %sw.bb188
    i32 2007, label %sw.bb188
    i32 2008, label %sw.bb188
    i32 2009, label %sw.bb188
    i32 2010, label %sw.bb188
    i32 2011, label %sw.bb188
    i32 2012, label %sw.bb188
    i32 2013, label %sw.bb188
    i32 2014, label %sw.bb188
    i32 2015, label %sw.bb188
    i32 2016, label %sw.bb188
    i32 2017, label %sw.bb188
    i32 2018, label %sw.bb188
    i32 2019, label %sw.bb188
    i32 2020, label %sw.bb188
    i32 2021, label %sw.bb188
    i32 2022, label %sw.bb188
    i32 2023, label %sw.bb188
    i32 2024, label %sw.bb188
    i32 2025, label %sw.bb188
    i32 2026, label %sw.bb188
    i32 2027, label %sw.bb188
    i32 2028, label %sw.bb188
    i32 2030, label %sw.bb188
    i32 1000, label %sw.bb194
    i32 1007, label %sw.bb194
    i32 1001, label %sw.bb195
    i32 1002, label %sw.bb195
    i32 1003, label %sw.bb195
    i32 1004, label %sw.bb195
    i32 1005, label %sw.bb195
    i32 1006, label %sw.bb195
    i32 38, label %sw.bb200
    i32 39, label %sw.bb201
    i32 40, label %sw.bb202
    i32 41, label %sw.bb203
    i32 42, label %sw.bb205
    i32 43, label %sw.bb206
    i32 44, label %sw.bb208
    i32 45, label %sw.bb210
    i32 46, label %sw.bb211
    i32 47, label %sw.bb212
    i32 48, label %sw.bb213
    i32 49, label %sw.bb214
    i32 50, label %sw.bb215
    i32 51, label %sw.bb216
    i32 52, label %sw.bb217
    i32 53, label %sw.bb218
    i32 54, label %sw.bb221
    i32 55, label %sw.bb228
    i32 56, label %sw.bb230
    i32 57, label %sw.bb231
    i32 58, label %sw.bb234
    i32 59, label %sw.bb235
    i32 60, label %sw.bb236
    i32 61, label %sw.bb237
    i32 62, label %sw.bb238
    i32 63, label %sw.bb239
    i32 64, label %sw.bb240
    i32 65, label %sw.bb241
    i32 66, label %sw.bb242
    i32 67, label %sw.bb243
    i32 68, label %sw.bb245
    i32 69, label %sw.bb247
    i32 70, label %sw.bb257
    i32 71, label %sw.bb259
    i32 72, label %sw.bb265
    i32 73, label %sw.bb271
    i32 74, label %sw.bb272
    i32 75, label %sw.bb273
    i32 76, label %sw.bb274
    i32 78, label %sw.bb275
    i32 83, label %sw.bb277
    i32 84, label %sw.bb278
    i32 85, label %sw.bb279
    i32 86, label %sw.bb280
    i32 87, label %sw.bb281
    i32 88, label %sw.bb282
    i32 89, label %sw.bb284
    i32 90, label %sw.bb286
    i32 91, label %sw.bb288
    i32 113, label %sw.bb289
    i32 92, label %sw.bb290
    i32 93, label %sw.bb291
    i32 94, label %sw.bb294
    i32 95, label %sw.bb295
    i32 96, label %sw.bb296
    i32 2, label %sw.bb298
    i32 1500, label %sw.bb301
    i32 1503, label %sw.bb301
    i32 1501, label %sw.bb302
    i32 1502, label %sw.bb302
    i32 97, label %sw.bb307
    i32 98, label %sw.bb309
    i32 99, label %sw.bb310
    i32 100, label %sw.bb312
    i32 101, label %sw.bb314
    i32 102, label %sw.bb316
    i32 103, label %sw.bb318
    i32 104, label %sw.bb320
    i32 105, label %sw.bb322
    i32 77, label %sw.bb325
    i32 79, label %sw.bb326
    i32 80, label %sw.bb329
    i32 81, label %sw.bb332
    i32 82, label %sw.bb335
    i32 106, label %sw.bb338
    i32 107, label %sw.bb340
    i32 108, label %sw.bb348
    i32 109, label %sw.bb356
  ], !dbg !777

sw.bb:                                            ; preds = %if.end44, %if.end44
  br label %opthelp, !dbg !778

opthelp:                                          ; preds = %if.then368, %if.then165, %if.then143, %if.then135, %if.then123, %if.then115, %sw.bb
  %30 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !780
  %31 = load i8*, i8** %prog, align 8, !dbg !782
  %call45 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %30, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.358, i32 0, i32 0), i8* %31), !dbg !783
  br label %end, !dbg !784

sw.bb46:                                          ; preds = %if.end44
  call void @opt_help(%struct.options_st* getelementptr inbounds ([178 x %struct.options_st], [178 x %struct.options_st]* @s_server_options, i32 0, i32 0)), !dbg !785
  store i32 0, i32* %ret, align 4, !dbg !786
  br label %end, !dbg !787

sw.bb47:                                          ; preds = %if.end44
  %32 = load i32, i32* %socket_family, align 4, !dbg !788
  %cmp48 = icmp eq i32 %32, 1, !dbg !790
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !791

if.then49:                                        ; preds = %sw.bb47
  %33 = load i8*, i8** %host, align 8, !dbg !792
  call void @CRYPTO_free(i8* %33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1103), !dbg !794
  store i8* null, i8** %host, align 8, !dbg !795
  %34 = load i8*, i8** %port, align 8, !dbg !796
  call void @CRYPTO_free(i8* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1104), !dbg !797
  store i8* null, i8** %port, align 8, !dbg !798
  br label %if.end50, !dbg !799

if.end50:                                         ; preds = %if.then49, %sw.bb47
  store i32 2, i32* %socket_family, align 4, !dbg !800
  br label %sw.epilog, !dbg !801

sw.bb51:                                          ; preds = %if.end44
  %35 = load i32, i32* %socket_family, align 4, !dbg !802
  %cmp52 = icmp eq i32 %35, 1, !dbg !806
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !807

if.then53:                                        ; preds = %sw.bb51
  %36 = load i8*, i8** %host, align 8, !dbg !808
  call void @CRYPTO_free(i8* %36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1114), !dbg !810
  store i8* null, i8** %host, align 8, !dbg !811
  %37 = load i8*, i8** %port, align 8, !dbg !812
  call void @CRYPTO_free(i8* %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1115), !dbg !813
  store i8* null, i8** %port, align 8, !dbg !814
  br label %if.end54, !dbg !815

if.end54:                                         ; preds = %if.then53, %sw.bb51
  store i32 10, i32* %socket_family, align 4, !dbg !816
  br label %sw.epilog, !dbg !817

sw.bb55:                                          ; preds = %if.end44
  %38 = load i32, i32* %socket_family, align 4, !dbg !818
  %cmp56 = icmp eq i32 %38, 1, !dbg !820
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !821

if.then57:                                        ; preds = %sw.bb55
  store i32 0, i32* %socket_family, align 4, !dbg !822
  br label %if.end58, !dbg !824

if.end58:                                         ; preds = %if.then57, %sw.bb55
  %39 = load i8*, i8** %port, align 8, !dbg !825
  call void @CRYPTO_free(i8* %39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1131), !dbg !826
  store i8* null, i8** %port, align 8, !dbg !827
  %40 = load i8*, i8** %host, align 8, !dbg !828
  call void @CRYPTO_free(i8* %40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1132), !dbg !829
  store i8* null, i8** %host, align 8, !dbg !830
  %call59 = call i8* @opt_arg(), !dbg !831
  %call60 = call i32 @BIO_parse_hostserv(i8* %call59, i8** null, i8** %port, i32 1), !dbg !833
  %cmp61 = icmp slt i32 %call60, 1, !dbg !835
  br i1 %cmp61, label %if.then62, label %if.end64, !dbg !836

if.then62:                                        ; preds = %if.end58
  %41 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !837
  %42 = load i8*, i8** %port, align 8, !dbg !839
  %call63 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %41, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.359, i32 0, i32 0), i8* %42), !dbg !840
  br label %end, !dbg !841

if.end64:                                         ; preds = %if.end58
  br label %sw.epilog, !dbg !842

sw.bb65:                                          ; preds = %if.end44
  %43 = load i32, i32* %socket_family, align 4, !dbg !843
  %cmp66 = icmp eq i32 %43, 1, !dbg !845
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !846

if.then67:                                        ; preds = %sw.bb65
  store i32 0, i32* %socket_family, align 4, !dbg !847
  br label %if.end68, !dbg !849

if.end68:                                         ; preds = %if.then67, %sw.bb65
  %44 = load i8*, i8** %port, align 8, !dbg !850
  call void @CRYPTO_free(i8* %44, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1146), !dbg !851
  store i8* null, i8** %port, align 8, !dbg !852
  %45 = load i8*, i8** %host, align 8, !dbg !853
  call void @CRYPTO_free(i8* %45, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1147), !dbg !854
  store i8* null, i8** %host, align 8, !dbg !855
  %call69 = call i8* @opt_arg(), !dbg !856
  %call70 = call i32 @BIO_parse_hostserv(i8* %call69, i8** %host, i8** %port, i32 1), !dbg !858
  %cmp71 = icmp slt i32 %call70, 1, !dbg !860
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !861

if.then72:                                        ; preds = %if.end68
  %46 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !862
  %47 = load i8*, i8** %port, align 8, !dbg !864
  %call73 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %46, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.360, i32 0, i32 0), i8* %47), !dbg !865
  br label %end, !dbg !866

if.end74:                                         ; preds = %if.end68
  br label %sw.epilog, !dbg !867

sw.bb75:                                          ; preds = %if.end44
  store i32 1, i32* %socket_family, align 4, !dbg !868
  %48 = load i8*, i8** %host, align 8, !dbg !869
  call void @CRYPTO_free(i8* %48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1158), !dbg !870
  %call76 = call i8* @opt_arg(), !dbg !871
  %call77 = call i8* @CRYPTO_strdup(i8* %call76, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1158), !dbg !873
  store i8* %call77, i8** %host, align 8, !dbg !875
  %49 = load i8*, i8** %port, align 8, !dbg !876
  call void @CRYPTO_free(i8* %49, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 1159), !dbg !877
  store i8* null, i8** %port, align 8, !dbg !878
  br label %sw.epilog, !dbg !879

sw.bb78:                                          ; preds = %if.end44
  store i32 1, i32* %unlink_unix_path, align 4, !dbg !880
  br label %sw.epilog, !dbg !881

sw.bb79:                                          ; preds = %if.end44
  %call80 = call i8* @opt_arg(), !dbg !882
  %call81 = call i64 @atol(i8* %call80) #8, !dbg !883
  %conv = trunc i64 %call81 to i32, !dbg !884
  store i32 %conv, i32* %naccept, align 4, !dbg !885
  br label %sw.epilog, !dbg !886

sw.bb82:                                          ; preds = %if.end44
  store i32 5, i32* %s_server_verify, align 4, !dbg !887
  %call83 = call i8* @opt_arg(), !dbg !888
  %call84 = call i32 @atoi(i8* %call83) #8, !dbg !889
  store i32 %call84, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 0), align 4, !dbg !890
  %50 = load i32, i32* @s_quiet, align 4, !dbg !891
  %tobool85 = icmp ne i32 %50, 0, !dbg !891
  br i1 %tobool85, label %if.end88, label %if.then86, !dbg !893

if.then86:                                        ; preds = %sw.bb82
  %51 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !894
  %52 = load i32, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 0), align 4, !dbg !895
  %call87 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %51, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.361, i32 0, i32 0), i32 %52), !dbg !896
  br label %if.end88, !dbg !896

if.end88:                                         ; preds = %if.then86, %sw.bb82
  br label %sw.epilog, !dbg !897

sw.bb89:                                          ; preds = %if.end44
  store i32 7, i32* %s_server_verify, align 4, !dbg !898
  %call90 = call i8* @opt_arg(), !dbg !899
  %call91 = call i32 @atoi(i8* %call90) #8, !dbg !900
  store i32 %call91, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 0), align 4, !dbg !901
  %53 = load i32, i32* @s_quiet, align 4, !dbg !902
  %tobool92 = icmp ne i32 %53, 0, !dbg !902
  br i1 %tobool92, label %if.end95, label %if.then93, !dbg !904

if.then93:                                        ; preds = %sw.bb89
  %54 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !905
  %55 = load i32, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 0), align 4, !dbg !906
  %call94 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %54, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.362, i32 0, i32 0), i32 %55), !dbg !907
  br label %if.end95, !dbg !907

if.end95:                                         ; preds = %if.then93, %sw.bb89
  br label %sw.epilog, !dbg !908

sw.bb96:                                          ; preds = %if.end44
  %call97 = call i8* @opt_arg(), !dbg !909
  store i8* %call97, i8** %context, align 8, !dbg !910
  br label %sw.epilog, !dbg !911

sw.bb98:                                          ; preds = %if.end44
  %call99 = call i8* @opt_arg(), !dbg !912
  store i8* %call99, i8** %s_cert_file, align 8, !dbg !913
  br label %sw.epilog, !dbg !914

sw.bb100:                                         ; preds = %if.end44
  %call101 = call i8* @opt_arg(), !dbg !915
  %call102 = call i32 @set_nameopt(i8* %call101), !dbg !917
  %tobool103 = icmp ne i32 %call102, 0, !dbg !919
  br i1 %tobool103, label %if.end105, label %if.then104, !dbg !920

if.then104:                                       ; preds = %sw.bb100
  br label %end, !dbg !921

if.end105:                                        ; preds = %sw.bb100
  br label %sw.epilog, !dbg !922

sw.bb106:                                         ; preds = %if.end44
  %call107 = call i8* @opt_arg(), !dbg !923
  store i8* %call107, i8** %crl_file, align 8, !dbg !924
  br label %sw.epilog, !dbg !925

sw.bb108:                                         ; preds = %if.end44
  store i32 1, i32* %crl_download, align 4, !dbg !926
  br label %sw.epilog, !dbg !927

sw.bb109:                                         ; preds = %if.end44
  %call110 = call i8* @opt_arg(), !dbg !928
  store i8* %call110, i8** %s_serverinfo_file, align 8, !dbg !929
  br label %sw.epilog, !dbg !930

sw.bb111:                                         ; preds = %if.end44
  %call112 = call i8* @opt_arg(), !dbg !931
  %call113 = call i32 @opt_format(i8* %call112, i64 2, i32* %s_cert_format), !dbg !933
  %tobool114 = icmp ne i32 %call113, 0, !dbg !935
  br i1 %tobool114, label %if.end116, label %if.then115, !dbg !936

if.then115:                                       ; preds = %sw.bb111
  br label %opthelp, !dbg !937

if.end116:                                        ; preds = %sw.bb111
  br label %sw.epilog, !dbg !938

sw.bb117:                                         ; preds = %if.end44
  %call118 = call i8* @opt_arg(), !dbg !939
  store i8* %call118, i8** %s_key_file, align 8, !dbg !940
  br label %sw.epilog, !dbg !941

sw.bb119:                                         ; preds = %if.end44
  %call120 = call i8* @opt_arg(), !dbg !942
  %call121 = call i32 @opt_format(i8* %call120, i64 1982, i32* %s_key_format), !dbg !944
  %tobool122 = icmp ne i32 %call121, 0, !dbg !946
  br i1 %tobool122, label %if.end124, label %if.then123, !dbg !947

if.then123:                                       ; preds = %sw.bb119
  br label %opthelp, !dbg !948

if.end124:                                        ; preds = %sw.bb119
  br label %sw.epilog, !dbg !949

sw.bb125:                                         ; preds = %if.end44
  %call126 = call i8* @opt_arg(), !dbg !950
  store i8* %call126, i8** %passarg, align 8, !dbg !951
  br label %sw.epilog, !dbg !952

sw.bb127:                                         ; preds = %if.end44
  %call128 = call i8* @opt_arg(), !dbg !953
  store i8* %call128, i8** %s_chain_file, align 8, !dbg !954
  br label %sw.epilog, !dbg !955

sw.bb129:                                         ; preds = %if.end44
  %call130 = call i8* @opt_arg(), !dbg !956
  store i8* %call130, i8** %dhfile, align 8, !dbg !957
  br label %sw.epilog, !dbg !958

sw.bb131:                                         ; preds = %if.end44
  %call132 = call i8* @opt_arg(), !dbg !959
  %call133 = call i32 @opt_format(i8* %call132, i64 2, i32* %s_dcert_format), !dbg !961
  %tobool134 = icmp ne i32 %call133, 0, !dbg !963
  br i1 %tobool134, label %if.end136, label %if.then135, !dbg !964

if.then135:                                       ; preds = %sw.bb131
  br label %opthelp, !dbg !965

if.end136:                                        ; preds = %sw.bb131
  br label %sw.epilog, !dbg !966

sw.bb137:                                         ; preds = %if.end44
  %call138 = call i8* @opt_arg(), !dbg !967
  store i8* %call138, i8** %s_dcert_file, align 8, !dbg !968
  br label %sw.epilog, !dbg !969

sw.bb139:                                         ; preds = %if.end44
  %call140 = call i8* @opt_arg(), !dbg !970
  %call141 = call i32 @opt_format(i8* %call140, i64 2, i32* %s_dkey_format), !dbg !972
  %tobool142 = icmp ne i32 %call141, 0, !dbg !974
  br i1 %tobool142, label %if.end144, label %if.then143, !dbg !975

if.then143:                                       ; preds = %sw.bb139
  br label %opthelp, !dbg !976

if.end144:                                        ; preds = %sw.bb139
  br label %sw.epilog, !dbg !977

sw.bb145:                                         ; preds = %if.end44
  %call146 = call i8* @opt_arg(), !dbg !978
  store i8* %call146, i8** %dpassarg, align 8, !dbg !979
  br label %sw.epilog, !dbg !980

sw.bb147:                                         ; preds = %if.end44
  %call148 = call i8* @opt_arg(), !dbg !981
  store i8* %call148, i8** %s_dkey_file, align 8, !dbg !982
  br label %sw.epilog, !dbg !983

sw.bb149:                                         ; preds = %if.end44
  %call150 = call i8* @opt_arg(), !dbg !984
  store i8* %call150, i8** %s_dchain_file, align 8, !dbg !985
  br label %sw.epilog, !dbg !986

sw.bb151:                                         ; preds = %if.end44
  store i32 1, i32* %nocert, align 4, !dbg !987
  br label %sw.epilog, !dbg !988

sw.bb152:                                         ; preds = %if.end44
  %call153 = call i8* @opt_arg(), !dbg !989
  store i8* %call153, i8** %CApath, align 8, !dbg !990
  br label %sw.epilog, !dbg !991

sw.bb154:                                         ; preds = %if.end44
  store i32 1, i32* %noCApath, align 4, !dbg !992
  br label %sw.epilog, !dbg !993

sw.bb155:                                         ; preds = %if.end44
  %call156 = call i8* @opt_arg(), !dbg !994
  store i8* %call156, i8** %chCApath, align 8, !dbg !995
  br label %sw.epilog, !dbg !996

sw.bb157:                                         ; preds = %if.end44
  %call158 = call i8* @opt_arg(), !dbg !997
  store i8* %call158, i8** %vfyCApath, align 8, !dbg !998
  br label %sw.epilog, !dbg !999

sw.bb159:                                         ; preds = %if.end44
  store i32 1, i32* %no_cache, align 4, !dbg !1000
  br label %sw.epilog, !dbg !1001

sw.bb160:                                         ; preds = %if.end44
  store i32 1, i32* %ext_cache, align 4, !dbg !1002
  br label %sw.epilog, !dbg !1003

sw.bb161:                                         ; preds = %if.end44
  %call162 = call i8* @opt_arg(), !dbg !1004
  %call163 = call i32 @opt_format(i8* %call162, i64 2, i32* %crl_format), !dbg !1006
  %tobool164 = icmp ne i32 %call163, 0, !dbg !1008
  br i1 %tobool164, label %if.end166, label %if.then165, !dbg !1009

if.then165:                                       ; preds = %sw.bb161
  br label %opthelp, !dbg !1010

if.end166:                                        ; preds = %sw.bb161
  br label %sw.epilog, !dbg !1011

sw.bb167:                                         ; preds = %if.end44, %if.end44
  br label %sw.epilog, !dbg !1012

sw.bb168:                                         ; preds = %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44
  %56 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1013
  %cmp169 = icmp eq %struct.stack_st_OPENSSL_STRING* %56, null, !dbg !1015
  br i1 %cmp169, label %if.then171, label %if.end173, !dbg !1016

if.then171:                                       ; preds = %sw.bb168
  %call172 = call %struct.stack_st_OPENSSL_STRING* @sk_OPENSSL_STRING_new_null(), !dbg !1017
  store %struct.stack_st_OPENSSL_STRING* %call172, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1018
  br label %if.end173, !dbg !1019

if.end173:                                        ; preds = %if.then171, %sw.bb168
  %57 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1020
  %cmp174 = icmp eq %struct.stack_st_OPENSSL_STRING* %57, null, !dbg !1022
  br i1 %cmp174, label %if.then184, label %lor.lhs.false176, !dbg !1023

lor.lhs.false176:                                 ; preds = %if.end173
  %58 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1024
  %call177 = call i8* @opt_flag(), !dbg !1026
  %call178 = call i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %58, i8* %call177), !dbg !1027
  %tobool179 = icmp ne i32 %call178, 0, !dbg !1029
  br i1 %tobool179, label %lor.lhs.false180, label %if.then184, !dbg !1030

lor.lhs.false180:                                 ; preds = %lor.lhs.false176
  %59 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1031
  %call181 = call i8* @opt_arg(), !dbg !1032
  %call182 = call i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %59, i8* %call181), !dbg !1033
  %tobool183 = icmp ne i32 %call182, 0, !dbg !1034
  br i1 %tobool183, label %if.end186, label %if.then184, !dbg !1035

if.then184:                                       ; preds = %lor.lhs.false180, %lor.lhs.false176, %if.end173
  %60 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1036
  %61 = load i8*, i8** %prog, align 8, !dbg !1038
  %call185 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %60, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.363, i32 0, i32 0), i8* %61), !dbg !1039
  br label %end, !dbg !1040

if.end186:                                        ; preds = %lor.lhs.false180
  br label %sw.epilog, !dbg !1041

sw.bb187:                                         ; preds = %if.end44, %if.end44
  br label %sw.epilog, !dbg !1042

sw.bb188:                                         ; preds = %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44
  %62 = load i32, i32* %o, align 4, !dbg !1043
  %63 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !1045
  %call189 = call i32 @opt_verify(i32 %62, %struct.X509_VERIFY_PARAM_st* %63), !dbg !1046
  %tobool190 = icmp ne i32 %call189, 0, !dbg !1046
  br i1 %tobool190, label %if.end192, label %if.then191, !dbg !1047

if.then191:                                       ; preds = %sw.bb188
  br label %end, !dbg !1048

if.end192:                                        ; preds = %sw.bb188
  %64 = load i32, i32* %vpmtouched, align 4, !dbg !1049
  %inc193 = add nsw i32 %64, 1, !dbg !1049
  store i32 %inc193, i32* %vpmtouched, align 4, !dbg !1049
  br label %sw.epilog, !dbg !1050

sw.bb194:                                         ; preds = %if.end44, %if.end44
  br label %sw.epilog, !dbg !1051

sw.bb195:                                         ; preds = %if.end44, %if.end44, %if.end44, %if.end44, %if.end44, %if.end44
  %65 = load i32, i32* %o, align 4, !dbg !1052
  %call196 = call i32 @args_excert(i32 %65, %struct.ssl_excert_st** %exc), !dbg !1054
  %tobool197 = icmp ne i32 %call196, 0, !dbg !1054
  br i1 %tobool197, label %if.end199, label %if.then198, !dbg !1055

if.then198:                                       ; preds = %sw.bb195
  br label %end, !dbg !1056

if.end199:                                        ; preds = %sw.bb195
  br label %sw.epilog, !dbg !1057

sw.bb200:                                         ; preds = %if.end44
  store i32 1, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 3), align 4, !dbg !1058
  br label %sw.epilog, !dbg !1059

sw.bb201:                                         ; preds = %if.end44
  store i32 1, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 1), align 4, !dbg !1060
  br label %sw.epilog, !dbg !1061

sw.bb202:                                         ; preds = %if.end44
  store i32 1, i32* %build_chain, align 4, !dbg !1062
  br label %sw.epilog, !dbg !1063

sw.bb203:                                         ; preds = %if.end44
  %call204 = call i8* @opt_arg(), !dbg !1064
  store i8* %call204, i8** %CAfile, align 8, !dbg !1065
  br label %sw.epilog, !dbg !1066

sw.bb205:                                         ; preds = %if.end44
  store i32 1, i32* %noCAfile, align 4, !dbg !1067
  br label %sw.epilog, !dbg !1068

sw.bb206:                                         ; preds = %if.end44
  %call207 = call i8* @opt_arg(), !dbg !1069
  store i8* %call207, i8** %chCAfile, align 8, !dbg !1070
  br label %sw.epilog, !dbg !1071

sw.bb208:                                         ; preds = %if.end44
  %call209 = call i8* @opt_arg(), !dbg !1072
  store i8* %call209, i8** %vfyCAfile, align 8, !dbg !1073
  br label %sw.epilog, !dbg !1074

sw.bb210:                                         ; preds = %if.end44
  store i32 1, i32* @s_nbio, align 4, !dbg !1075
  br label %sw.epilog, !dbg !1076

sw.bb211:                                         ; preds = %if.end44
  store i32 1, i32* @s_nbio_test, align 4, !dbg !1077
  store i32 1, i32* @s_nbio, align 4, !dbg !1078
  br label %sw.epilog, !dbg !1079

sw.bb212:                                         ; preds = %if.end44
  store i32 1, i32* @s_ign_eof, align 4, !dbg !1080
  br label %sw.epilog, !dbg !1081

sw.bb213:                                         ; preds = %if.end44
  store i32 0, i32* @s_ign_eof, align 4, !dbg !1082
  br label %sw.epilog, !dbg !1083

sw.bb214:                                         ; preds = %if.end44
  store i32 1, i32* @s_debug, align 4, !dbg !1084
  br label %sw.epilog, !dbg !1085

sw.bb215:                                         ; preds = %if.end44
  store i32 1, i32* @s_tlsextdebug, align 4, !dbg !1086
  br label %sw.epilog, !dbg !1087

sw.bb216:                                         ; preds = %if.end44
  store i32 1, i32* %s_tlsextstatus, align 4, !dbg !1088
  br label %sw.epilog, !dbg !1089

sw.bb217:                                         ; preds = %if.end44
  store i32 1, i32* getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 6), align 4, !dbg !1090
  store i32 1, i32* %s_tlsextstatus, align 4, !dbg !1091
  br label %sw.epilog, !dbg !1092

sw.bb218:                                         ; preds = %if.end44
  store i32 1, i32* %s_tlsextstatus, align 4, !dbg !1093
  %call219 = call i8* @opt_arg(), !dbg !1094
  %call220 = call i32 @atoi(i8* %call219) #8, !dbg !1095
  store i32 %call220, i32* getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 0), align 8, !dbg !1096
  br label %sw.epilog, !dbg !1097

sw.bb221:                                         ; preds = %if.end44
  store i32 1, i32* %s_tlsextstatus, align 4, !dbg !1098
  %call222 = call i8* @opt_arg(), !dbg !1099
  %call223 = call i32 @OCSP_parse_url(i8* %call222, i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 2), i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 4), i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 3), i32* getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 5)), !dbg !1101
  %tobool224 = icmp ne i32 %call223, 0, !dbg !1103
  br i1 %tobool224, label %if.end227, label %if.then225, !dbg !1104

if.then225:                                       ; preds = %sw.bb221
  %66 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1105
  %call226 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %66, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.364, i32 0, i32 0)), !dbg !1107
  br label %end, !dbg !1108

if.end227:                                        ; preds = %sw.bb221
  br label %sw.epilog, !dbg !1109

sw.bb228:                                         ; preds = %if.end44
  store i32 1, i32* %s_tlsextstatus, align 4, !dbg !1110
  %call229 = call i8* @opt_arg(), !dbg !1111
  store i8* %call229, i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 1), align 8, !dbg !1112
  br label %sw.epilog, !dbg !1113

sw.bb230:                                         ; preds = %if.end44
  store i32 1, i32* @s_msg, align 4, !dbg !1114
  br label %sw.epilog, !dbg !1115

sw.bb231:                                         ; preds = %if.end44
  %call232 = call i8* @opt_arg(), !dbg !1116
  %call233 = call %struct.bio_st* @BIO_new_file(i8* %call232, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.365, i32 0, i32 0)), !dbg !1117
  store %struct.bio_st* %call233, %struct.bio_st** @bio_s_msg, align 8, !dbg !1118
  br label %sw.epilog, !dbg !1119

sw.bb234:                                         ; preds = %if.end44
  br label %sw.epilog, !dbg !1120

sw.bb235:                                         ; preds = %if.end44
  store i32 1, i32* %sdebug, align 4, !dbg !1121
  br label %sw.epilog, !dbg !1122

sw.bb236:                                         ; preds = %if.end44
  store i32 2, i32* %sdebug, align 4, !dbg !1123
  br label %sw.epilog, !dbg !1124

sw.bb237:                                         ; preds = %if.end44
  store i32 1, i32* %state, align 4, !dbg !1125
  br label %sw.epilog, !dbg !1126

sw.bb238:                                         ; preds = %if.end44
  store i32 1, i32* @s_crlf, align 4, !dbg !1127
  br label %sw.epilog, !dbg !1128

sw.bb239:                                         ; preds = %if.end44
  store i32 1, i32* @s_quiet, align 4, !dbg !1129
  br label %sw.epilog, !dbg !1130

sw.bb240:                                         ; preds = %if.end44
  store i32 1, i32* getelementptr inbounds (%struct.verify_options_st, %struct.verify_options_st* @verify_args, i32 0, i32 1), align 4, !dbg !1131
  store i32 1, i32* @s_brief, align 4, !dbg !1132
  store i32 1, i32* @s_quiet, align 4, !dbg !1133
  br label %sw.epilog, !dbg !1134

sw.bb241:                                         ; preds = %if.end44
  store i32 1, i32* %no_dhe, align 4, !dbg !1135
  br label %sw.epilog, !dbg !1136

sw.bb242:                                         ; preds = %if.end44
  store i32 1, i32* %no_resume_ephemeral, align 4, !dbg !1137
  br label %sw.epilog, !dbg !1138

sw.bb243:                                         ; preds = %if.end44
  %call244 = call i8* @opt_arg(), !dbg !1139
  store i8* %call244, i8** @psk_identity, align 8, !dbg !1140
  br label %sw.epilog, !dbg !1141

sw.bb245:                                         ; preds = %if.end44
  %call246 = call i8* @opt_arg(), !dbg !1142
  store i8* %call246, i8** %psk_identity_hint, align 8, !dbg !1143
  br label %sw.epilog, !dbg !1144

sw.bb247:                                         ; preds = %if.end44
  %call248 = call i8* @opt_arg(), !dbg !1145
  store i8* %call248, i8** @psk_key, align 8, !dbg !1147
  store i8* %call248, i8** %p, align 8, !dbg !1148
  br label %for.cond, !dbg !1149

for.cond:                                         ; preds = %for.inc, %sw.bb247
  %67 = load i8*, i8** %p, align 8, !dbg !1150
  %68 = load i8, i8* %67, align 1, !dbg !1153
  %tobool249 = icmp ne i8 %68, 0, !dbg !1154
  br i1 %tobool249, label %for.body, label %for.end, !dbg !1154

for.body:                                         ; preds = %for.cond
  %69 = load i8*, i8** %p, align 8, !dbg !1155
  %70 = load i8, i8* %69, align 1, !dbg !1158
  %conv250 = zext i8 %70 to i32, !dbg !1159
  %idxprom = sext i32 %conv250 to i64, !dbg !1160
  %call251 = call i16** @__ctype_b_loc() #1, !dbg !1161
  %71 = load i16*, i16** %call251, align 8, !dbg !1162
  %arrayidx = getelementptr inbounds i16, i16* %71, i64 %idxprom, !dbg !1160
  %72 = load i16, i16* %arrayidx, align 2, !dbg !1160
  %conv252 = zext i16 %72 to i32, !dbg !1160
  %and = and i32 %conv252, 4096, !dbg !1163
  %tobool253 = icmp ne i32 %and, 0, !dbg !1163
  br i1 %tobool253, label %if.then254, label %if.end255, !dbg !1164

if.then254:                                       ; preds = %for.body
  br label %for.inc, !dbg !1165

if.end255:                                        ; preds = %for.body
  %73 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1166
  %74 = load i8*, i8** @psk_key, align 8, !dbg !1167
  %call256 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %73, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.366, i32 0, i32 0), i8* %74), !dbg !1168
  br label %end, !dbg !1169

for.inc:                                          ; preds = %if.then254
  %75 = load i8*, i8** %p, align 8, !dbg !1170
  %incdec.ptr = getelementptr inbounds i8, i8* %75, i32 1, !dbg !1170
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1170
  br label %for.cond, !dbg !1172, !llvm.loop !1173

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !1175

sw.bb257:                                         ; preds = %if.end44
  %call258 = call i8* @opt_arg(), !dbg !1176
  store i8* %call258, i8** %psksessf, align 8, !dbg !1177
  br label %sw.epilog, !dbg !1178

sw.bb259:                                         ; preds = %if.end44
  %call260 = call i8* @opt_arg(), !dbg !1179
  store i8* %call260, i8** %srp_verifier_file, align 8, !dbg !1180
  %76 = load i32, i32* %min_version, align 4, !dbg !1181
  %cmp261 = icmp slt i32 %76, 769, !dbg !1183
  br i1 %cmp261, label %if.then263, label %if.end264, !dbg !1184

if.then263:                                       ; preds = %sw.bb259
  store i32 769, i32* %min_version, align 4, !dbg !1185
  br label %if.end264, !dbg !1186

if.end264:                                        ; preds = %if.then263, %sw.bb259
  br label %sw.epilog, !dbg !1187

sw.bb265:                                         ; preds = %if.end44
  %call266 = call i8* @opt_arg(), !dbg !1188
  store i8* %call266, i8** %srpuserseed, align 8, !dbg !1189
  %77 = load i32, i32* %min_version, align 4, !dbg !1190
  %cmp267 = icmp slt i32 %77, 769, !dbg !1192
  br i1 %cmp267, label %if.then269, label %if.end270, !dbg !1193

if.then269:                                       ; preds = %sw.bb265
  store i32 769, i32* %min_version, align 4, !dbg !1194
  br label %if.end270, !dbg !1195

if.end270:                                        ; preds = %if.then269, %sw.bb265
  br label %sw.epilog, !dbg !1196

sw.bb271:                                         ; preds = %if.end44
  store i32 1, i32* %rev, align 4, !dbg !1197
  br label %sw.epilog, !dbg !1198

sw.bb272:                                         ; preds = %if.end44
  store i32 1, i32* @www, align 4, !dbg !1199
  br label %sw.epilog, !dbg !1200

sw.bb273:                                         ; preds = %if.end44
  store i32 2, i32* @www, align 4, !dbg !1201
  br label %sw.epilog, !dbg !1202

sw.bb274:                                         ; preds = %if.end44
  store i32 3, i32* @www, align 4, !dbg !1203
  br label %sw.epilog, !dbg !1204

sw.bb275:                                         ; preds = %if.end44
  %call276 = call i8* @opt_arg(), !dbg !1205
  store i8* %call276, i8** %ssl_config, align 8, !dbg !1206
  br label %sw.epilog, !dbg !1207

sw.bb277:                                         ; preds = %if.end44
  store i32 768, i32* %min_version, align 4, !dbg !1208
  store i32 768, i32* %max_version, align 4, !dbg !1209
  br label %sw.epilog, !dbg !1210

sw.bb278:                                         ; preds = %if.end44
  store i32 772, i32* %min_version, align 4, !dbg !1211
  store i32 772, i32* %max_version, align 4, !dbg !1212
  br label %sw.epilog, !dbg !1213

sw.bb279:                                         ; preds = %if.end44
  store i32 771, i32* %min_version, align 4, !dbg !1214
  store i32 771, i32* %max_version, align 4, !dbg !1215
  br label %sw.epilog, !dbg !1216

sw.bb280:                                         ; preds = %if.end44
  store i32 770, i32* %min_version, align 4, !dbg !1217
  store i32 770, i32* %max_version, align 4, !dbg !1218
  br label %sw.epilog, !dbg !1219

sw.bb281:                                         ; preds = %if.end44
  store i32 769, i32* %min_version, align 4, !dbg !1220
  store i32 769, i32* %max_version, align 4, !dbg !1221
  br label %sw.epilog, !dbg !1222

sw.bb282:                                         ; preds = %if.end44
  %call283 = call %struct.ssl_method_st* @DTLS_server_method(), !dbg !1223
  store %struct.ssl_method_st* %call283, %struct.ssl_method_st** %meth, align 8, !dbg !1224
  store i32 2, i32* %socket_type, align 4, !dbg !1225
  br label %sw.epilog, !dbg !1226

sw.bb284:                                         ; preds = %if.end44
  %call285 = call %struct.ssl_method_st* @DTLS_server_method(), !dbg !1227
  store %struct.ssl_method_st* %call285, %struct.ssl_method_st** %meth, align 8, !dbg !1228
  store i32 65279, i32* %min_version, align 4, !dbg !1229
  store i32 65279, i32* %max_version, align 4, !dbg !1230
  store i32 2, i32* %socket_type, align 4, !dbg !1231
  br label %sw.epilog, !dbg !1232

sw.bb286:                                         ; preds = %if.end44
  %call287 = call %struct.ssl_method_st* @DTLS_server_method(), !dbg !1233
  store %struct.ssl_method_st* %call287, %struct.ssl_method_st** %meth, align 8, !dbg !1234
  store i32 65277, i32* %min_version, align 4, !dbg !1235
  store i32 65277, i32* %max_version, align 4, !dbg !1236
  store i32 2, i32* %socket_type, align 4, !dbg !1237
  br label %sw.epilog, !dbg !1238

sw.bb288:                                         ; preds = %if.end44
  br label %sw.epilog, !dbg !1239

sw.bb289:                                         ; preds = %if.end44
  br label %sw.epilog, !dbg !1240

sw.bb290:                                         ; preds = %if.end44
  store i32 1, i32* @enable_timeouts, align 4, !dbg !1241
  br label %sw.epilog, !dbg !1242

sw.bb291:                                         ; preds = %if.end44
  %call292 = call i8* @opt_arg(), !dbg !1243
  %call293 = call i64 @atol(i8* %call292) #8, !dbg !1244
  store i64 %call293, i64* @socket_mtu, align 8, !dbg !1245
  br label %sw.epilog, !dbg !1246

sw.bb294:                                         ; preds = %if.end44
  store i32 1, i32* @dtlslisten, align 4, !dbg !1247
  br label %sw.epilog, !dbg !1248

sw.bb295:                                         ; preds = %if.end44
  store i32 1, i32* @stateless, align 4, !dbg !1249
  br label %sw.epilog, !dbg !1250

sw.bb296:                                         ; preds = %if.end44
  %call297 = call i8* @opt_arg(), !dbg !1251
  store i8* %call297, i8** @session_id_prefix, align 8, !dbg !1252
  br label %sw.epilog, !dbg !1253

sw.bb298:                                         ; preds = %if.end44
  %call299 = call i8* @opt_arg(), !dbg !1254
  %call300 = call %struct.engine_st* @setup_engine(i8* %call299, i32 1), !dbg !1255
  store %struct.engine_st* %call300, %struct.engine_st** %engine, align 8, !dbg !1256
  br label %sw.epilog, !dbg !1257

sw.bb301:                                         ; preds = %if.end44, %if.end44
  br label %sw.epilog, !dbg !1258

sw.bb302:                                         ; preds = %if.end44, %if.end44
  %78 = load i32, i32* %o, align 4, !dbg !1259
  %call303 = call i32 @opt_rand(i32 %78), !dbg !1261
  %tobool304 = icmp ne i32 %call303, 0, !dbg !1261
  br i1 %tobool304, label %if.end306, label %if.then305, !dbg !1262

if.then305:                                       ; preds = %sw.bb302
  br label %end, !dbg !1263

if.end306:                                        ; preds = %sw.bb302
  br label %sw.epilog, !dbg !1264

sw.bb307:                                         ; preds = %if.end44
  %call308 = call i8* @opt_arg(), !dbg !1265
  %servername = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %tlsextcbp, i32 0, i32 0, !dbg !1266
  store i8* %call308, i8** %servername, align 8, !dbg !1267
  br label %sw.epilog, !dbg !1268

sw.bb309:                                         ; preds = %if.end44
  %extension_error = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %tlsextcbp, i32 0, i32 2, !dbg !1269
  store i32 2, i32* %extension_error, align 8, !dbg !1270
  br label %sw.epilog, !dbg !1271

sw.bb310:                                         ; preds = %if.end44
  %call311 = call i8* @opt_arg(), !dbg !1272
  store i8* %call311, i8** %s_cert_file2, align 8, !dbg !1273
  br label %sw.epilog, !dbg !1274

sw.bb312:                                         ; preds = %if.end44
  %call313 = call i8* @opt_arg(), !dbg !1275
  store i8* %call313, i8** %s_key_file2, align 8, !dbg !1276
  br label %sw.epilog, !dbg !1277

sw.bb314:                                         ; preds = %if.end44
  %call315 = call i8* @opt_arg(), !dbg !1278
  store i8* %call315, i8** %next_proto_neg_in, align 8, !dbg !1279
  br label %sw.epilog, !dbg !1280

sw.bb316:                                         ; preds = %if.end44
  %call317 = call i8* @opt_arg(), !dbg !1281
  store i8* %call317, i8** %alpn_in, align 8, !dbg !1282
  br label %sw.epilog, !dbg !1283

sw.bb318:                                         ; preds = %if.end44
  %call319 = call i8* @opt_arg(), !dbg !1284
  store i8* %call319, i8** %srtp_profiles, align 8, !dbg !1285
  br label %sw.epilog, !dbg !1286

sw.bb320:                                         ; preds = %if.end44
  %call321 = call i8* @opt_arg(), !dbg !1287
  store i8* %call321, i8** @keymatexportlabel, align 8, !dbg !1288
  br label %sw.epilog, !dbg !1289

sw.bb322:                                         ; preds = %if.end44
  %call323 = call i8* @opt_arg(), !dbg !1290
  %call324 = call i32 @atoi(i8* %call323) #8, !dbg !1291
  store i32 %call324, i32* @keymatexportlen, align 4, !dbg !1292
  br label %sw.epilog, !dbg !1293

sw.bb325:                                         ; preds = %if.end44
  store i32 1, i32* @async, align 4, !dbg !1294
  br label %sw.epilog, !dbg !1295

sw.bb326:                                         ; preds = %if.end44
  %call327 = call i8* @opt_arg(), !dbg !1296
  %call328 = call i32 @atoi(i8* %call327) #8, !dbg !1297
  store i32 %call328, i32* %max_send_fragment, align 4, !dbg !1298
  br label %sw.epilog, !dbg !1299

sw.bb329:                                         ; preds = %if.end44
  %call330 = call i8* @opt_arg(), !dbg !1300
  %call331 = call i32 @atoi(i8* %call330) #8, !dbg !1301
  store i32 %call331, i32* %split_send_fragment, align 4, !dbg !1302
  br label %sw.epilog, !dbg !1303

sw.bb332:                                         ; preds = %if.end44
  %call333 = call i8* @opt_arg(), !dbg !1304
  %call334 = call i32 @atoi(i8* %call333) #8, !dbg !1305
  store i32 %call334, i32* %max_pipelines, align 4, !dbg !1306
  br label %sw.epilog, !dbg !1307

sw.bb335:                                         ; preds = %if.end44
  %call336 = call i8* @opt_arg(), !dbg !1308
  %call337 = call i32 @atoi(i8* %call336) #8, !dbg !1309
  store i32 %call337, i32* %read_buf_len, align 4, !dbg !1310
  br label %sw.epilog, !dbg !1311

sw.bb338:                                         ; preds = %if.end44
  %call339 = call i8* @opt_arg(), !dbg !1312
  store i8* %call339, i8** %keylog_file, align 8, !dbg !1313
  br label %sw.epilog, !dbg !1314

sw.bb340:                                         ; preds = %if.end44
  %call341 = call i8* @opt_arg(), !dbg !1315
  %call342 = call i32 @atoi(i8* %call341) #8, !dbg !1316
  store i32 %call342, i32* %max_early_data, align 4, !dbg !1317
  %79 = load i32, i32* %max_early_data, align 4, !dbg !1318
  %cmp343 = icmp slt i32 %79, 0, !dbg !1320
  br i1 %cmp343, label %if.then345, label %if.end347, !dbg !1321

if.then345:                                       ; preds = %sw.bb340
  %80 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1322
  %call346 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %80, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.367, i32 0, i32 0)), !dbg !1324
  br label %end, !dbg !1325

if.end347:                                        ; preds = %sw.bb340
  br label %sw.epilog, !dbg !1326

sw.bb348:                                         ; preds = %if.end44
  %call349 = call i8* @opt_arg(), !dbg !1327
  %call350 = call i32 @atoi(i8* %call349) #8, !dbg !1328
  store i32 %call350, i32* %recv_max_early_data, align 4, !dbg !1329
  %81 = load i32, i32* %recv_max_early_data, align 4, !dbg !1330
  %cmp351 = icmp slt i32 %81, 0, !dbg !1332
  br i1 %cmp351, label %if.then353, label %if.end355, !dbg !1333

if.then353:                                       ; preds = %sw.bb348
  %82 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1334
  %call354 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %82, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.368, i32 0, i32 0)), !dbg !1336
  br label %end, !dbg !1337

if.end355:                                        ; preds = %sw.bb348
  br label %sw.epilog, !dbg !1338

sw.bb356:                                         ; preds = %if.end44
  store i32 1, i32* @early_data, align 4, !dbg !1339
  %83 = load i32, i32* %max_early_data, align 4, !dbg !1340
  %cmp357 = icmp eq i32 %83, -1, !dbg !1342
  br i1 %cmp357, label %if.then359, label %if.end360, !dbg !1343

if.then359:                                       ; preds = %sw.bb356
  store i32 16384, i32* %max_early_data, align 4, !dbg !1344
  br label %if.end360, !dbg !1345

if.end360:                                        ; preds = %if.then359, %sw.bb356
  br label %sw.epilog, !dbg !1346

sw.epilog:                                        ; preds = %if.end44, %if.end360, %if.end355, %if.end347, %sw.bb338, %sw.bb335, %sw.bb332, %sw.bb329, %sw.bb326, %sw.bb325, %sw.bb322, %sw.bb320, %sw.bb318, %sw.bb316, %sw.bb314, %sw.bb312, %sw.bb310, %sw.bb309, %sw.bb307, %if.end306, %sw.bb301, %sw.bb298, %sw.bb296, %sw.bb295, %sw.bb294, %sw.bb291, %sw.bb290, %sw.bb289, %sw.bb288, %sw.bb286, %sw.bb284, %sw.bb282, %sw.bb281, %sw.bb280, %sw.bb279, %sw.bb278, %sw.bb277, %sw.bb275, %sw.bb274, %sw.bb273, %sw.bb272, %sw.bb271, %if.end270, %if.end264, %sw.bb257, %for.end, %sw.bb245, %sw.bb243, %sw.bb242, %sw.bb241, %sw.bb240, %sw.bb239, %sw.bb238, %sw.bb237, %sw.bb236, %sw.bb235, %sw.bb234, %sw.bb231, %sw.bb230, %sw.bb228, %if.end227, %sw.bb218, %sw.bb217, %sw.bb216, %sw.bb215, %sw.bb214, %sw.bb213, %sw.bb212, %sw.bb211, %sw.bb210, %sw.bb208, %sw.bb206, %sw.bb205, %sw.bb203, %sw.bb202, %sw.bb201, %sw.bb200, %if.end199, %sw.bb194, %if.end192, %sw.bb187, %if.end186, %sw.bb167, %if.end166, %sw.bb160, %sw.bb159, %sw.bb157, %sw.bb155, %sw.bb154, %sw.bb152, %sw.bb151, %sw.bb149, %sw.bb147, %sw.bb145, %if.end144, %sw.bb137, %if.end136, %sw.bb129, %sw.bb127, %sw.bb125, %if.end124, %sw.bb117, %if.end116, %sw.bb109, %sw.bb108, %sw.bb106, %if.end105, %sw.bb98, %sw.bb96, %if.end95, %if.end88, %sw.bb79, %sw.bb78, %sw.bb75, %if.end74, %if.end64, %if.end54, %if.end50
  br label %while.cond, !dbg !1347, !llvm.loop !1349

while.end:                                        ; preds = %while.cond
  %call361 = call i32 @opt_num_rest(), !dbg !1350
  store i32 %call361, i32* %argc.addr, align 4, !dbg !1351
  %call362 = call i8** @opt_rest(), !dbg !1352
  store i8** %call362, i8*** %argv.addr, align 8, !dbg !1353
  %84 = load i32, i32* %min_version, align 4, !dbg !1354
  %cmp363 = icmp eq i32 %84, 772, !dbg !1356
  br i1 %cmp363, label %land.lhs.true365, label %if.end370, !dbg !1357

land.lhs.true365:                                 ; preds = %while.end
  %85 = load i8*, i8** %next_proto_neg_in, align 8, !dbg !1358
  %cmp366 = icmp ne i8* %85, null, !dbg !1360
  br i1 %cmp366, label %if.then368, label %if.end370, !dbg !1361

if.then368:                                       ; preds = %land.lhs.true365
  %86 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1362
  %call369 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %86, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.369, i32 0, i32 0)), !dbg !1364
  br label %opthelp, !dbg !1365

if.end370:                                        ; preds = %land.lhs.true365, %while.end
  %87 = load i32, i32* @www, align 4, !dbg !1366
  %tobool371 = icmp ne i32 %87, 0, !dbg !1366
  br i1 %tobool371, label %land.lhs.true372, label %if.end377, !dbg !1368

land.lhs.true372:                                 ; preds = %if.end370
  %88 = load i32, i32* %socket_type, align 4, !dbg !1369
  %cmp373 = icmp eq i32 %88, 2, !dbg !1371
  br i1 %cmp373, label %if.then375, label %if.end377, !dbg !1372

if.then375:                                       ; preds = %land.lhs.true372
  %89 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1373
  %call376 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %89, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.370, i32 0, i32 0)), !dbg !1375
  br label %end, !dbg !1376

if.end377:                                        ; preds = %land.lhs.true372, %if.end370
  %90 = load i32, i32* @dtlslisten, align 4, !dbg !1377
  %tobool378 = icmp ne i32 %90, 0, !dbg !1377
  br i1 %tobool378, label %land.lhs.true379, label %if.end384, !dbg !1379

land.lhs.true379:                                 ; preds = %if.end377
  %91 = load i32, i32* %socket_type, align 4, !dbg !1380
  %cmp380 = icmp ne i32 %91, 2, !dbg !1382
  br i1 %cmp380, label %if.then382, label %if.end384, !dbg !1383

if.then382:                                       ; preds = %land.lhs.true379
  %92 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1384
  %call383 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %92, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.371, i32 0, i32 0)), !dbg !1386
  br label %end, !dbg !1387

if.end384:                                        ; preds = %land.lhs.true379, %if.end377
  %93 = load i32, i32* @stateless, align 4, !dbg !1388
  %tobool385 = icmp ne i32 %93, 0, !dbg !1388
  br i1 %tobool385, label %land.lhs.true386, label %if.end391, !dbg !1390

land.lhs.true386:                                 ; preds = %if.end384
  %94 = load i32, i32* %socket_type, align 4, !dbg !1391
  %cmp387 = icmp ne i32 %94, 1, !dbg !1393
  br i1 %cmp387, label %if.then389, label %if.end391, !dbg !1394

if.then389:                                       ; preds = %land.lhs.true386
  %95 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1395
  %call390 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %95, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.372, i32 0, i32 0)), !dbg !1397
  br label %end, !dbg !1398

if.end391:                                        ; preds = %land.lhs.true386, %if.end384
  %96 = load i32, i32* %socket_family, align 4, !dbg !1399
  %cmp392 = icmp eq i32 %96, 1, !dbg !1401
  br i1 %cmp392, label %land.lhs.true394, label %if.end399, !dbg !1402

land.lhs.true394:                                 ; preds = %if.end391
  %97 = load i32, i32* %socket_type, align 4, !dbg !1403
  %cmp395 = icmp ne i32 %97, 1, !dbg !1405
  br i1 %cmp395, label %if.then397, label %if.end399, !dbg !1406

if.then397:                                       ; preds = %land.lhs.true394
  %98 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1407
  %call398 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %98, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.373, i32 0, i32 0)), !dbg !1409
  br label %end, !dbg !1410

if.end399:                                        ; preds = %land.lhs.true394, %if.end391
  %99 = load i32, i32* @early_data, align 4, !dbg !1411
  %tobool400 = icmp ne i32 %99, 0, !dbg !1411
  br i1 %tobool400, label %land.lhs.true401, label %if.end408, !dbg !1413

land.lhs.true401:                                 ; preds = %if.end399
  %100 = load i32, i32* @www, align 4, !dbg !1414
  %cmp402 = icmp sgt i32 %100, 0, !dbg !1416
  br i1 %cmp402, label %if.then406, label %lor.lhs.false404, !dbg !1417

lor.lhs.false404:                                 ; preds = %land.lhs.true401
  %101 = load i32, i32* %rev, align 4, !dbg !1418
  %tobool405 = icmp ne i32 %101, 0, !dbg !1418
  br i1 %tobool405, label %if.then406, label %if.end408, !dbg !1420

if.then406:                                       ; preds = %lor.lhs.false404, %land.lhs.true401
  %102 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1421
  %call407 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %102, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.374, i32 0, i32 0)), !dbg !1423
  br label %end, !dbg !1424

if.end408:                                        ; preds = %lor.lhs.false404, %if.end399
  %103 = load i8*, i8** %passarg, align 8, !dbg !1425
  %104 = load i8*, i8** %dpassarg, align 8, !dbg !1427
  %call409 = call i32 @app_passwd(i8* %103, i8* %104, i8** %pass, i8** %dpass), !dbg !1428
  %tobool410 = icmp ne i32 %call409, 0, !dbg !1428
  br i1 %tobool410, label %if.end413, label %if.then411, !dbg !1429

if.then411:                                       ; preds = %if.end408
  %105 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1430
  %call412 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %105, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.375, i32 0, i32 0)), !dbg !1432
  br label %end, !dbg !1433

if.end413:                                        ; preds = %if.end408
  %106 = load i8*, i8** %s_key_file, align 8, !dbg !1434
  %cmp414 = icmp eq i8* %106, null, !dbg !1436
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !1437

if.then416:                                       ; preds = %if.end413
  %107 = load i8*, i8** %s_cert_file, align 8, !dbg !1438
  store i8* %107, i8** %s_key_file, align 8, !dbg !1439
  br label %if.end417, !dbg !1440

if.end417:                                        ; preds = %if.then416, %if.end413
  %108 = load i8*, i8** %s_key_file2, align 8, !dbg !1441
  %cmp418 = icmp eq i8* %108, null, !dbg !1443
  br i1 %cmp418, label %if.then420, label %if.end421, !dbg !1444

if.then420:                                       ; preds = %if.end417
  %109 = load i8*, i8** %s_cert_file2, align 8, !dbg !1445
  store i8* %109, i8** %s_key_file2, align 8, !dbg !1446
  br label %if.end421, !dbg !1447

if.end421:                                        ; preds = %if.then420, %if.end417
  %call422 = call i32 @load_excert(%struct.ssl_excert_st** %exc), !dbg !1448
  %tobool423 = icmp ne i32 %call422, 0, !dbg !1448
  br i1 %tobool423, label %if.end425, label %if.then424, !dbg !1450

if.then424:                                       ; preds = %if.end421
  br label %end, !dbg !1451

if.end425:                                        ; preds = %if.end421
  %110 = load i32, i32* %nocert, align 4, !dbg !1452
  %cmp426 = icmp eq i32 %110, 0, !dbg !1454
  br i1 %cmp426, label %if.then428, label %if.end462, !dbg !1455

if.then428:                                       ; preds = %if.end425
  %111 = load i8*, i8** %s_key_file, align 8, !dbg !1456
  %112 = load i32, i32* %s_key_format, align 4, !dbg !1458
  %113 = load i8*, i8** %pass, align 8, !dbg !1459
  %114 = load %struct.engine_st*, %struct.engine_st** %engine, align 8, !dbg !1460
  %call429 = call %struct.evp_pkey_st* @load_key(i8* %111, i32 %112, i32 0, i8* %113, %struct.engine_st* %114, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.376, i32 0, i32 0)), !dbg !1461
  store %struct.evp_pkey_st* %call429, %struct.evp_pkey_st** %s_key, align 8, !dbg !1462
  %115 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_key, align 8, !dbg !1463
  %cmp430 = icmp eq %struct.evp_pkey_st* %115, null, !dbg !1465
  br i1 %cmp430, label %if.then432, label %if.end433, !dbg !1466

if.then432:                                       ; preds = %if.then428
  %116 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1467
  call void @ERR_print_errors(%struct.bio_st* %116), !dbg !1469
  br label %end, !dbg !1470

if.end433:                                        ; preds = %if.then428
  %117 = load i8*, i8** %s_cert_file, align 8, !dbg !1471
  %118 = load i32, i32* %s_cert_format, align 4, !dbg !1472
  %call434 = call %struct.x509_st* @load_cert(i8* %117, i32 %118, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.377, i32 0, i32 0)), !dbg !1473
  store %struct.x509_st* %call434, %struct.x509_st** %s_cert, align 8, !dbg !1474
  %119 = load %struct.x509_st*, %struct.x509_st** %s_cert, align 8, !dbg !1475
  %cmp435 = icmp eq %struct.x509_st* %119, null, !dbg !1477
  br i1 %cmp435, label %if.then437, label %if.end438, !dbg !1478

if.then437:                                       ; preds = %if.end433
  %120 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1479
  call void @ERR_print_errors(%struct.bio_st* %120), !dbg !1481
  br label %end, !dbg !1482

if.end438:                                        ; preds = %if.end433
  %121 = load i8*, i8** %s_chain_file, align 8, !dbg !1483
  %cmp439 = icmp ne i8* %121, null, !dbg !1485
  br i1 %cmp439, label %if.then441, label %if.end446, !dbg !1486

if.then441:                                       ; preds = %if.end438
  %122 = load i8*, i8** %s_chain_file, align 8, !dbg !1487
  %call442 = call i32 @load_certs(i8* %122, %struct.stack_st_X509** %s_chain, i32 32773, i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.378, i32 0, i32 0)), !dbg !1490
  %tobool443 = icmp ne i32 %call442, 0, !dbg !1490
  br i1 %tobool443, label %if.end445, label %if.then444, !dbg !1491

if.then444:                                       ; preds = %if.then441
  br label %end, !dbg !1492

if.end445:                                        ; preds = %if.then441
  br label %if.end446, !dbg !1493

if.end446:                                        ; preds = %if.end445, %if.end438
  %servername447 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %tlsextcbp, i32 0, i32 0, !dbg !1494
  %123 = load i8*, i8** %servername447, align 8, !dbg !1494
  %cmp448 = icmp ne i8* %123, null, !dbg !1496
  br i1 %cmp448, label %if.then450, label %if.end461, !dbg !1497

if.then450:                                       ; preds = %if.end446
  %124 = load i8*, i8** %s_key_file2, align 8, !dbg !1498
  %125 = load i32, i32* %s_key_format, align 4, !dbg !1500
  %126 = load i8*, i8** %pass, align 8, !dbg !1501
  %127 = load %struct.engine_st*, %struct.engine_st** %engine, align 8, !dbg !1502
  %call451 = call %struct.evp_pkey_st* @load_key(i8* %124, i32 %125, i32 0, i8* %126, %struct.engine_st* %127, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.379, i32 0, i32 0)), !dbg !1503
  store %struct.evp_pkey_st* %call451, %struct.evp_pkey_st** %s_key2, align 8, !dbg !1504
  %128 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_key2, align 8, !dbg !1505
  %cmp452 = icmp eq %struct.evp_pkey_st* %128, null, !dbg !1507
  br i1 %cmp452, label %if.then454, label %if.end455, !dbg !1508

if.then454:                                       ; preds = %if.then450
  %129 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1509
  call void @ERR_print_errors(%struct.bio_st* %129), !dbg !1511
  br label %end, !dbg !1512

if.end455:                                        ; preds = %if.then450
  %130 = load i8*, i8** %s_cert_file2, align 8, !dbg !1513
  %131 = load i32, i32* %s_cert_format, align 4, !dbg !1514
  %call456 = call %struct.x509_st* @load_cert(i8* %130, i32 %131, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.380, i32 0, i32 0)), !dbg !1515
  store %struct.x509_st* %call456, %struct.x509_st** %s_cert2, align 8, !dbg !1516
  %132 = load %struct.x509_st*, %struct.x509_st** %s_cert2, align 8, !dbg !1517
  %cmp457 = icmp eq %struct.x509_st* %132, null, !dbg !1519
  br i1 %cmp457, label %if.then459, label %if.end460, !dbg !1520

if.then459:                                       ; preds = %if.end455
  %133 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1521
  call void @ERR_print_errors(%struct.bio_st* %133), !dbg !1523
  br label %end, !dbg !1524

if.end460:                                        ; preds = %if.end455
  br label %if.end461, !dbg !1525

if.end461:                                        ; preds = %if.end460, %if.end446
  br label %if.end462, !dbg !1526

if.end462:                                        ; preds = %if.end461, %if.end425
  %134 = load i8*, i8** %next_proto_neg_in, align 8, !dbg !1527
  %tobool463 = icmp ne i8* %134, null, !dbg !1527
  br i1 %tobool463, label %if.then464, label %if.end471, !dbg !1529

if.then464:                                       ; preds = %if.end462
  %len = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %next_proto, i32 0, i32 1, !dbg !1530
  %135 = load i8*, i8** %next_proto_neg_in, align 8, !dbg !1532
  %call465 = call i8* @next_protos_parse(i64* %len, i8* %135), !dbg !1533
  %data = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %next_proto, i32 0, i32 0, !dbg !1534
  store i8* %call465, i8** %data, align 8, !dbg !1535
  %data466 = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %next_proto, i32 0, i32 0, !dbg !1536
  %136 = load i8*, i8** %data466, align 8, !dbg !1536
  %cmp467 = icmp eq i8* %136, null, !dbg !1538
  br i1 %cmp467, label %if.then469, label %if.end470, !dbg !1539

if.then469:                                       ; preds = %if.then464
  br label %end, !dbg !1540

if.end470:                                        ; preds = %if.then464
  br label %if.end471, !dbg !1541

if.end471:                                        ; preds = %if.end470, %if.end462
  %data472 = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %alpn_ctx, i32 0, i32 0, !dbg !1542
  store i8* null, i8** %data472, align 8, !dbg !1543
  %137 = load i8*, i8** %alpn_in, align 8, !dbg !1544
  %tobool473 = icmp ne i8* %137, null, !dbg !1544
  br i1 %tobool473, label %if.then474, label %if.end483, !dbg !1546

if.then474:                                       ; preds = %if.end471
  %len475 = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %alpn_ctx, i32 0, i32 1, !dbg !1547
  %138 = load i8*, i8** %alpn_in, align 8, !dbg !1549
  %call476 = call i8* @next_protos_parse(i64* %len475, i8* %138), !dbg !1550
  %data477 = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %alpn_ctx, i32 0, i32 0, !dbg !1551
  store i8* %call476, i8** %data477, align 8, !dbg !1552
  %data478 = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %alpn_ctx, i32 0, i32 0, !dbg !1553
  %139 = load i8*, i8** %data478, align 8, !dbg !1553
  %cmp479 = icmp eq i8* %139, null, !dbg !1555
  br i1 %cmp479, label %if.then481, label %if.end482, !dbg !1556

if.then481:                                       ; preds = %if.then474
  br label %end, !dbg !1557

if.end482:                                        ; preds = %if.then474
  br label %if.end483, !dbg !1558

if.end483:                                        ; preds = %if.end482, %if.end471
  %140 = load i8*, i8** %crl_file, align 8, !dbg !1559
  %cmp484 = icmp ne i8* %140, null, !dbg !1561
  br i1 %cmp484, label %if.then486, label %if.end502, !dbg !1562

if.then486:                                       ; preds = %if.end483
  call void @llvm.dbg.declare(metadata %struct.X509_crl_st** %crl, metadata !1563, metadata !431), !dbg !1568
  %141 = load i8*, i8** %crl_file, align 8, !dbg !1569
  %142 = load i32, i32* %crl_format, align 4, !dbg !1570
  %call487 = call %struct.X509_crl_st* @load_crl(i8* %141, i32 %142), !dbg !1571
  store %struct.X509_crl_st* %call487, %struct.X509_crl_st** %crl, align 8, !dbg !1572
  %143 = load %struct.X509_crl_st*, %struct.X509_crl_st** %crl, align 8, !dbg !1573
  %cmp488 = icmp eq %struct.X509_crl_st* %143, null, !dbg !1575
  br i1 %cmp488, label %if.then490, label %if.end492, !dbg !1576

if.then490:                                       ; preds = %if.then486
  %144 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1577
  %call491 = call i32 @BIO_puts(%struct.bio_st* %144, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.381, i32 0, i32 0)), !dbg !1579
  %145 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1580
  call void @ERR_print_errors(%struct.bio_st* %145), !dbg !1581
  br label %end, !dbg !1582

if.end492:                                        ; preds = %if.then486
  %call493 = call %struct.stack_st_X509_CRL* @sk_X509_CRL_new_null(), !dbg !1583
  store %struct.stack_st_X509_CRL* %call493, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1584
  %146 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1585
  %cmp494 = icmp eq %struct.stack_st_X509_CRL* %146, null, !dbg !1587
  br i1 %cmp494, label %if.then499, label %lor.lhs.false496, !dbg !1588

lor.lhs.false496:                                 ; preds = %if.end492
  %147 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1589
  %148 = load %struct.X509_crl_st*, %struct.X509_crl_st** %crl, align 8, !dbg !1591
  %call497 = call i32 @sk_X509_CRL_push(%struct.stack_st_X509_CRL* %147, %struct.X509_crl_st* %148), !dbg !1592
  %tobool498 = icmp ne i32 %call497, 0, !dbg !1592
  br i1 %tobool498, label %if.end501, label %if.then499, !dbg !1593

if.then499:                                       ; preds = %lor.lhs.false496, %if.end492
  %149 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1594
  %call500 = call i32 @BIO_puts(%struct.bio_st* %149, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.382, i32 0, i32 0)), !dbg !1596
  %150 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1597
  call void @ERR_print_errors(%struct.bio_st* %150), !dbg !1598
  %151 = load %struct.X509_crl_st*, %struct.X509_crl_st** %crl, align 8, !dbg !1599
  call void @X509_CRL_free(%struct.X509_crl_st* %151), !dbg !1600
  br label %end, !dbg !1601

if.end501:                                        ; preds = %lor.lhs.false496
  br label %if.end502, !dbg !1602

if.end502:                                        ; preds = %if.end501, %if.end483
  %152 = load i8*, i8** %s_dcert_file, align 8, !dbg !1603
  %cmp503 = icmp ne i8* %152, null, !dbg !1605
  br i1 %cmp503, label %if.then505, label %if.end528, !dbg !1606

if.then505:                                       ; preds = %if.end502
  %153 = load i8*, i8** %s_dkey_file, align 8, !dbg !1607
  %cmp506 = icmp eq i8* %153, null, !dbg !1610
  br i1 %cmp506, label %if.then508, label %if.end509, !dbg !1611

if.then508:                                       ; preds = %if.then505
  %154 = load i8*, i8** %s_dcert_file, align 8, !dbg !1612
  store i8* %154, i8** %s_dkey_file, align 8, !dbg !1613
  br label %if.end509, !dbg !1614

if.end509:                                        ; preds = %if.then508, %if.then505
  %155 = load i8*, i8** %s_dkey_file, align 8, !dbg !1615
  %156 = load i32, i32* %s_dkey_format, align 4, !dbg !1616
  %157 = load i8*, i8** %dpass, align 8, !dbg !1617
  %158 = load %struct.engine_st*, %struct.engine_st** %engine, align 8, !dbg !1618
  %call510 = call %struct.evp_pkey_st* @load_key(i8* %155, i32 %156, i32 0, i8* %157, %struct.engine_st* %158, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.383, i32 0, i32 0)), !dbg !1619
  store %struct.evp_pkey_st* %call510, %struct.evp_pkey_st** %s_dkey, align 8, !dbg !1620
  %159 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_dkey, align 8, !dbg !1621
  %cmp511 = icmp eq %struct.evp_pkey_st* %159, null, !dbg !1623
  br i1 %cmp511, label %if.then513, label %if.end514, !dbg !1624

if.then513:                                       ; preds = %if.end509
  %160 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1625
  call void @ERR_print_errors(%struct.bio_st* %160), !dbg !1627
  br label %end, !dbg !1628

if.end514:                                        ; preds = %if.end509
  %161 = load i8*, i8** %s_dcert_file, align 8, !dbg !1629
  %162 = load i32, i32* %s_dcert_format, align 4, !dbg !1630
  %call515 = call %struct.x509_st* @load_cert(i8* %161, i32 %162, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.380, i32 0, i32 0)), !dbg !1631
  store %struct.x509_st* %call515, %struct.x509_st** %s_dcert, align 8, !dbg !1632
  %163 = load %struct.x509_st*, %struct.x509_st** %s_dcert, align 8, !dbg !1633
  %cmp516 = icmp eq %struct.x509_st* %163, null, !dbg !1635
  br i1 %cmp516, label %if.then518, label %if.end519, !dbg !1636

if.then518:                                       ; preds = %if.end514
  %164 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1637
  call void @ERR_print_errors(%struct.bio_st* %164), !dbg !1639
  br label %end, !dbg !1640

if.end519:                                        ; preds = %if.end514
  %165 = load i8*, i8** %s_dchain_file, align 8, !dbg !1641
  %cmp520 = icmp ne i8* %165, null, !dbg !1643
  br i1 %cmp520, label %if.then522, label %if.end527, !dbg !1644

if.then522:                                       ; preds = %if.end519
  %166 = load i8*, i8** %s_dchain_file, align 8, !dbg !1645
  %call523 = call i32 @load_certs(i8* %166, %struct.stack_st_X509** %s_dchain, i32 32773, i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.384, i32 0, i32 0)), !dbg !1648
  %tobool524 = icmp ne i32 %call523, 0, !dbg !1648
  br i1 %tobool524, label %if.end526, label %if.then525, !dbg !1649

if.then525:                                       ; preds = %if.then522
  br label %end, !dbg !1650

if.end526:                                        ; preds = %if.then522
  br label %if.end527, !dbg !1651

if.end527:                                        ; preds = %if.end526, %if.end519
  br label %if.end528, !dbg !1652

if.end528:                                        ; preds = %if.end527, %if.end502
  %167 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !1653
  %cmp529 = icmp eq %struct.bio_st* %167, null, !dbg !1655
  br i1 %cmp529, label %if.then531, label %if.end551, !dbg !1656

if.then531:                                       ; preds = %if.end528
  %168 = load i32, i32* @s_quiet, align 4, !dbg !1657
  %tobool532 = icmp ne i32 %168, 0, !dbg !1657
  br i1 %tobool532, label %land.lhs.true533, label %if.else, !dbg !1660

land.lhs.true533:                                 ; preds = %if.then531
  %169 = load i32, i32* @s_debug, align 4, !dbg !1661
  %tobool534 = icmp ne i32 %169, 0, !dbg !1661
  br i1 %tobool534, label %if.else, label %if.then535, !dbg !1663

if.then535:                                       ; preds = %land.lhs.true533
  %call536 = call %struct.bio_method_st* @BIO_s_null(), !dbg !1664
  %call537 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call536), !dbg !1666
  store %struct.bio_st* %call537, %struct.bio_st** @bio_s_out, align 8, !dbg !1668
  %170 = load i32, i32* @s_msg, align 4, !dbg !1669
  %tobool538 = icmp ne i32 %170, 0, !dbg !1669
  br i1 %tobool538, label %land.lhs.true539, label %if.end544, !dbg !1671

land.lhs.true539:                                 ; preds = %if.then535
  %171 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !1672
  %cmp540 = icmp eq %struct.bio_st* %171, null, !dbg !1674
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !1675

if.then542:                                       ; preds = %land.lhs.true539
  %call543 = call %struct.bio_st* @dup_bio_out(i32 32769), !dbg !1676
  store %struct.bio_st* %call543, %struct.bio_st** @bio_s_msg, align 8, !dbg !1677
  br label %if.end544, !dbg !1678

if.end544:                                        ; preds = %if.then542, %land.lhs.true539, %if.then535
  br label %if.end550, !dbg !1679

if.else:                                          ; preds = %land.lhs.true533, %if.then531
  %172 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !1680
  %cmp545 = icmp eq %struct.bio_st* %172, null, !dbg !1683
  br i1 %cmp545, label %if.then547, label %if.end549, !dbg !1684

if.then547:                                       ; preds = %if.else
  %call548 = call %struct.bio_st* @dup_bio_out(i32 32769), !dbg !1685
  store %struct.bio_st* %call548, %struct.bio_st** @bio_s_out, align 8, !dbg !1686
  br label %if.end549, !dbg !1687

if.end549:                                        ; preds = %if.then547, %if.else
  br label %if.end550

if.end550:                                        ; preds = %if.end549, %if.end544
  br label %if.end551, !dbg !1688

if.end551:                                        ; preds = %if.end550, %if.end528
  %173 = load i32, i32* %nocert, align 4, !dbg !1689
  %tobool552 = icmp ne i32 %173, 0, !dbg !1689
  br i1 %tobool552, label %if.then553, label %if.end554, !dbg !1691

if.then553:                                       ; preds = %if.end551
  store i8* null, i8** %s_cert_file, align 8, !dbg !1692
  store i8* null, i8** %s_key_file, align 8, !dbg !1694
  store i8* null, i8** %s_dcert_file, align 8, !dbg !1695
  store i8* null, i8** %s_dkey_file, align 8, !dbg !1696
  store i8* null, i8** %s_cert_file2, align 8, !dbg !1697
  store i8* null, i8** %s_key_file2, align 8, !dbg !1698
  br label %if.end554, !dbg !1699

if.end554:                                        ; preds = %if.then553, %if.end551
  %174 = load %struct.ssl_method_st*, %struct.ssl_method_st** %meth, align 8, !dbg !1700
  %call555 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %174), !dbg !1701
  store %struct.ssl_ctx_st* %call555, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1702
  %175 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1703
  %cmp556 = icmp eq %struct.ssl_ctx_st* %175, null, !dbg !1705
  br i1 %cmp556, label %if.then558, label %if.end559, !dbg !1706

if.then558:                                       ; preds = %if.end554
  %176 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1707
  call void @ERR_print_errors(%struct.bio_st* %176), !dbg !1709
  br label %end, !dbg !1710

if.end559:                                        ; preds = %if.end554
  %177 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1711
  %call560 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %177, i32 78, i64 4, i8* null), !dbg !1712
  %178 = load i32, i32* %sdebug, align 4, !dbg !1713
  %tobool561 = icmp ne i32 %178, 0, !dbg !1713
  br i1 %tobool561, label %if.then562, label %if.end563, !dbg !1715

if.then562:                                       ; preds = %if.end559
  %179 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1716
  %180 = load i32, i32* %sdebug, align 4, !dbg !1717
  call void @ssl_ctx_security_debug(%struct.ssl_ctx_st* %179, i32 %180), !dbg !1718
  br label %if.end563, !dbg !1718

if.end563:                                        ; preds = %if.then562, %if.end559
  %181 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !1719
  %182 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !1721
  %183 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1722
  %call564 = call i32 @config_ctx(%struct.ssl_conf_ctx_st* %181, %struct.stack_st_OPENSSL_STRING* %182, %struct.ssl_ctx_st* %183), !dbg !1723
  %tobool565 = icmp ne i32 %call564, 0, !dbg !1723
  br i1 %tobool565, label %if.end567, label %if.then566, !dbg !1724

if.then566:                                       ; preds = %if.end563
  br label %end, !dbg !1725

if.end567:                                        ; preds = %if.end563
  %184 = load i8*, i8** %ssl_config, align 8, !dbg !1726
  %tobool568 = icmp ne i8* %184, null, !dbg !1726
  br i1 %tobool568, label %if.then569, label %if.end576, !dbg !1728

if.then569:                                       ; preds = %if.end567
  %185 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1729
  %186 = load i8*, i8** %ssl_config, align 8, !dbg !1732
  %call570 = call i32 @SSL_CTX_config(%struct.ssl_ctx_st* %185, i8* %186), !dbg !1733
  %cmp571 = icmp eq i32 %call570, 0, !dbg !1734
  br i1 %cmp571, label %if.then573, label %if.end575, !dbg !1735

if.then573:                                       ; preds = %if.then569
  %187 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1736
  %188 = load i8*, i8** %ssl_config, align 8, !dbg !1738
  %call574 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %187, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.385, i32 0, i32 0), i8* %188), !dbg !1739
  %189 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1740
  call void @ERR_print_errors(%struct.bio_st* %189), !dbg !1741
  br label %end, !dbg !1742

if.end575:                                        ; preds = %if.then569
  br label %if.end576, !dbg !1743

if.end576:                                        ; preds = %if.end575, %if.end567
  %190 = load i32, i32* %min_version, align 4, !dbg !1744
  %cmp577 = icmp ne i32 %190, 0, !dbg !1746
  br i1 %cmp577, label %land.lhs.true579, label %if.end585, !dbg !1747

land.lhs.true579:                                 ; preds = %if.end576
  %191 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1748
  %192 = load i32, i32* %min_version, align 4, !dbg !1750
  %conv580 = sext i32 %192 to i64, !dbg !1750
  %call581 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %191, i32 123, i64 %conv580, i8* null), !dbg !1751
  %cmp582 = icmp eq i64 %call581, 0, !dbg !1752
  br i1 %cmp582, label %if.then584, label %if.end585, !dbg !1753

if.then584:                                       ; preds = %land.lhs.true579
  br label %end, !dbg !1754

if.end585:                                        ; preds = %land.lhs.true579, %if.end576
  %193 = load i32, i32* %max_version, align 4, !dbg !1755
  %cmp586 = icmp ne i32 %193, 0, !dbg !1757
  br i1 %cmp586, label %land.lhs.true588, label %if.end594, !dbg !1758

land.lhs.true588:                                 ; preds = %if.end585
  %194 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1759
  %195 = load i32, i32* %max_version, align 4, !dbg !1761
  %conv589 = sext i32 %195 to i64, !dbg !1761
  %call590 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %194, i32 124, i64 %conv589, i8* null), !dbg !1762
  %cmp591 = icmp eq i64 %call590, 0, !dbg !1763
  br i1 %cmp591, label %if.then593, label %if.end594, !dbg !1764

if.then593:                                       ; preds = %land.lhs.true588
  br label %end, !dbg !1765

if.end594:                                        ; preds = %land.lhs.true588, %if.end585
  %196 = load i8*, i8** @session_id_prefix, align 8, !dbg !1766
  %tobool595 = icmp ne i8* %196, null, !dbg !1766
  br i1 %tobool595, label %if.then596, label %if.end609, !dbg !1768

if.then596:                                       ; preds = %if.end594
  %197 = load i8*, i8** @session_id_prefix, align 8, !dbg !1769
  %call597 = call i64 @strlen(i8* %197) #8, !dbg !1772
  %cmp598 = icmp uge i64 %call597, 32, !dbg !1773
  br i1 %cmp598, label %if.then600, label %if.end602, !dbg !1774

if.then600:                                       ; preds = %if.then596
  %198 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1775
  %call601 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %198, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.386, i32 0, i32 0)), !dbg !1776
  br label %if.end602, !dbg !1776

if.end602:                                        ; preds = %if.then600, %if.then596
  %199 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1777
  %call603 = call i32 @SSL_CTX_set_generate_session_id(%struct.ssl_ctx_st* %199, i32 (%struct.ssl_st*, i8*, i32*)* @generate_session_id), !dbg !1779
  %tobool604 = icmp ne i32 %call603, 0, !dbg !1779
  br i1 %tobool604, label %if.end607, label %if.then605, !dbg !1780

if.then605:                                       ; preds = %if.end602
  %200 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1781
  %call606 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %200, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.387, i32 0, i32 0)), !dbg !1783
  %201 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1784
  call void @ERR_print_errors(%struct.bio_st* %201), !dbg !1785
  br label %end, !dbg !1786

if.end607:                                        ; preds = %if.end602
  %202 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1787
  %203 = load i8*, i8** @session_id_prefix, align 8, !dbg !1788
  %call608 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %202, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.388, i32 0, i32 0), i8* %203), !dbg !1789
  br label %if.end609, !dbg !1790

if.end609:                                        ; preds = %if.end607, %if.end594
  %204 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1791
  call void @SSL_CTX_set_quiet_shutdown(%struct.ssl_ctx_st* %204, i32 1), !dbg !1792
  %205 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !1793
  %cmp610 = icmp ne %struct.ssl_excert_st* %205, null, !dbg !1795
  br i1 %cmp610, label %if.then612, label %if.end613, !dbg !1796

if.then612:                                       ; preds = %if.end609
  %206 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1797
  %207 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !1798
  call void @ssl_ctx_set_excert(%struct.ssl_ctx_st* %206, %struct.ssl_excert_st* %207), !dbg !1799
  br label %if.end613, !dbg !1799

if.end613:                                        ; preds = %if.then612, %if.end609
  %208 = load i32, i32* %state, align 4, !dbg !1800
  %tobool614 = icmp ne i32 %208, 0, !dbg !1800
  br i1 %tobool614, label %if.then615, label %if.end616, !dbg !1802

if.then615:                                       ; preds = %if.end613
  %209 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1803
  call void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st* %209, void (%struct.ssl_st*, i32, i32)* @apps_ssl_info_callback), !dbg !1804
  br label %if.end616, !dbg !1804

if.end616:                                        ; preds = %if.then615, %if.end613
  %210 = load i32, i32* %no_cache, align 4, !dbg !1805
  %tobool617 = icmp ne i32 %210, 0, !dbg !1805
  br i1 %tobool617, label %if.then618, label %if.else620, !dbg !1807

if.then618:                                       ; preds = %if.end616
  %211 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1808
  %call619 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %211, i32 44, i64 0, i8* null), !dbg !1809
  br label %if.end626, !dbg !1809

if.else620:                                       ; preds = %if.end616
  %212 = load i32, i32* %ext_cache, align 4, !dbg !1810
  %tobool621 = icmp ne i32 %212, 0, !dbg !1810
  br i1 %tobool621, label %if.then622, label %if.else623, !dbg !1812

if.then622:                                       ; preds = %if.else620
  %213 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1813
  call void @init_session_cache_ctx(%struct.ssl_ctx_st* %213), !dbg !1814
  br label %if.end625, !dbg !1814

if.else623:                                       ; preds = %if.else620
  %214 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1815
  %call624 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %214, i32 42, i64 128, i8* null), !dbg !1816
  br label %if.end625

if.end625:                                        ; preds = %if.else623, %if.then622
  br label %if.end626

if.end626:                                        ; preds = %if.end625, %if.then618
  %215 = load i32, i32* @async, align 4, !dbg !1817
  %tobool627 = icmp ne i32 %215, 0, !dbg !1817
  br i1 %tobool627, label %if.then628, label %if.end630, !dbg !1819

if.then628:                                       ; preds = %if.end626
  %216 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1820
  %call629 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %216, i32 33, i64 256, i8* null), !dbg !1822
  br label %if.end630, !dbg !1823

if.end630:                                        ; preds = %if.then628, %if.end626
  %217 = load i32, i32* %max_send_fragment, align 4, !dbg !1824
  %cmp631 = icmp ugt i32 %217, 0, !dbg !1826
  br i1 %cmp631, label %land.lhs.true633, label %if.end639, !dbg !1827

land.lhs.true633:                                 ; preds = %if.end630
  %218 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1828
  %219 = load i32, i32* %max_send_fragment, align 4, !dbg !1830
  %conv634 = zext i32 %219 to i64, !dbg !1830
  %call635 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %218, i32 52, i64 %conv634, i8* null), !dbg !1831
  %tobool636 = icmp ne i64 %call635, 0, !dbg !1831
  br i1 %tobool636, label %if.end639, label %if.then637, !dbg !1832

if.then637:                                       ; preds = %land.lhs.true633
  %220 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1833
  %221 = load i8*, i8** %prog, align 8, !dbg !1835
  %222 = load i32, i32* %max_send_fragment, align 4, !dbg !1836
  %call638 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %220, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.389, i32 0, i32 0), i8* %221, i32 %222), !dbg !1837
  br label %end, !dbg !1838

if.end639:                                        ; preds = %land.lhs.true633, %if.end630
  %223 = load i32, i32* %split_send_fragment, align 4, !dbg !1839
  %cmp640 = icmp ugt i32 %223, 0, !dbg !1841
  br i1 %cmp640, label %land.lhs.true642, label %if.end648, !dbg !1842

land.lhs.true642:                                 ; preds = %if.end639
  %224 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1843
  %225 = load i32, i32* %split_send_fragment, align 4, !dbg !1845
  %conv643 = zext i32 %225 to i64, !dbg !1845
  %call644 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %224, i32 125, i64 %conv643, i8* null), !dbg !1846
  %tobool645 = icmp ne i64 %call644, 0, !dbg !1846
  br i1 %tobool645, label %if.end648, label %if.then646, !dbg !1847

if.then646:                                       ; preds = %land.lhs.true642
  %226 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1848
  %227 = load i8*, i8** %prog, align 8, !dbg !1850
  %228 = load i32, i32* %split_send_fragment, align 4, !dbg !1851
  %call647 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %226, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.390, i32 0, i32 0), i8* %227, i32 %228), !dbg !1852
  br label %end, !dbg !1853

if.end648:                                        ; preds = %land.lhs.true642, %if.end639
  %229 = load i32, i32* %max_pipelines, align 4, !dbg !1854
  %cmp649 = icmp ugt i32 %229, 0, !dbg !1856
  br i1 %cmp649, label %land.lhs.true651, label %if.end657, !dbg !1857

land.lhs.true651:                                 ; preds = %if.end648
  %230 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1858
  %231 = load i32, i32* %max_pipelines, align 4, !dbg !1860
  %conv652 = zext i32 %231 to i64, !dbg !1860
  %call653 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %230, i32 126, i64 %conv652, i8* null), !dbg !1861
  %tobool654 = icmp ne i64 %call653, 0, !dbg !1861
  br i1 %tobool654, label %if.end657, label %if.then655, !dbg !1862

if.then655:                                       ; preds = %land.lhs.true651
  %232 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1863
  %233 = load i8*, i8** %prog, align 8, !dbg !1865
  %234 = load i32, i32* %max_pipelines, align 4, !dbg !1866
  %call656 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %232, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.391, i32 0, i32 0), i8* %233, i32 %234), !dbg !1867
  br label %end, !dbg !1868

if.end657:                                        ; preds = %land.lhs.true651, %if.end648
  %235 = load i32, i32* %read_buf_len, align 4, !dbg !1869
  %cmp658 = icmp sgt i32 %235, 0, !dbg !1871
  br i1 %cmp658, label %if.then660, label %if.end662, !dbg !1872

if.then660:                                       ; preds = %if.end657
  %236 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1873
  %237 = load i32, i32* %read_buf_len, align 4, !dbg !1875
  %conv661 = sext i32 %237 to i64, !dbg !1875
  call void @SSL_CTX_set_default_read_buffer_len(%struct.ssl_ctx_st* %236, i64 %conv661), !dbg !1876
  br label %if.end662, !dbg !1877

if.end662:                                        ; preds = %if.then660, %if.end657
  %238 = load i8*, i8** %srtp_profiles, align 8, !dbg !1878
  %cmp663 = icmp ne i8* %238, null, !dbg !1880
  br i1 %cmp663, label %if.then665, label %if.end672, !dbg !1881

if.then665:                                       ; preds = %if.end662
  %239 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1882
  %240 = load i8*, i8** %srtp_profiles, align 8, !dbg !1885
  %call666 = call i32 @SSL_CTX_set_tlsext_use_srtp(%struct.ssl_ctx_st* %239, i8* %240), !dbg !1886
  %cmp667 = icmp ne i32 %call666, 0, !dbg !1887
  br i1 %cmp667, label %if.then669, label %if.end671, !dbg !1888

if.then669:                                       ; preds = %if.then665
  %241 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1889
  %call670 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %241, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.392, i32 0, i32 0)), !dbg !1891
  %242 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1892
  call void @ERR_print_errors(%struct.bio_st* %242), !dbg !1893
  br label %end, !dbg !1894

if.end671:                                        ; preds = %if.then665
  br label %if.end672, !dbg !1895

if.end672:                                        ; preds = %if.end671, %if.end662
  %243 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1896
  %244 = load i8*, i8** %CAfile, align 8, !dbg !1898
  %245 = load i8*, i8** %CApath, align 8, !dbg !1899
  %246 = load i32, i32* %noCAfile, align 4, !dbg !1900
  %247 = load i32, i32* %noCApath, align 4, !dbg !1901
  %call673 = call i32 @ctx_set_verify_locations(%struct.ssl_ctx_st* %243, i8* %244, i8* %245, i32 %246, i32 %247), !dbg !1902
  %tobool674 = icmp ne i32 %call673, 0, !dbg !1902
  br i1 %tobool674, label %if.end676, label %if.then675, !dbg !1903

if.then675:                                       ; preds = %if.end672
  %248 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1904
  call void @ERR_print_errors(%struct.bio_st* %248), !dbg !1906
  br label %end, !dbg !1907

if.end676:                                        ; preds = %if.end672
  %249 = load i32, i32* %vpmtouched, align 4, !dbg !1908
  %tobool677 = icmp ne i32 %249, 0, !dbg !1908
  br i1 %tobool677, label %land.lhs.true678, label %if.end683, !dbg !1910

land.lhs.true678:                                 ; preds = %if.end676
  %250 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1911
  %251 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !1913
  %call679 = call i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st* %250, %struct.X509_VERIFY_PARAM_st* %251), !dbg !1914
  %tobool680 = icmp ne i32 %call679, 0, !dbg !1914
  br i1 %tobool680, label %if.end683, label %if.then681, !dbg !1915

if.then681:                                       ; preds = %land.lhs.true678
  %252 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1916
  %call682 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %252, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.393, i32 0, i32 0)), !dbg !1918
  %253 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1919
  call void @ERR_print_errors(%struct.bio_st* %253), !dbg !1920
  br label %end, !dbg !1921

if.end683:                                        ; preds = %land.lhs.true678, %if.end676
  %254 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1922
  %255 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1923
  %call684 = call i32 @ssl_ctx_add_crls(%struct.ssl_ctx_st* %254, %struct.stack_st_X509_CRL* %255, i32 0), !dbg !1924
  %256 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1925
  %257 = load i8*, i8** %vfyCApath, align 8, !dbg !1927
  %258 = load i8*, i8** %vfyCAfile, align 8, !dbg !1928
  %259 = load i8*, i8** %chCApath, align 8, !dbg !1929
  %260 = load i8*, i8** %chCAfile, align 8, !dbg !1930
  %261 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !1931
  %262 = load i32, i32* %crl_download, align 4, !dbg !1932
  %call685 = call i32 @ssl_load_stores(%struct.ssl_ctx_st* %256, i8* %257, i8* %258, i8* %259, i8* %260, %struct.stack_st_X509_CRL* %261, i32 %262), !dbg !1933
  %tobool686 = icmp ne i32 %call685, 0, !dbg !1933
  br i1 %tobool686, label %if.end689, label %if.then687, !dbg !1934

if.then687:                                       ; preds = %if.end683
  %263 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1935
  %call688 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %263, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.394, i32 0, i32 0)), !dbg !1937
  %264 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1938
  call void @ERR_print_errors(%struct.bio_st* %264), !dbg !1939
  br label %end, !dbg !1940

if.end689:                                        ; preds = %if.end683
  %265 = load %struct.x509_st*, %struct.x509_st** %s_cert2, align 8, !dbg !1941
  %tobool690 = icmp ne %struct.x509_st* %265, null, !dbg !1941
  br i1 %tobool690, label %if.then691, label %if.end697, !dbg !1943

if.then691:                                       ; preds = %if.end689
  %266 = load %struct.ssl_method_st*, %struct.ssl_method_st** %meth, align 8, !dbg !1944
  %call692 = call %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st* %266), !dbg !1946
  store %struct.ssl_ctx_st* %call692, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !1947
  %267 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !1948
  %cmp693 = icmp eq %struct.ssl_ctx_st* %267, null, !dbg !1950
  br i1 %cmp693, label %if.then695, label %if.end696, !dbg !1951

if.then695:                                       ; preds = %if.then691
  %268 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1952
  call void @ERR_print_errors(%struct.bio_st* %268), !dbg !1954
  br label %end, !dbg !1955

if.end696:                                        ; preds = %if.then691
  br label %if.end697, !dbg !1956

if.end697:                                        ; preds = %if.end696, %if.end689
  %269 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !1957
  %cmp698 = icmp ne %struct.ssl_ctx_st* %269, null, !dbg !1959
  br i1 %cmp698, label %if.then700, label %if.end757, !dbg !1960

if.then700:                                       ; preds = %if.end697
  %270 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !1961
  %call701 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %270, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.395, i32 0, i32 0)), !dbg !1963
  %271 = load i32, i32* %sdebug, align 4, !dbg !1964
  %tobool702 = icmp ne i32 %271, 0, !dbg !1964
  br i1 %tobool702, label %if.then703, label %if.end704, !dbg !1966

if.then703:                                       ; preds = %if.then700
  %272 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !1967
  %273 = load i32, i32* %sdebug, align 4, !dbg !1968
  call void @ssl_ctx_security_debug(%struct.ssl_ctx_st* %272, i32 %273), !dbg !1969
  br label %if.end704, !dbg !1969

if.end704:                                        ; preds = %if.then703, %if.then700
  %274 = load i8*, i8** @session_id_prefix, align 8, !dbg !1970
  %tobool705 = icmp ne i8* %274, null, !dbg !1970
  br i1 %tobool705, label %if.then706, label %if.end719, !dbg !1972

if.then706:                                       ; preds = %if.end704
  %275 = load i8*, i8** @session_id_prefix, align 8, !dbg !1973
  %call707 = call i64 @strlen(i8* %275) #8, !dbg !1976
  %cmp708 = icmp uge i64 %call707, 32, !dbg !1977
  br i1 %cmp708, label %if.then710, label %if.end712, !dbg !1978

if.then710:                                       ; preds = %if.then706
  %276 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1979
  %call711 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %276, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.386, i32 0, i32 0)), !dbg !1980
  br label %if.end712, !dbg !1980

if.end712:                                        ; preds = %if.then710, %if.then706
  %277 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !1981
  %call713 = call i32 @SSL_CTX_set_generate_session_id(%struct.ssl_ctx_st* %277, i32 (%struct.ssl_st*, i8*, i32*)* @generate_session_id), !dbg !1983
  %tobool714 = icmp ne i32 %call713, 0, !dbg !1983
  br i1 %tobool714, label %if.end717, label %if.then715, !dbg !1984

if.then715:                                       ; preds = %if.end712
  %278 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1985
  %call716 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %278, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.387, i32 0, i32 0)), !dbg !1987
  %279 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1988
  call void @ERR_print_errors(%struct.bio_st* %279), !dbg !1989
  br label %end, !dbg !1990

if.end717:                                        ; preds = %if.end712
  %280 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !1991
  %281 = load i8*, i8** @session_id_prefix, align 8, !dbg !1992
  %call718 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %280, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.388, i32 0, i32 0), i8* %281), !dbg !1993
  br label %if.end719, !dbg !1994

if.end719:                                        ; preds = %if.end717, %if.end704
  %282 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !1995
  call void @SSL_CTX_set_quiet_shutdown(%struct.ssl_ctx_st* %282, i32 1), !dbg !1996
  %283 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !1997
  %cmp720 = icmp ne %struct.ssl_excert_st* %283, null, !dbg !1999
  br i1 %cmp720, label %if.then722, label %if.end723, !dbg !2000

if.then722:                                       ; preds = %if.end719
  %284 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2001
  %285 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !2002
  call void @ssl_ctx_set_excert(%struct.ssl_ctx_st* %284, %struct.ssl_excert_st* %285), !dbg !2003
  br label %if.end723, !dbg !2003

if.end723:                                        ; preds = %if.then722, %if.end719
  %286 = load i32, i32* %state, align 4, !dbg !2004
  %tobool724 = icmp ne i32 %286, 0, !dbg !2004
  br i1 %tobool724, label %if.then725, label %if.end726, !dbg !2006

if.then725:                                       ; preds = %if.end723
  %287 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2007
  call void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st* %287, void (%struct.ssl_st*, i32, i32)* @apps_ssl_info_callback), !dbg !2008
  br label %if.end726, !dbg !2008

if.end726:                                        ; preds = %if.then725, %if.end723
  %288 = load i32, i32* %no_cache, align 4, !dbg !2009
  %tobool727 = icmp ne i32 %288, 0, !dbg !2009
  br i1 %tobool727, label %if.then728, label %if.else730, !dbg !2011

if.then728:                                       ; preds = %if.end726
  %289 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2012
  %call729 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %289, i32 44, i64 0, i8* null), !dbg !2013
  br label %if.end736, !dbg !2013

if.else730:                                       ; preds = %if.end726
  %290 = load i32, i32* %ext_cache, align 4, !dbg !2014
  %tobool731 = icmp ne i32 %290, 0, !dbg !2014
  br i1 %tobool731, label %if.then732, label %if.else733, !dbg !2016

if.then732:                                       ; preds = %if.else730
  %291 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2017
  call void @init_session_cache_ctx(%struct.ssl_ctx_st* %291), !dbg !2018
  br label %if.end735, !dbg !2018

if.else733:                                       ; preds = %if.else730
  %292 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2019
  %call734 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %292, i32 42, i64 128, i8* null), !dbg !2020
  br label %if.end735

if.end735:                                        ; preds = %if.else733, %if.then732
  br label %if.end736

if.end736:                                        ; preds = %if.end735, %if.then728
  %293 = load i32, i32* @async, align 4, !dbg !2021
  %tobool737 = icmp ne i32 %293, 0, !dbg !2021
  br i1 %tobool737, label %if.then738, label %if.end740, !dbg !2023

if.then738:                                       ; preds = %if.end736
  %294 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2024
  %call739 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %294, i32 33, i64 256, i8* null), !dbg !2025
  br label %if.end740, !dbg !2025

if.end740:                                        ; preds = %if.then738, %if.end736
  %295 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2026
  %296 = load i8*, i8** %CAfile, align 8, !dbg !2028
  %297 = load i8*, i8** %CApath, align 8, !dbg !2029
  %298 = load i32, i32* %noCAfile, align 4, !dbg !2030
  %299 = load i32, i32* %noCApath, align 4, !dbg !2031
  %call741 = call i32 @ctx_set_verify_locations(%struct.ssl_ctx_st* %295, i8* %296, i8* %297, i32 %298, i32 %299), !dbg !2032
  %tobool742 = icmp ne i32 %call741, 0, !dbg !2032
  br i1 %tobool742, label %if.end744, label %if.then743, !dbg !2033

if.then743:                                       ; preds = %if.end740
  %300 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2034
  call void @ERR_print_errors(%struct.bio_st* %300), !dbg !2036
  br label %end, !dbg !2037

if.end744:                                        ; preds = %if.end740
  %301 = load i32, i32* %vpmtouched, align 4, !dbg !2038
  %tobool745 = icmp ne i32 %301, 0, !dbg !2038
  br i1 %tobool745, label %land.lhs.true746, label %if.end751, !dbg !2040

land.lhs.true746:                                 ; preds = %if.end744
  %302 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2041
  %303 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !2043
  %call747 = call i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st* %302, %struct.X509_VERIFY_PARAM_st* %303), !dbg !2044
  %tobool748 = icmp ne i32 %call747, 0, !dbg !2044
  br i1 %tobool748, label %if.end751, label %if.then749, !dbg !2045

if.then749:                                       ; preds = %land.lhs.true746
  %304 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2046
  %call750 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %304, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.393, i32 0, i32 0)), !dbg !2048
  %305 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2049
  call void @ERR_print_errors(%struct.bio_st* %305), !dbg !2050
  br label %end, !dbg !2051

if.end751:                                        ; preds = %land.lhs.true746, %if.end744
  %306 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2052
  %307 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !2053
  %call752 = call i32 @ssl_ctx_add_crls(%struct.ssl_ctx_st* %306, %struct.stack_st_X509_CRL* %307, i32 0), !dbg !2054
  %308 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !2055
  %309 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !2057
  %310 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2058
  %call753 = call i32 @config_ctx(%struct.ssl_conf_ctx_st* %308, %struct.stack_st_OPENSSL_STRING* %309, %struct.ssl_ctx_st* %310), !dbg !2059
  %tobool754 = icmp ne i32 %call753, 0, !dbg !2059
  br i1 %tobool754, label %if.end756, label %if.then755, !dbg !2060

if.then755:                                       ; preds = %if.end751
  br label %end, !dbg !2061

if.end756:                                        ; preds = %if.end751
  br label %if.end757, !dbg !2062

if.end757:                                        ; preds = %if.end756, %if.end697
  %data758 = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %next_proto, i32 0, i32 0, !dbg !2063
  %311 = load i8*, i8** %data758, align 8, !dbg !2063
  %tobool759 = icmp ne i8* %311, null, !dbg !2065
  br i1 %tobool759, label %if.then760, label %if.end761, !dbg !2066

if.then760:                                       ; preds = %if.end757
  %312 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2067
  %313 = bitcast %struct.tlsextnextprotoctx_st* %next_proto to i8*, !dbg !2068
  call void @SSL_CTX_set_next_protos_advertised_cb(%struct.ssl_ctx_st* %312, i32 (%struct.ssl_st*, i8**, i32*, i8*)* @next_proto_cb, i8* %313), !dbg !2069
  br label %if.end761, !dbg !2069

if.end761:                                        ; preds = %if.then760, %if.end757
  %data762 = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %alpn_ctx, i32 0, i32 0, !dbg !2070
  %314 = load i8*, i8** %data762, align 8, !dbg !2070
  %tobool763 = icmp ne i8* %314, null, !dbg !2072
  br i1 %tobool763, label %if.then764, label %if.end765, !dbg !2073

if.then764:                                       ; preds = %if.end761
  %315 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2074
  %316 = bitcast %struct.tlsextalpnctx_st* %alpn_ctx to i8*, !dbg !2075
  call void @SSL_CTX_set_alpn_select_cb(%struct.ssl_ctx_st* %315, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)* @alpn_cb, i8* %316), !dbg !2076
  br label %if.end765, !dbg !2076

if.end765:                                        ; preds = %if.then764, %if.end761
  %317 = load i32, i32* %no_dhe, align 4, !dbg !2077
  %tobool766 = icmp ne i32 %317, 0, !dbg !2077
  br i1 %tobool766, label %if.end825, label %if.then767, !dbg !2079

if.then767:                                       ; preds = %if.end765
  call void @llvm.dbg.declare(metadata %struct.dh_st** %dh, metadata !2080, metadata !431), !dbg !2085
  store %struct.dh_st* null, %struct.dh_st** %dh, align 8, !dbg !2085
  %318 = load i8*, i8** %dhfile, align 8, !dbg !2086
  %cmp768 = icmp ne i8* %318, null, !dbg !2088
  br i1 %cmp768, label %if.then770, label %if.else772, !dbg !2089

if.then770:                                       ; preds = %if.then767
  %319 = load i8*, i8** %dhfile, align 8, !dbg !2090
  %call771 = call %struct.dh_st* @load_dh_param(i8* %319), !dbg !2091
  store %struct.dh_st* %call771, %struct.dh_st** %dh, align 8, !dbg !2092
  br label %if.end778, !dbg !2093

if.else772:                                       ; preds = %if.then767
  %320 = load i8*, i8** %s_cert_file, align 8, !dbg !2094
  %cmp773 = icmp ne i8* %320, null, !dbg !2096
  br i1 %cmp773, label %if.then775, label %if.end777, !dbg !2097

if.then775:                                       ; preds = %if.else772
  %321 = load i8*, i8** %s_cert_file, align 8, !dbg !2098
  %call776 = call %struct.dh_st* @load_dh_param(i8* %321), !dbg !2099
  store %struct.dh_st* %call776, %struct.dh_st** %dh, align 8, !dbg !2100
  br label %if.end777, !dbg !2101

if.end777:                                        ; preds = %if.then775, %if.else772
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.then770
  %322 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2102
  %cmp779 = icmp ne %struct.dh_st* %322, null, !dbg !2104
  br i1 %cmp779, label %if.then781, label %if.else783, !dbg !2105

if.then781:                                       ; preds = %if.end778
  %323 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2106
  %call782 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %323, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.396, i32 0, i32 0)), !dbg !2108
  br label %if.end785, !dbg !2109

if.else783:                                       ; preds = %if.end778
  %324 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2110
  %call784 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %324, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.397, i32 0, i32 0)), !dbg !2112
  br label %if.end785

if.end785:                                        ; preds = %if.else783, %if.then781
  %325 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2113
  %call786 = call i64 @BIO_ctrl(%struct.bio_st* %325, i32 11, i64 0, i8* null), !dbg !2114
  %conv787 = trunc i64 %call786 to i32, !dbg !2115
  %326 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2116
  %cmp788 = icmp eq %struct.dh_st* %326, null, !dbg !2118
  br i1 %cmp788, label %if.then790, label %if.else792, !dbg !2119

if.then790:                                       ; preds = %if.end785
  %327 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2120
  %call791 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %327, i32 118, i64 1, i8* null), !dbg !2122
  br label %if.end798, !dbg !2123

if.else792:                                       ; preds = %if.end785
  %328 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2124
  %329 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2127
  %330 = bitcast %struct.dh_st* %329 to i8*, !dbg !2128
  %call793 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %328, i32 3, i64 0, i8* %330), !dbg !2129
  %tobool794 = icmp ne i64 %call793, 0, !dbg !2129
  br i1 %tobool794, label %if.end797, label %if.then795, !dbg !2130

if.then795:                                       ; preds = %if.else792
  %331 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2131
  %call796 = call i32 @BIO_puts(%struct.bio_st* %331, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.398, i32 0, i32 0)), !dbg !2133
  %332 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2134
  call void @ERR_print_errors(%struct.bio_st* %332), !dbg !2135
  %333 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2136
  call void @DH_free(%struct.dh_st* %333), !dbg !2137
  br label %end, !dbg !2138

if.end797:                                        ; preds = %if.else792
  br label %if.end798

if.end798:                                        ; preds = %if.end797, %if.then790
  %334 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2139
  %cmp799 = icmp ne %struct.ssl_ctx_st* %334, null, !dbg !2141
  br i1 %cmp799, label %if.then801, label %if.end824, !dbg !2142

if.then801:                                       ; preds = %if.end798
  %335 = load i8*, i8** %dhfile, align 8, !dbg !2143
  %tobool802 = icmp ne i8* %335, null, !dbg !2143
  br i1 %tobool802, label %if.end812, label %if.then803, !dbg !2146

if.then803:                                       ; preds = %if.then801
  call void @llvm.dbg.declare(metadata %struct.dh_st** %dh2, metadata !2147, metadata !431), !dbg !2149
  %336 = load i8*, i8** %s_cert_file2, align 8, !dbg !2150
  %call804 = call %struct.dh_st* @load_dh_param(i8* %336), !dbg !2151
  store %struct.dh_st* %call804, %struct.dh_st** %dh2, align 8, !dbg !2149
  %337 = load %struct.dh_st*, %struct.dh_st** %dh2, align 8, !dbg !2152
  %cmp805 = icmp ne %struct.dh_st* %337, null, !dbg !2154
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !2155

if.then807:                                       ; preds = %if.then803
  %338 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2156
  %call808 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %338, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.396, i32 0, i32 0)), !dbg !2158
  %339 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2159
  %call809 = call i64 @BIO_ctrl(%struct.bio_st* %339, i32 11, i64 0, i8* null), !dbg !2160
  %conv810 = trunc i64 %call809 to i32, !dbg !2161
  %340 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2162
  call void @DH_free(%struct.dh_st* %340), !dbg !2163
  %341 = load %struct.dh_st*, %struct.dh_st** %dh2, align 8, !dbg !2164
  store %struct.dh_st* %341, %struct.dh_st** %dh, align 8, !dbg !2165
  br label %if.end811, !dbg !2166

if.end811:                                        ; preds = %if.then807, %if.then803
  br label %if.end812, !dbg !2167

if.end812:                                        ; preds = %if.end811, %if.then801
  %342 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2168
  %cmp813 = icmp eq %struct.dh_st* %342, null, !dbg !2170
  br i1 %cmp813, label %if.then815, label %if.else817, !dbg !2171

if.then815:                                       ; preds = %if.end812
  %343 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2172
  %call816 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %343, i32 118, i64 1, i8* null), !dbg !2174
  br label %if.end823, !dbg !2175

if.else817:                                       ; preds = %if.end812
  %344 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2176
  %345 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2179
  %346 = bitcast %struct.dh_st* %345 to i8*, !dbg !2180
  %call818 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %344, i32 3, i64 0, i8* %346), !dbg !2181
  %tobool819 = icmp ne i64 %call818, 0, !dbg !2181
  br i1 %tobool819, label %if.end822, label %if.then820, !dbg !2182

if.then820:                                       ; preds = %if.else817
  %347 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2183
  %call821 = call i32 @BIO_puts(%struct.bio_st* %347, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.398, i32 0, i32 0)), !dbg !2185
  %348 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2186
  call void @ERR_print_errors(%struct.bio_st* %348), !dbg !2187
  %349 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2188
  call void @DH_free(%struct.dh_st* %349), !dbg !2189
  br label %end, !dbg !2190

if.end822:                                        ; preds = %if.else817
  br label %if.end823

if.end823:                                        ; preds = %if.end822, %if.then815
  br label %if.end824, !dbg !2191

if.end824:                                        ; preds = %if.end823, %if.end798
  %350 = load %struct.dh_st*, %struct.dh_st** %dh, align 8, !dbg !2192
  call void @DH_free(%struct.dh_st* %350), !dbg !2193
  br label %if.end825, !dbg !2194

if.end825:                                        ; preds = %if.end824, %if.end765
  %351 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2195
  %352 = load %struct.x509_st*, %struct.x509_st** %s_cert, align 8, !dbg !2197
  %353 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_key, align 8, !dbg !2198
  %354 = load %struct.stack_st_X509*, %struct.stack_st_X509** %s_chain, align 8, !dbg !2199
  %355 = load i32, i32* %build_chain, align 4, !dbg !2200
  %call826 = call i32 @set_cert_key_stuff(%struct.ssl_ctx_st* %351, %struct.x509_st* %352, %struct.evp_pkey_st* %353, %struct.stack_st_X509* %354, i32 %355), !dbg !2201
  %tobool827 = icmp ne i32 %call826, 0, !dbg !2201
  br i1 %tobool827, label %if.end829, label %if.then828, !dbg !2202

if.then828:                                       ; preds = %if.end825
  br label %end, !dbg !2203

if.end829:                                        ; preds = %if.end825
  %356 = load i8*, i8** %s_serverinfo_file, align 8, !dbg !2204
  %cmp830 = icmp ne i8* %356, null, !dbg !2206
  br i1 %cmp830, label %land.lhs.true832, label %if.end836, !dbg !2207

land.lhs.true832:                                 ; preds = %if.end829
  %357 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2208
  %358 = load i8*, i8** %s_serverinfo_file, align 8, !dbg !2210
  %call833 = call i32 @SSL_CTX_use_serverinfo_file(%struct.ssl_ctx_st* %357, i8* %358), !dbg !2211
  %tobool834 = icmp ne i32 %call833, 0, !dbg !2211
  br i1 %tobool834, label %if.end836, label %if.then835, !dbg !2212

if.then835:                                       ; preds = %land.lhs.true832
  %359 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2213
  call void @ERR_print_errors(%struct.bio_st* %359), !dbg !2215
  br label %end, !dbg !2216

if.end836:                                        ; preds = %land.lhs.true832, %if.end829
  %360 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2217
  %cmp837 = icmp ne %struct.ssl_ctx_st* %360, null, !dbg !2219
  br i1 %cmp837, label %land.lhs.true839, label %if.end843, !dbg !2220

land.lhs.true839:                                 ; preds = %if.end836
  %361 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2221
  %362 = load %struct.x509_st*, %struct.x509_st** %s_cert2, align 8, !dbg !2223
  %363 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_key2, align 8, !dbg !2224
  %364 = load i32, i32* %build_chain, align 4, !dbg !2225
  %call840 = call i32 @set_cert_key_stuff(%struct.ssl_ctx_st* %361, %struct.x509_st* %362, %struct.evp_pkey_st* %363, %struct.stack_st_X509* null, i32 %364), !dbg !2226
  %tobool841 = icmp ne i32 %call840, 0, !dbg !2226
  br i1 %tobool841, label %if.end843, label %if.then842, !dbg !2227

if.then842:                                       ; preds = %land.lhs.true839
  br label %end, !dbg !2228

if.end843:                                        ; preds = %land.lhs.true839, %if.end836
  %365 = load %struct.x509_st*, %struct.x509_st** %s_dcert, align 8, !dbg !2229
  %cmp844 = icmp ne %struct.x509_st* %365, null, !dbg !2231
  br i1 %cmp844, label %if.then846, label %if.end851, !dbg !2232

if.then846:                                       ; preds = %if.end843
  %366 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2233
  %367 = load %struct.x509_st*, %struct.x509_st** %s_dcert, align 8, !dbg !2236
  %368 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_dkey, align 8, !dbg !2237
  %369 = load %struct.stack_st_X509*, %struct.stack_st_X509** %s_dchain, align 8, !dbg !2238
  %370 = load i32, i32* %build_chain, align 4, !dbg !2239
  %call847 = call i32 @set_cert_key_stuff(%struct.ssl_ctx_st* %366, %struct.x509_st* %367, %struct.evp_pkey_st* %368, %struct.stack_st_X509* %369, i32 %370), !dbg !2240
  %tobool848 = icmp ne i32 %call847, 0, !dbg !2240
  br i1 %tobool848, label %if.end850, label %if.then849, !dbg !2241

if.then849:                                       ; preds = %if.then846
  br label %end, !dbg !2242

if.end850:                                        ; preds = %if.then846
  br label %if.end851, !dbg !2243

if.end851:                                        ; preds = %if.end850, %if.end843
  %371 = load i32, i32* %no_resume_ephemeral, align 4, !dbg !2244
  %tobool852 = icmp ne i32 %371, 0, !dbg !2244
  br i1 %tobool852, label %if.then853, label %if.end858, !dbg !2246

if.then853:                                       ; preds = %if.end851
  %372 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2247
  call void @SSL_CTX_set_not_resumable_session_callback(%struct.ssl_ctx_st* %372, i32 (%struct.ssl_st*, i32)* @not_resumable_sess_cb), !dbg !2249
  %373 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2250
  %cmp854 = icmp ne %struct.ssl_ctx_st* %373, null, !dbg !2252
  br i1 %cmp854, label %if.then856, label %if.end857, !dbg !2253

if.then856:                                       ; preds = %if.then853
  %374 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2254
  call void @SSL_CTX_set_not_resumable_session_callback(%struct.ssl_ctx_st* %374, i32 (%struct.ssl_st*, i32)* @not_resumable_sess_cb), !dbg !2255
  br label %if.end857, !dbg !2255

if.end857:                                        ; preds = %if.then856, %if.then853
  br label %if.end858, !dbg !2256

if.end858:                                        ; preds = %if.end857, %if.end851
  %375 = load i8*, i8** @psk_key, align 8, !dbg !2257
  %cmp859 = icmp ne i8* %375, null, !dbg !2259
  br i1 %cmp859, label %if.then861, label %if.end866, !dbg !2260

if.then861:                                       ; preds = %if.end858
  %376 = load i32, i32* @s_debug, align 4, !dbg !2261
  %tobool862 = icmp ne i32 %376, 0, !dbg !2261
  br i1 %tobool862, label %if.then863, label %if.end865, !dbg !2264

if.then863:                                       ; preds = %if.then861
  %377 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2265
  %call864 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %377, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.399, i32 0, i32 0)), !dbg !2266
  br label %if.end865, !dbg !2266

if.end865:                                        ; preds = %if.then863, %if.then861
  %378 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2267
  call void @SSL_CTX_set_psk_server_callback(%struct.ssl_ctx_st* %378, i32 (%struct.ssl_st*, i8*, i8*, i32)* @psk_server_cb), !dbg !2268
  br label %if.end866, !dbg !2269

if.end866:                                        ; preds = %if.end865, %if.end858
  %379 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2270
  %380 = load i8*, i8** %psk_identity_hint, align 8, !dbg !2272
  %call867 = call i32 @SSL_CTX_use_psk_identity_hint(%struct.ssl_ctx_st* %379, i8* %380), !dbg !2273
  %tobool868 = icmp ne i32 %call867, 0, !dbg !2273
  br i1 %tobool868, label %if.end871, label %if.then869, !dbg !2274

if.then869:                                       ; preds = %if.end866
  %381 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2275
  %call870 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %381, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.400, i32 0, i32 0)), !dbg !2277
  %382 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2278
  call void @ERR_print_errors(%struct.bio_st* %382), !dbg !2279
  br label %end, !dbg !2280

if.end871:                                        ; preds = %if.end866
  %383 = load i8*, i8** %psksessf, align 8, !dbg !2281
  %cmp872 = icmp ne i8* %383, null, !dbg !2283
  br i1 %cmp872, label %if.then874, label %if.end888, !dbg !2284

if.then874:                                       ; preds = %if.end871
  call void @llvm.dbg.declare(metadata %struct.bio_st** %stmp, metadata !2285, metadata !431), !dbg !2287
  %384 = load i8*, i8** %psksessf, align 8, !dbg !2288
  %call875 = call %struct.bio_st* @BIO_new_file(i8* %384, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.401, i32 0, i32 0)), !dbg !2289
  store %struct.bio_st* %call875, %struct.bio_st** %stmp, align 8, !dbg !2287
  %385 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !2290
  %cmp876 = icmp eq %struct.bio_st* %385, null, !dbg !2292
  br i1 %cmp876, label %if.then878, label %if.end880, !dbg !2293

if.then878:                                       ; preds = %if.then874
  %386 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2294
  %387 = load i8*, i8** %psksessf, align 8, !dbg !2296
  %call879 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %386, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.402, i32 0, i32 0), i8* %387), !dbg !2297
  %388 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2298
  call void @ERR_print_errors(%struct.bio_st* %388), !dbg !2299
  br label %end, !dbg !2300

if.end880:                                        ; preds = %if.then874
  %389 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !2301
  %call881 = call %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st* %389, %struct.ssl_session_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null), !dbg !2302
  store %struct.ssl_session_st* %call881, %struct.ssl_session_st** @psksess, align 8, !dbg !2303
  %390 = load %struct.bio_st*, %struct.bio_st** %stmp, align 8, !dbg !2304
  %call882 = call i32 @BIO_free(%struct.bio_st* %390), !dbg !2305
  %391 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2306
  %cmp883 = icmp eq %struct.ssl_session_st* %391, null, !dbg !2308
  br i1 %cmp883, label %if.then885, label %if.end887, !dbg !2309

if.then885:                                       ; preds = %if.end880
  %392 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2310
  %393 = load i8*, i8** %psksessf, align 8, !dbg !2312
  %call886 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %392, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.403, i32 0, i32 0), i8* %393), !dbg !2313
  %394 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2314
  call void @ERR_print_errors(%struct.bio_st* %394), !dbg !2315
  br label %end, !dbg !2316

if.end887:                                        ; preds = %if.end880
  br label %if.end888, !dbg !2317

if.end888:                                        ; preds = %if.end887, %if.end871
  %395 = load i8*, i8** @psk_key, align 8, !dbg !2318
  %cmp889 = icmp ne i8* %395, null, !dbg !2320
  br i1 %cmp889, label %if.then894, label %lor.lhs.false891, !dbg !2321

lor.lhs.false891:                                 ; preds = %if.end888
  %396 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2322
  %cmp892 = icmp ne %struct.ssl_session_st* %396, null, !dbg !2324
  br i1 %cmp892, label %if.then894, label %if.end895, !dbg !2325

if.then894:                                       ; preds = %lor.lhs.false891, %if.end888
  %397 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2326
  call void @SSL_CTX_set_psk_find_session_callback(%struct.ssl_ctx_st* %397, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)* @psk_find_session_cb), !dbg !2327
  br label %if.end895, !dbg !2327

if.end895:                                        ; preds = %if.then894, %lor.lhs.false891
  %398 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2328
  %399 = load i32, i32* %s_server_verify, align 4, !dbg !2329
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* %398, i32 %399, i32 (i32, %struct.x509_store_ctx_st*)* @verify_callback), !dbg !2330
  %400 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2331
  %401 = bitcast i32* %s_server_session_id_context to i8*, !dbg !2333
  %call896 = call i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* %400, i8* %401, i32 4), !dbg !2334
  %tobool897 = icmp ne i32 %call896, 0, !dbg !2334
  br i1 %tobool897, label %if.end900, label %if.then898, !dbg !2335

if.then898:                                       ; preds = %if.end895
  %402 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2336
  %call899 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %402, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.404, i32 0, i32 0)), !dbg !2338
  %403 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2339
  call void @ERR_print_errors(%struct.bio_st* %403), !dbg !2340
  br label %end, !dbg !2341

if.end900:                                        ; preds = %if.end895
  %404 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2342
  call void @SSL_CTX_set_cookie_generate_cb(%struct.ssl_ctx_st* %404, i32 (%struct.ssl_st*, i8*, i32*)* @generate_cookie_callback), !dbg !2343
  %405 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2344
  call void @SSL_CTX_set_cookie_verify_cb(%struct.ssl_ctx_st* %405, i32 (%struct.ssl_st*, i8*, i32)* @verify_cookie_callback), !dbg !2345
  %406 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2346
  call void @SSL_CTX_set_stateless_cookie_generate_cb(%struct.ssl_ctx_st* %406, i32 (%struct.ssl_st*, i8*, i64*)* @generate_stateless_cookie_callback), !dbg !2347
  %407 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2348
  call void @SSL_CTX_set_stateless_cookie_verify_cb(%struct.ssl_ctx_st* %407, i32 (%struct.ssl_st*, i8*, i64)* @verify_stateless_cookie_callback), !dbg !2349
  %408 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2350
  %cmp901 = icmp ne %struct.ssl_ctx_st* %408, null, !dbg !2352
  br i1 %cmp901, label %if.then903, label %if.end913, !dbg !2353

if.then903:                                       ; preds = %if.end900
  %409 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2354
  %410 = load i32, i32* %s_server_verify, align 4, !dbg !2356
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* %409, i32 %410, i32 (i32, %struct.x509_store_ctx_st*)* @verify_callback), !dbg !2357
  %411 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2358
  %412 = bitcast i32* %s_server_session_id_context to i8*, !dbg !2360
  %call904 = call i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st* %411, i8* %412, i32 4), !dbg !2361
  %tobool905 = icmp ne i32 %call904, 0, !dbg !2361
  br i1 %tobool905, label %if.end908, label %if.then906, !dbg !2362

if.then906:                                       ; preds = %if.then903
  %413 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2363
  %call907 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %413, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.404, i32 0, i32 0)), !dbg !2365
  %414 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2366
  call void @ERR_print_errors(%struct.bio_st* %414), !dbg !2367
  br label %end, !dbg !2368

if.end908:                                        ; preds = %if.then903
  %415 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2369
  %biodebug = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %tlsextcbp, i32 0, i32 1, !dbg !2370
  store %struct.bio_st* %415, %struct.bio_st** %biodebug, align 8, !dbg !2371
  %416 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2372
  %call909 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %416, i32 53, void ()* bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @ssl_servername_cb to void ()*)), !dbg !2373
  %417 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2374
  %418 = bitcast %struct.tlsextctx_st* %tlsextcbp to i8*, !dbg !2375
  %call910 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %417, i32 54, i64 0, i8* %418), !dbg !2376
  %419 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2377
  %call911 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %419, i32 53, void ()* bitcast (i32 (%struct.ssl_st*, i32*, i8*)* @ssl_servername_cb to void ()*)), !dbg !2378
  %420 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2379
  %421 = bitcast %struct.tlsextctx_st* %tlsextcbp to i8*, !dbg !2380
  %call912 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %420, i32 54, i64 0, i8* %421), !dbg !2381
  br label %if.end913, !dbg !2382

if.end913:                                        ; preds = %if.end908, %if.end900
  %422 = load i8*, i8** %srp_verifier_file, align 8, !dbg !2383
  %cmp914 = icmp ne i8* %422, null, !dbg !2385
  br i1 %cmp914, label %if.then916, label %if.else926, !dbg !2386

if.then916:                                       ; preds = %if.end913
  %423 = load i8*, i8** %srpuserseed, align 8, !dbg !2387
  %call917 = call %struct.SRP_VBASE_st* @SRP_VBASE_new(i8* %423), !dbg !2389
  store %struct.SRP_VBASE_st* %call917, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !2390
  store %struct.SRP_user_pwd_st* null, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !2391
  store i8* null, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !2392
  %424 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !2393
  %425 = load i8*, i8** %srp_verifier_file, align 8, !dbg !2395
  %call918 = call i32 @SRP_VBASE_init(%struct.SRP_VBASE_st* %424, i8* %425), !dbg !2396
  store i32 %call918, i32* %ret, align 4, !dbg !2397
  %cmp919 = icmp ne i32 %call918, 0, !dbg !2398
  br i1 %cmp919, label %if.then921, label %if.end923, !dbg !2399

if.then921:                                       ; preds = %if.then916
  %426 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2400
  %427 = load i8*, i8** %srp_verifier_file, align 8, !dbg !2402
  %428 = load i32, i32* %ret, align 4, !dbg !2403
  %call922 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %426, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.405, i32 0, i32 0), i8* %427, i32 %428), !dbg !2404
  br label %end, !dbg !2405

if.end923:                                        ; preds = %if.then916
  %429 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2406
  call void @SSL_CTX_set_verify(%struct.ssl_ctx_st* %429, i32 0, i32 (i32, %struct.x509_store_ctx_st*)* @verify_callback), !dbg !2407
  %430 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2408
  %call924 = call i32 @SSL_CTX_set_srp_cb_arg(%struct.ssl_ctx_st* %430, i8* bitcast (%struct.srpsrvparm_st* @srp_callback_parm to i8*)), !dbg !2409
  %431 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2410
  %call925 = call i32 @SSL_CTX_set_srp_username_callback(%struct.ssl_ctx_st* %431, i32 (%struct.ssl_st*, i32*, i8*)* @ssl_srp_server_param_cb), !dbg !2411
  br label %if.end936, !dbg !2412

if.else926:                                       ; preds = %if.end913
  %432 = load i8*, i8** %CAfile, align 8, !dbg !2413
  %cmp927 = icmp ne i8* %432, null, !dbg !2415
  br i1 %cmp927, label %if.then929, label %if.end935, !dbg !2416

if.then929:                                       ; preds = %if.else926
  %433 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2417
  %434 = load i8*, i8** %CAfile, align 8, !dbg !2419
  %call930 = call %struct.stack_st_X509_NAME* @SSL_load_client_CA_file(i8* %434), !dbg !2420
  call void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st* %433, %struct.stack_st_X509_NAME* %call930), !dbg !2421
  %435 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2423
  %tobool931 = icmp ne %struct.ssl_ctx_st* %435, null, !dbg !2423
  br i1 %tobool931, label %if.then932, label %if.end934, !dbg !2425

if.then932:                                       ; preds = %if.then929
  %436 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2426
  %437 = load i8*, i8** %CAfile, align 8, !dbg !2427
  %call933 = call %struct.stack_st_X509_NAME* @SSL_load_client_CA_file(i8* %437), !dbg !2428
  call void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st* %436, %struct.stack_st_X509_NAME* %call933), !dbg !2429
  br label %if.end934, !dbg !2431

if.end934:                                        ; preds = %if.then932, %if.then929
  br label %if.end935, !dbg !2432

if.end935:                                        ; preds = %if.end934, %if.else926
  br label %if.end936

if.end936:                                        ; preds = %if.end935, %if.end923
  %438 = load i32, i32* %s_tlsextstatus, align 4, !dbg !2433
  %tobool937 = icmp ne i32 %438, 0, !dbg !2433
  br i1 %tobool937, label %if.then938, label %if.end946, !dbg !2435

if.then938:                                       ; preds = %if.end936
  %439 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2436
  %call939 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %439, i32 63, void ()* bitcast (i32 (%struct.ssl_st*, i8*)* @cert_status_cb to void ()*)), !dbg !2438
  %440 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2439
  %call940 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %440, i32 64, i64 0, i8* bitcast (%struct.tlsextstatusctx_st* @tlscstatp to i8*)), !dbg !2440
  %441 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2441
  %tobool941 = icmp ne %struct.ssl_ctx_st* %441, null, !dbg !2441
  br i1 %tobool941, label %if.then942, label %if.end945, !dbg !2443

if.then942:                                       ; preds = %if.then938
  %442 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2444
  %call943 = call i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st* %442, i32 63, void ()* bitcast (i32 (%struct.ssl_st*, i8*)* @cert_status_cb to void ()*)), !dbg !2446
  %443 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2447
  %call944 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %443, i32 64, i64 0, i8* bitcast (%struct.tlsextstatusctx_st* @tlscstatp to i8*)), !dbg !2448
  br label %if.end945, !dbg !2449

if.end945:                                        ; preds = %if.then942, %if.then938
  br label %if.end946, !dbg !2450

if.end946:                                        ; preds = %if.end945, %if.end936
  %444 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2451
  %445 = load i8*, i8** %keylog_file, align 8, !dbg !2453
  %call947 = call i32 @set_keylog_file(%struct.ssl_ctx_st* %444, i8* %445), !dbg !2454
  %tobool948 = icmp ne i32 %call947, 0, !dbg !2454
  br i1 %tobool948, label %if.then949, label %if.end950, !dbg !2455

if.then949:                                       ; preds = %if.end946
  br label %end, !dbg !2456

if.end950:                                        ; preds = %if.end946
  %446 = load i32, i32* %max_early_data, align 4, !dbg !2457
  %cmp951 = icmp sge i32 %446, 0, !dbg !2459
  br i1 %cmp951, label %if.then953, label %if.end955, !dbg !2460

if.then953:                                       ; preds = %if.end950
  %447 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2461
  %448 = load i32, i32* %max_early_data, align 4, !dbg !2462
  %call954 = call i32 @SSL_CTX_set_max_early_data(%struct.ssl_ctx_st* %447, i32 %448), !dbg !2463
  br label %if.end955, !dbg !2463

if.end955:                                        ; preds = %if.then953, %if.end950
  %449 = load i32, i32* %recv_max_early_data, align 4, !dbg !2464
  %cmp956 = icmp sge i32 %449, 0, !dbg !2466
  br i1 %cmp956, label %if.then958, label %if.end960, !dbg !2467

if.then958:                                       ; preds = %if.end955
  %450 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2468
  %451 = load i32, i32* %recv_max_early_data, align 4, !dbg !2469
  %call959 = call i32 @SSL_CTX_set_recv_max_early_data(%struct.ssl_ctx_st* %450, i32 %451), !dbg !2470
  br label %if.end960, !dbg !2470

if.end960:                                        ; preds = %if.then958, %if.end955
  %452 = load i32, i32* %rev, align 4, !dbg !2471
  %tobool961 = icmp ne i32 %452, 0, !dbg !2471
  br i1 %tobool961, label %if.then962, label %if.else963, !dbg !2473

if.then962:                                       ; preds = %if.end960
  store i32 (i32, i32, i32, i8*)* @rev_body, i32 (i32, i32, i32, i8*)** %server_cb, align 8, !dbg !2474
  br label %if.end968, !dbg !2475

if.else963:                                       ; preds = %if.end960
  %453 = load i32, i32* @www, align 4, !dbg !2476
  %tobool964 = icmp ne i32 %453, 0, !dbg !2476
  br i1 %tobool964, label %if.then965, label %if.else966, !dbg !2478

if.then965:                                       ; preds = %if.else963
  store i32 (i32, i32, i32, i8*)* @www_body, i32 (i32, i32, i32, i8*)** %server_cb, align 8, !dbg !2479
  br label %if.end967, !dbg !2480

if.else966:                                       ; preds = %if.else963
  store i32 (i32, i32, i32, i8*)* @sv_body, i32 (i32, i32, i32, i8*)** %server_cb, align 8, !dbg !2481
  br label %if.end967

if.end967:                                        ; preds = %if.else966, %if.then965
  br label %if.end968

if.end968:                                        ; preds = %if.end967, %if.then962
  %454 = load i32, i32* %socket_family, align 4, !dbg !2482
  %cmp969 = icmp eq i32 %454, 1, !dbg !2484
  br i1 %cmp969, label %land.lhs.true971, label %if.end975, !dbg !2485

land.lhs.true971:                                 ; preds = %if.end968
  %455 = load i32, i32* %unlink_unix_path, align 4, !dbg !2486
  %tobool972 = icmp ne i32 %455, 0, !dbg !2486
  br i1 %tobool972, label %if.then973, label %if.end975, !dbg !2488

if.then973:                                       ; preds = %land.lhs.true971
  %456 = load i8*, i8** %host, align 8, !dbg !2489
  %call974 = call i32 @unlink(i8* %456) #9, !dbg !2490
  br label %if.end975, !dbg !2490

if.end975:                                        ; preds = %if.then973, %land.lhs.true971, %if.end968
  %457 = load i8*, i8** %host, align 8, !dbg !2491
  %458 = load i8*, i8** %port, align 8, !dbg !2492
  %459 = load i32, i32* %socket_family, align 4, !dbg !2493
  %460 = load i32, i32* %socket_type, align 4, !dbg !2494
  %461 = load i32, i32* %protocol, align 4, !dbg !2495
  %462 = load i32 (i32, i32, i32, i8*)*, i32 (i32, i32, i32, i8*)** %server_cb, align 8, !dbg !2496
  %463 = load i8*, i8** %context, align 8, !dbg !2497
  %464 = load i32, i32* %naccept, align 4, !dbg !2498
  %465 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2499
  %call976 = call i32 @do_server(i32* @accept_socket, i8* %457, i8* %458, i32 %459, i32 %460, i32 %461, i32 (i32, i32, i32, i8*)* %462, i8* %463, i32 %464, %struct.bio_st* %465), !dbg !2500
  %466 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2501
  %467 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2502
  call void @print_stats(%struct.bio_st* %466, %struct.ssl_ctx_st* %467), !dbg !2503
  store i32 0, i32* %ret, align 4, !dbg !2504
  br label %end, !dbg !2505

end:                                              ; preds = %if.end975, %if.then949, %if.then921, %if.then906, %if.then898, %if.then885, %if.then878, %if.then869, %if.then849, %if.then842, %if.then835, %if.then828, %if.then820, %if.then795, %if.then755, %if.then749, %if.then743, %if.then715, %if.then695, %if.then687, %if.then681, %if.then675, %if.then669, %if.then655, %if.then646, %if.then637, %if.then605, %if.then593, %if.then584, %if.then573, %if.then566, %if.then558, %if.then525, %if.then518, %if.then513, %if.then499, %if.then490, %if.then481, %if.then469, %if.then459, %if.then454, %if.then444, %if.then437, %if.then432, %if.then424, %if.then411, %if.then406, %if.then397, %if.then389, %if.then382, %if.then375, %if.then353, %if.then345, %if.then305, %if.end255, %if.then225, %if.then198, %if.then191, %if.then184, %if.then104, %if.then72, %if.then62, %sw.bb46, %opthelp, %if.then42, %if.then25, %if.then
  %468 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !2506
  call void @SSL_CTX_free(%struct.ssl_ctx_st* %468), !dbg !2507
  %469 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2508
  call void @SSL_SESSION_free(%struct.ssl_session_st* %469), !dbg !2509
  %call977 = call i32 @set_keylog_file(%struct.ssl_ctx_st* null, i8* null), !dbg !2510
  %470 = load %struct.x509_st*, %struct.x509_st** %s_cert, align 8, !dbg !2511
  call void @X509_free(%struct.x509_st* %470), !dbg !2512
  %471 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %crls, align 8, !dbg !2513
  call void @sk_X509_CRL_pop_free(%struct.stack_st_X509_CRL* %471, void (%struct.X509_crl_st*)* @X509_CRL_free), !dbg !2514
  %472 = load %struct.x509_st*, %struct.x509_st** %s_dcert, align 8, !dbg !2515
  call void @X509_free(%struct.x509_st* %472), !dbg !2516
  %473 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_key, align 8, !dbg !2517
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %473), !dbg !2518
  %474 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_dkey, align 8, !dbg !2519
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %474), !dbg !2520
  %475 = load %struct.stack_st_X509*, %struct.stack_st_X509** %s_chain, align 8, !dbg !2521
  call void @sk_X509_pop_free(%struct.stack_st_X509* %475, void (%struct.x509_st*)* @X509_free), !dbg !2522
  %476 = load %struct.stack_st_X509*, %struct.stack_st_X509** %s_dchain, align 8, !dbg !2523
  call void @sk_X509_pop_free(%struct.stack_st_X509* %476, void (%struct.x509_st*)* @X509_free), !dbg !2524
  %477 = load i8*, i8** %pass, align 8, !dbg !2525
  call void @CRYPTO_free(i8* %477, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2173), !dbg !2526
  %478 = load i8*, i8** %dpass, align 8, !dbg !2527
  call void @CRYPTO_free(i8* %478, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2174), !dbg !2528
  %479 = load i8*, i8** %host, align 8, !dbg !2529
  call void @CRYPTO_free(i8* %479, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2175), !dbg !2530
  %480 = load i8*, i8** %port, align 8, !dbg !2531
  call void @CRYPTO_free(i8* %480, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2176), !dbg !2532
  %481 = load %struct.X509_VERIFY_PARAM_st*, %struct.X509_VERIFY_PARAM_st** %vpm, align 8, !dbg !2533
  call void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st* %481), !dbg !2534
  call void @free_sessions(), !dbg !2535
  %482 = load i8*, i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 2), align 8, !dbg !2536
  call void @CRYPTO_free(i8* %482, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2179), !dbg !2537
  %483 = load i8*, i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 4), align 8, !dbg !2538
  call void @CRYPTO_free(i8* %483, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2180), !dbg !2539
  %484 = load i8*, i8** getelementptr inbounds (%struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* @tlscstatp, i32 0, i32 3), align 8, !dbg !2540
  call void @CRYPTO_free(i8* %484, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2181), !dbg !2541
  %485 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !2542
  call void @SSL_CTX_free(%struct.ssl_ctx_st* %485), !dbg !2543
  %486 = load %struct.x509_st*, %struct.x509_st** %s_cert2, align 8, !dbg !2544
  call void @X509_free(%struct.x509_st* %486), !dbg !2545
  %487 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %s_key2, align 8, !dbg !2546
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %487), !dbg !2547
  %data978 = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %next_proto, i32 0, i32 0, !dbg !2548
  %488 = load i8*, i8** %data978, align 8, !dbg !2548
  call void @CRYPTO_free(i8* %488, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2186), !dbg !2549
  %data979 = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %alpn_ctx, i32 0, i32 0, !dbg !2550
  %489 = load i8*, i8** %data979, align 8, !dbg !2550
  call void @CRYPTO_free(i8* %489, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2188), !dbg !2551
  %490 = load %struct.ssl_excert_st*, %struct.ssl_excert_st** %exc, align 8, !dbg !2552
  call void @ssl_excert_free(%struct.ssl_excert_st* %490), !dbg !2553
  %491 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %ssl_args, align 8, !dbg !2554
  call void @sk_OPENSSL_STRING_free(%struct.stack_st_OPENSSL_STRING* %491), !dbg !2555
  %492 = load %struct.ssl_conf_ctx_st*, %struct.ssl_conf_ctx_st** %cctx, align 8, !dbg !2556
  call void @SSL_CONF_CTX_free(%struct.ssl_conf_ctx_st* %492), !dbg !2557
  %493 = load %struct.engine_st*, %struct.engine_st** %engine, align 8, !dbg !2558
  call void @release_engine(%struct.engine_st* %493), !dbg !2559
  %494 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2560
  %call980 = call i32 @BIO_free(%struct.bio_st* %494), !dbg !2561
  store %struct.bio_st* null, %struct.bio_st** @bio_s_out, align 8, !dbg !2562
  %495 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !2563
  %call981 = call i32 @BIO_free(%struct.bio_st* %495), !dbg !2564
  store %struct.bio_st* null, %struct.bio_st** @bio_s_msg, align 8, !dbg !2565
  %496 = load i32, i32* %ret, align 4, !dbg !2566
  ret i32 %496, !dbg !2567
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct.ssl_method_st* @TLS_server_method() #2

declare i8* @CRYPTO_strdup(i8*, i8*, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

declare %struct.ssl_conf_ctx_st* @SSL_CONF_CTX_new() #2

declare %struct.X509_VERIFY_PARAM_st* @X509_VERIFY_PARAM_new() #2

declare i32 @SSL_CONF_CTX_set_flags(%struct.ssl_conf_ctx_st*, i32) #2

declare i8* @opt_init(i32, i8**, %struct.options_st*) #2

declare i32 @opt_next() #2

declare i32 @BIO_printf(%struct.bio_st*, i8*, ...) #2

declare void @opt_help(%struct.options_st*) #2

declare void @CRYPTO_free(i8*, i8*, i32) #2

declare i32 @BIO_parse_hostserv(i8*, i8**, i8**, i32) #2

declare i8* @opt_arg() #2

; Function Attrs: nounwind readonly
declare i64 @atol(i8*) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

declare i32 @set_nameopt(i8*) #2

declare i32 @opt_format(i8*, i64, i32*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stack_st_OPENSSL_STRING* @sk_OPENSSL_STRING_new_null() #5 !dbg !2568 {
entry:
  %call = call %struct.stack_st* @OPENSSL_sk_new_null(), !dbg !2571
  %0 = bitcast %struct.stack_st* %call to %struct.stack_st_OPENSSL_STRING*, !dbg !2572
  ret %struct.stack_st_OPENSSL_STRING* %0, !dbg !2573
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_OPENSSL_STRING_push(%struct.stack_st_OPENSSL_STRING* %sk, i8* %ptr) #5 !dbg !2574 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %ptr.addr = alloca i8*, align 8
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !2577, metadata !431), !dbg !2578
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !2579, metadata !431), !dbg !2580
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !2581
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !2582
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !2583
  %call = call i32 @OPENSSL_sk_push(%struct.stack_st* %1, i8* %2), !dbg !2584
  ret i32 %call, !dbg !2585
}

declare i8* @opt_flag() #2

declare i32 @opt_verify(i32, %struct.X509_VERIFY_PARAM_st*) #2

declare i32 @args_excert(i32, %struct.ssl_excert_st**) #2

declare i32 @OCSP_parse_url(i8*, i8**, i8**, i8**, i32*) #2

declare %struct.bio_st* @BIO_new_file(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #6

declare %struct.ssl_method_st* @DTLS_server_method() #2

declare %struct.engine_st* @setup_engine(i8*, i32) #2

declare i32 @opt_rand(i32) #2

declare i32 @opt_num_rest() #2

declare i8** @opt_rest() #2

declare i32 @app_passwd(i8*, i8*, i8**, i8**) #2

declare i32 @load_excert(%struct.ssl_excert_st**) #2

declare %struct.evp_pkey_st* @load_key(i8*, i32, i32, i8*, %struct.engine_st*, i8*) #2

declare void @ERR_print_errors(%struct.bio_st*) #2

declare %struct.x509_st* @load_cert(i8*, i32, i8*) #2

declare i32 @load_certs(i8*, %struct.stack_st_X509**, i32, i8*, i8*) #2

declare i8* @next_protos_parse(i64*, i8*) #2

declare %struct.X509_crl_st* @load_crl(i8*, i32) #2

declare i32 @BIO_puts(%struct.bio_st*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.stack_st_X509_CRL* @sk_X509_CRL_new_null() #5 !dbg !2586 {
entry:
  %call = call %struct.stack_st* @OPENSSL_sk_new_null(), !dbg !2589
  %0 = bitcast %struct.stack_st* %call to %struct.stack_st_X509_CRL*, !dbg !2590
  ret %struct.stack_st_X509_CRL* %0, !dbg !2591
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_X509_CRL_push(%struct.stack_st_X509_CRL* %sk, %struct.X509_crl_st* %ptr) #5 !dbg !2592 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_CRL*, align 8
  %ptr.addr = alloca %struct.X509_crl_st*, align 8
  store %struct.stack_st_X509_CRL* %sk, %struct.stack_st_X509_CRL** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_CRL** %sk.addr, metadata !2595, metadata !431), !dbg !2596
  store %struct.X509_crl_st* %ptr, %struct.X509_crl_st** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.X509_crl_st** %ptr.addr, metadata !2597, metadata !431), !dbg !2598
  %0 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %sk.addr, align 8, !dbg !2599
  %1 = bitcast %struct.stack_st_X509_CRL* %0 to %struct.stack_st*, !dbg !2600
  %2 = load %struct.X509_crl_st*, %struct.X509_crl_st** %ptr.addr, align 8, !dbg !2601
  %3 = bitcast %struct.X509_crl_st* %2 to i8*, !dbg !2602
  %call = call i32 @OPENSSL_sk_push(%struct.stack_st* %1, i8* %3), !dbg !2603
  ret i32 %call, !dbg !2604
}

declare void @X509_CRL_free(%struct.X509_crl_st*) #2

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) #2

declare %struct.bio_method_st* @BIO_s_null() #2

declare %struct.bio_st* @dup_bio_out(i32) #2

declare %struct.ssl_ctx_st* @SSL_CTX_new(%struct.ssl_method_st*) #2

declare i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st*, i32, i64, i8*) #2

declare void @ssl_ctx_security_debug(%struct.ssl_ctx_st*, i32) #2

declare i32 @config_ctx(%struct.ssl_conf_ctx_st*, %struct.stack_st_OPENSSL_STRING*, %struct.ssl_ctx_st*) #2

declare i32 @SSL_CTX_config(%struct.ssl_ctx_st*, i8*) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

declare i32 @SSL_CTX_set_generate_session_id(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i32*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @generate_session_id(%struct.ssl_st* %ssl, i8* %id, i32* %id_len) #0 !dbg !2605 {
entry:
  %retval = alloca i32, align 4
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %id.addr = alloca i8*, align 8
  %id_len.addr = alloca i32*, align 8
  %count = alloca i32, align 4
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !2612, metadata !431), !dbg !2613
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !2614, metadata !431), !dbg !2615
  store i32* %id_len, i32** %id_len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %id_len.addr, metadata !2616, metadata !431), !dbg !2617
  call void @llvm.dbg.declare(metadata i32* %count, metadata !2618, metadata !431), !dbg !2619
  store i32 0, i32* %count, align 4, !dbg !2619
  br label %do.body, !dbg !2620, !llvm.loop !2621

do.body:                                          ; preds = %land.end, %entry
  %0 = load i8*, i8** %id.addr, align 8, !dbg !2622
  %1 = load i32*, i32** %id_len.addr, align 8, !dbg !2625
  %2 = load i32, i32* %1, align 4, !dbg !2626
  %call = call i32 @RAND_bytes(i8* %0, i32 %2), !dbg !2627
  %cmp = icmp sle i32 %call, 0, !dbg !2628
  br i1 %cmp, label %if.then, label %if.end, !dbg !2629

if.then:                                          ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !2630
  br label %return, !dbg !2630

if.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %id.addr, align 8, !dbg !2631
  %4 = load i8*, i8** @session_id_prefix, align 8, !dbg !2632
  %5 = load i8*, i8** @session_id_prefix, align 8, !dbg !2633
  %call1 = call i64 @strlen(i8* %5) #8, !dbg !2634
  %6 = load i32*, i32** %id_len.addr, align 8, !dbg !2635
  %7 = load i32, i32* %6, align 4, !dbg !2636
  %conv = zext i32 %7 to i64, !dbg !2636
  %cmp2 = icmp ult i64 %call1, %conv, !dbg !2637
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !2638

cond.true:                                        ; preds = %if.end
  %8 = load i8*, i8** @session_id_prefix, align 8, !dbg !2639
  %call4 = call i64 @strlen(i8* %8) #8, !dbg !2640
  br label %cond.end, !dbg !2641

cond.false:                                       ; preds = %if.end
  %9 = load i32*, i32** %id_len.addr, align 8, !dbg !2643
  %10 = load i32, i32* %9, align 4, !dbg !2644
  %conv5 = zext i32 %10 to i64, !dbg !2644
  br label %cond.end, !dbg !2645

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call4, %cond.true ], [ %conv5, %cond.false ], !dbg !2647
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 %cond, i32 1, i1 false), !dbg !2649
  br label %do.cond, !dbg !2650

do.cond:                                          ; preds = %cond.end
  %11 = load %struct.ssl_st*, %struct.ssl_st** %ssl.addr, align 8, !dbg !2651
  %12 = load i8*, i8** %id.addr, align 8, !dbg !2652
  %13 = load i32*, i32** %id_len.addr, align 8, !dbg !2653
  %14 = load i32, i32* %13, align 4, !dbg !2654
  %call6 = call i32 @SSL_has_matching_session_id(%struct.ssl_st* %11, i8* %12, i32 %14), !dbg !2655
  %tobool = icmp ne i32 %call6, 0, !dbg !2655
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2656

land.rhs:                                         ; preds = %do.cond
  %15 = load i32, i32* %count, align 4, !dbg !2657
  %inc = add i32 %15, 1, !dbg !2657
  store i32 %inc, i32* %count, align 4, !dbg !2657
  %cmp7 = icmp ult i32 %inc, 10, !dbg !2658
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %16 = phi i1 [ false, %do.cond ], [ %cmp7, %land.rhs ]
  br i1 %16, label %do.body, label %do.end, !dbg !2659, !llvm.loop !2621

do.end:                                           ; preds = %land.end
  %17 = load i32, i32* %count, align 4, !dbg !2660
  %cmp9 = icmp uge i32 %17, 10, !dbg !2662
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !2663

if.then11:                                        ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !2664
  br label %return, !dbg !2664

if.end12:                                         ; preds = %do.end
  store i32 1, i32* %retval, align 4, !dbg !2665
  br label %return, !dbg !2665

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !2666
  ret i32 %18, !dbg !2666
}

declare void @SSL_CTX_set_quiet_shutdown(%struct.ssl_ctx_st*, i32) #2

declare void @ssl_ctx_set_excert(%struct.ssl_ctx_st*, %struct.ssl_excert_st*) #2

declare void @SSL_CTX_set_info_callback(%struct.ssl_ctx_st*, void (%struct.ssl_st*, i32, i32)*) #2

declare void @apps_ssl_info_callback(%struct.ssl_st*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @init_session_cache_ctx(%struct.ssl_ctx_st* %sctx) #0 !dbg !2667 {
entry:
  %sctx.addr = alloca %struct.ssl_ctx_st*, align 8
  store %struct.ssl_ctx_st* %sctx, %struct.ssl_ctx_st** %sctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %sctx.addr, metadata !2670, metadata !431), !dbg !2671
  %0 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx.addr, align 8, !dbg !2672
  %call = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %0, i32 44, i64 770, i8* null), !dbg !2673
  %1 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx.addr, align 8, !dbg !2674
  call void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st* %1, i32 (%struct.ssl_st*, %struct.ssl_session_st*)* @add_session), !dbg !2675
  %2 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx.addr, align 8, !dbg !2676
  call void @SSL_CTX_sess_set_get_cb(%struct.ssl_ctx_st* %2, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)* @get_session), !dbg !2677
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %sctx.addr, align 8, !dbg !2678
  call void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st* %3, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)* @del_session), !dbg !2679
  ret void, !dbg !2680
}

declare void @SSL_CTX_set_default_read_buffer_len(%struct.ssl_ctx_st*, i64) #2

declare i32 @SSL_CTX_set_tlsext_use_srtp(%struct.ssl_ctx_st*, i8*) #2

declare i32 @ctx_set_verify_locations(%struct.ssl_ctx_st*, i8*, i8*, i32, i32) #2

declare i32 @SSL_CTX_set1_param(%struct.ssl_ctx_st*, %struct.X509_VERIFY_PARAM_st*) #2

declare i32 @ssl_ctx_add_crls(%struct.ssl_ctx_st*, %struct.stack_st_X509_CRL*, i32) #2

declare i32 @ssl_load_stores(%struct.ssl_ctx_st*, i8*, i8*, i8*, i8*, %struct.stack_st_X509_CRL*, i32) #2

declare void @SSL_CTX_set_next_protos_advertised_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @next_proto_cb(%struct.ssl_st* %s, i8** %data, i32* %len, i8* %arg) #0 !dbg !2681 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %data.addr = alloca i8**, align 8
  %len.addr = alloca i32*, align 8
  %arg.addr = alloca i8*, align 8
  %next_proto = alloca %struct.tlsextnextprotoctx_st*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !2684, metadata !431), !dbg !2685
  store i8** %data, i8*** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %data.addr, metadata !2686, metadata !431), !dbg !2687
  store i32* %len, i32** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %len.addr, metadata !2688, metadata !431), !dbg !2689
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2690, metadata !431), !dbg !2691
  call void @llvm.dbg.declare(metadata %struct.tlsextnextprotoctx_st** %next_proto, metadata !2692, metadata !431), !dbg !2694
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !2695
  %1 = bitcast i8* %0 to %struct.tlsextnextprotoctx_st*, !dbg !2695
  store %struct.tlsextnextprotoctx_st* %1, %struct.tlsextnextprotoctx_st** %next_proto, align 8, !dbg !2694
  %2 = load %struct.tlsextnextprotoctx_st*, %struct.tlsextnextprotoctx_st** %next_proto, align 8, !dbg !2696
  %data1 = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %2, i32 0, i32 0, !dbg !2697
  %3 = load i8*, i8** %data1, align 8, !dbg !2697
  %4 = load i8**, i8*** %data.addr, align 8, !dbg !2698
  store i8* %3, i8** %4, align 8, !dbg !2699
  %5 = load %struct.tlsextnextprotoctx_st*, %struct.tlsextnextprotoctx_st** %next_proto, align 8, !dbg !2700
  %len2 = getelementptr inbounds %struct.tlsextnextprotoctx_st, %struct.tlsextnextprotoctx_st* %5, i32 0, i32 1, !dbg !2701
  %6 = load i64, i64* %len2, align 8, !dbg !2701
  %conv = trunc i64 %6 to i32, !dbg !2700
  %7 = load i32*, i32** %len.addr, align 8, !dbg !2702
  store i32 %conv, i32* %7, align 4, !dbg !2703
  ret i32 0, !dbg !2704
}

declare void @SSL_CTX_set_alpn_select_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @alpn_cb(%struct.ssl_st* %s, i8** %out, i8* %outlen, i8* %in, i32 %inlen, i8* %arg) #0 !dbg !2705 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %out.addr = alloca i8**, align 8
  %outlen.addr = alloca i8*, align 8
  %in.addr = alloca i8*, align 8
  %inlen.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %alpn_ctx = alloca %struct.tlsextalpnctx_st*, align 8
  %i = alloca i32, align 4
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !2708, metadata !431), !dbg !2709
  store i8** %out, i8*** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %out.addr, metadata !2710, metadata !431), !dbg !2711
  store i8* %outlen, i8** %outlen.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %outlen.addr, metadata !2712, metadata !431), !dbg !2713
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !2714, metadata !431), !dbg !2715
  store i32 %inlen, i32* %inlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inlen.addr, metadata !2716, metadata !431), !dbg !2717
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !2718, metadata !431), !dbg !2719
  call void @llvm.dbg.declare(metadata %struct.tlsextalpnctx_st** %alpn_ctx, metadata !2720, metadata !431), !dbg !2722
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !2723
  %1 = bitcast i8* %0 to %struct.tlsextalpnctx_st*, !dbg !2723
  store %struct.tlsextalpnctx_st* %1, %struct.tlsextalpnctx_st** %alpn_ctx, align 8, !dbg !2722
  %2 = load i32, i32* @s_quiet, align 4, !dbg !2724
  %tobool = icmp ne i32 %2, 0, !dbg !2724
  br i1 %tobool, label %if.end13, label %if.then, !dbg !2726

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2727, metadata !431), !dbg !2729
  %3 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2730
  %call = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.407, i32 0, i32 0)), !dbg !2731
  store i32 0, i32* %i, align 4, !dbg !2732
  br label %for.cond, !dbg !2734

for.cond:                                         ; preds = %if.end, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !2735
  %5 = load i32, i32* %inlen.addr, align 4, !dbg !2738
  %cmp = icmp ult i32 %4, %5, !dbg !2739
  br i1 %cmp, label %for.body, label %for.end, !dbg !2740

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !2741
  %tobool1 = icmp ne i32 %6, 0, !dbg !2741
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2744

if.then2:                                         ; preds = %for.body
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2745
  %call3 = call i32 @BIO_write(%struct.bio_st* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.408, i32 0, i32 0), i32 2), !dbg !2746
  br label %if.end, !dbg !2746

if.end:                                           ; preds = %if.then2, %for.body
  %8 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2747
  %9 = load i32, i32* %i, align 4, !dbg !2748
  %add = add i32 %9, 1, !dbg !2749
  %idxprom = zext i32 %add to i64, !dbg !2750
  %10 = load i8*, i8** %in.addr, align 8, !dbg !2750
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %idxprom, !dbg !2750
  %11 = load i32, i32* %i, align 4, !dbg !2751
  %idxprom4 = zext i32 %11 to i64, !dbg !2752
  %12 = load i8*, i8** %in.addr, align 8, !dbg !2752
  %arrayidx5 = getelementptr inbounds i8, i8* %12, i64 %idxprom4, !dbg !2752
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !2752
  %conv = zext i8 %13 to i32, !dbg !2752
  %call6 = call i32 @BIO_write(%struct.bio_st* %8, i8* %arrayidx, i32 %conv), !dbg !2753
  %14 = load i32, i32* %i, align 4, !dbg !2754
  %idxprom7 = zext i32 %14 to i64, !dbg !2755
  %15 = load i8*, i8** %in.addr, align 8, !dbg !2755
  %arrayidx8 = getelementptr inbounds i8, i8* %15, i64 %idxprom7, !dbg !2755
  %16 = load i8, i8* %arrayidx8, align 1, !dbg !2755
  %conv9 = zext i8 %16 to i32, !dbg !2755
  %add10 = add nsw i32 %conv9, 1, !dbg !2756
  %17 = load i32, i32* %i, align 4, !dbg !2757
  %add11 = add i32 %17, %add10, !dbg !2757
  store i32 %add11, i32* %i, align 4, !dbg !2757
  br label %for.cond, !dbg !2758, !llvm.loop !2760

for.end:                                          ; preds = %for.cond
  %18 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2762
  %call12 = call i32 @BIO_write(%struct.bio_st* %18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0), i32 1), !dbg !2763
  br label %if.end13, !dbg !2764

if.end13:                                         ; preds = %for.end, %entry
  %19 = load i8**, i8*** %out.addr, align 8, !dbg !2765
  %20 = load i8*, i8** %outlen.addr, align 8, !dbg !2767
  %21 = load %struct.tlsextalpnctx_st*, %struct.tlsextalpnctx_st** %alpn_ctx, align 8, !dbg !2768
  %data = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %21, i32 0, i32 0, !dbg !2769
  %22 = load i8*, i8** %data, align 8, !dbg !2769
  %23 = load %struct.tlsextalpnctx_st*, %struct.tlsextalpnctx_st** %alpn_ctx, align 8, !dbg !2770
  %len = getelementptr inbounds %struct.tlsextalpnctx_st, %struct.tlsextalpnctx_st* %23, i32 0, i32 1, !dbg !2771
  %24 = load i64, i64* %len, align 8, !dbg !2771
  %conv14 = trunc i64 %24 to i32, !dbg !2770
  %25 = load i8*, i8** %in.addr, align 8, !dbg !2772
  %26 = load i32, i32* %inlen.addr, align 4, !dbg !2773
  %call15 = call i32 @SSL_select_next_proto(i8** %19, i8* %20, i8* %22, i32 %conv14, i8* %25, i32 %26), !dbg !2774
  %cmp16 = icmp ne i32 %call15, 1, !dbg !2775
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !2776

if.then18:                                        ; preds = %if.end13
  store i32 3, i32* %retval, align 4, !dbg !2777
  br label %return, !dbg !2777

if.end19:                                         ; preds = %if.end13
  %27 = load i32, i32* @s_quiet, align 4, !dbg !2779
  %tobool20 = icmp ne i32 %27, 0, !dbg !2779
  br i1 %tobool20, label %if.end26, label %if.then21, !dbg !2781

if.then21:                                        ; preds = %if.end19
  %28 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2782
  %call22 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %28, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.410, i32 0, i32 0)), !dbg !2784
  %29 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2785
  %30 = load i8**, i8*** %out.addr, align 8, !dbg !2786
  %31 = load i8*, i8** %30, align 8, !dbg !2787
  %32 = load i8*, i8** %outlen.addr, align 8, !dbg !2788
  %33 = load i8, i8* %32, align 1, !dbg !2789
  %conv23 = zext i8 %33 to i32, !dbg !2789
  %call24 = call i32 @BIO_write(%struct.bio_st* %29, i8* %31, i32 %conv23), !dbg !2790
  %34 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2791
  %call25 = call i32 @BIO_write(%struct.bio_st* %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0), i32 1), !dbg !2792
  br label %if.end26, !dbg !2793

if.end26:                                         ; preds = %if.then21, %if.end19
  store i32 0, i32* %retval, align 4, !dbg !2794
  br label %return, !dbg !2794

return:                                           ; preds = %if.end26, %if.then18
  %35 = load i32, i32* %retval, align 4, !dbg !2795
  ret i32 %35, !dbg !2795
}

; Function Attrs: nounwind uwtable
define internal %struct.dh_st* @load_dh_param(i8* %dhfile) #0 !dbg !2796 {
entry:
  %dhfile.addr = alloca i8*, align 8
  %ret = alloca %struct.dh_st*, align 8
  %bio = alloca %struct.bio_st*, align 8
  store i8* %dhfile, i8** %dhfile.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dhfile.addr, metadata !2799, metadata !431), !dbg !2800
  call void @llvm.dbg.declare(metadata %struct.dh_st** %ret, metadata !2801, metadata !431), !dbg !2802
  store %struct.dh_st* null, %struct.dh_st** %ret, align 8, !dbg !2802
  call void @llvm.dbg.declare(metadata %struct.bio_st** %bio, metadata !2803, metadata !431), !dbg !2804
  %0 = load i8*, i8** %dhfile.addr, align 8, !dbg !2805
  %call = call %struct.bio_st* @BIO_new_file(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.401, i32 0, i32 0)), !dbg !2807
  store %struct.bio_st* %call, %struct.bio_st** %bio, align 8, !dbg !2808
  %cmp = icmp eq %struct.bio_st* %call, null, !dbg !2809
  br i1 %cmp, label %if.then, label %if.end, !dbg !2810

if.then:                                          ; preds = %entry
  br label %err, !dbg !2811

if.end:                                           ; preds = %entry
  %1 = load %struct.bio_st*, %struct.bio_st** %bio, align 8, !dbg !2812
  %call1 = call %struct.dh_st* @PEM_read_bio_DHparams(%struct.bio_st* %1, %struct.dh_st** null, i32 (i8*, i32, i32, i8*)* null, i8* null), !dbg !2813
  store %struct.dh_st* %call1, %struct.dh_st** %ret, align 8, !dbg !2814
  br label %err, !dbg !2815

err:                                              ; preds = %if.end, %if.then
  %2 = load %struct.bio_st*, %struct.bio_st** %bio, align 8, !dbg !2816
  %call2 = call i32 @BIO_free(%struct.bio_st* %2), !dbg !2817
  %3 = load %struct.dh_st*, %struct.dh_st** %ret, align 8, !dbg !2818
  ret %struct.dh_st* %3, !dbg !2819
}

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) #2

declare void @DH_free(%struct.dh_st*) #2

declare i32 @set_cert_key_stuff(%struct.ssl_ctx_st*, %struct.x509_st*, %struct.evp_pkey_st*, %struct.stack_st_X509*, i32) #2

declare i32 @SSL_CTX_use_serverinfo_file(%struct.ssl_ctx_st*, i8*) #2

declare void @SSL_CTX_set_not_resumable_session_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i32)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @not_resumable_sess_cb(%struct.ssl_st* %s, i32 %is_forward_secure) #0 !dbg !2820 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %is_forward_secure.addr = alloca i32, align 4
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !2823, metadata !431), !dbg !2824
  store i32 %is_forward_secure, i32* %is_forward_secure.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_forward_secure.addr, metadata !2825, metadata !431), !dbg !2826
  %0 = load i32, i32* %is_forward_secure.addr, align 4, !dbg !2827
  ret i32 %0, !dbg !2828
}

declare void @SSL_CTX_set_psk_server_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i8*, i32)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @psk_server_cb(%struct.ssl_st* %ssl, i8* %identity, i8* %psk, i32 %max_psk_len) #0 !dbg !2829 {
entry:
  %retval = alloca i32, align 4
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %identity.addr = alloca i8*, align 8
  %psk.addr = alloca i8*, align 8
  %max_psk_len.addr = alloca i32, align 4
  %key_len = alloca i64, align 8
  %key = alloca i8*, align 8
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !2832, metadata !431), !dbg !2833
  store i8* %identity, i8** %identity.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identity.addr, metadata !2834, metadata !431), !dbg !2835
  store i8* %psk, i8** %psk.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %psk.addr, metadata !2836, metadata !431), !dbg !2837
  store i32 %max_psk_len, i32* %max_psk_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_psk_len.addr, metadata !2838, metadata !431), !dbg !2839
  call void @llvm.dbg.declare(metadata i64* %key_len, metadata !2840, metadata !431), !dbg !2841
  store i64 0, i64* %key_len, align 8, !dbg !2841
  call void @llvm.dbg.declare(metadata i8** %key, metadata !2842, metadata !431), !dbg !2843
  %0 = load i32, i32* @s_debug, align 4, !dbg !2844
  %tobool = icmp ne i32 %0, 0, !dbg !2844
  br i1 %tobool, label %if.then, label %if.end, !dbg !2846

if.then:                                          ; preds = %entry
  %1 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2847
  %call = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.411, i32 0, i32 0)), !dbg !2848
  br label %if.end, !dbg !2848

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %identity.addr, align 8, !dbg !2849
  %cmp = icmp eq i8* %2, null, !dbg !2851
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !2852

if.then1:                                         ; preds = %if.end
  %3 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2853
  %call2 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.412, i32 0, i32 0)), !dbg !2855
  br label %out_err, !dbg !2856

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* @s_debug, align 4, !dbg !2857
  %tobool4 = icmp ne i32 %4, 0, !dbg !2857
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !2859

if.then5:                                         ; preds = %if.end3
  %5 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2860
  %6 = load i8*, i8** %identity.addr, align 8, !dbg !2861
  %call6 = call i64 @strlen(i8* %6) #8, !dbg !2862
  %conv = trunc i64 %call6 to i32, !dbg !2863
  %7 = load i8*, i8** %identity.addr, align 8, !dbg !2864
  %call7 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.413, i32 0, i32 0), i32 %conv, i8* %7), !dbg !2865
  br label %if.end8, !dbg !2865

if.end8:                                          ; preds = %if.then5, %if.end3
  %8 = load i8*, i8** %identity.addr, align 8, !dbg !2866
  %9 = load i8*, i8** @psk_identity, align 8, !dbg !2868
  %call9 = call i32 @strcmp(i8* %8, i8* %9) #8, !dbg !2869
  %cmp10 = icmp ne i32 %call9, 0, !dbg !2870
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !2871

if.then12:                                        ; preds = %if.end8
  %10 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2872
  %11 = load i8*, i8** %identity.addr, align 8, !dbg !2874
  %12 = load i8*, i8** @psk_identity, align 8, !dbg !2875
  %call13 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %10, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.414, i32 0, i32 0), i8* %11, i8* %12), !dbg !2876
  br label %if.end18, !dbg !2877

if.else:                                          ; preds = %if.end8
  %13 = load i32, i32* @s_debug, align 4, !dbg !2878
  %tobool14 = icmp ne i32 %13, 0, !dbg !2878
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !2881

if.then15:                                        ; preds = %if.else
  %14 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2882
  %call16 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %14, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.415, i32 0, i32 0)), !dbg !2883
  br label %if.end17, !dbg !2883

if.end17:                                         ; preds = %if.then15, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then12
  %15 = load i8*, i8** @psk_key, align 8, !dbg !2884
  %call19 = call i8* @OPENSSL_hexstr2buf(i8* %15, i64* %key_len), !dbg !2885
  store i8* %call19, i8** %key, align 8, !dbg !2886
  %16 = load i8*, i8** %key, align 8, !dbg !2887
  %cmp20 = icmp eq i8* %16, null, !dbg !2889
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !2890

if.then22:                                        ; preds = %if.end18
  %17 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2891
  %18 = load i8*, i8** @psk_key, align 8, !dbg !2893
  %call23 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %17, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.416, i32 0, i32 0), i8* %18), !dbg !2894
  store i32 0, i32* %retval, align 4, !dbg !2895
  br label %return, !dbg !2895

if.end24:                                         ; preds = %if.end18
  %19 = load i64, i64* %key_len, align 8, !dbg !2896
  %20 = load i32, i32* %max_psk_len.addr, align 4, !dbg !2898
  %conv25 = sext i32 %20 to i64, !dbg !2899
  %cmp26 = icmp sgt i64 %19, %conv25, !dbg !2900
  br i1 %cmp26, label %if.then28, label %if.end30, !dbg !2901

if.then28:                                        ; preds = %if.end24
  %21 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2902
  %22 = load i32, i32* %max_psk_len.addr, align 4, !dbg !2904
  %23 = load i64, i64* %key_len, align 8, !dbg !2905
  %call29 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %21, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.417, i32 0, i32 0), i32 %22, i64 %23), !dbg !2906
  %24 = load i8*, i8** %key, align 8, !dbg !2907
  call void @CRYPTO_free(i8* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 164), !dbg !2908
  store i32 0, i32* %retval, align 4, !dbg !2909
  br label %return, !dbg !2909

if.end30:                                         ; preds = %if.end24
  %25 = load i8*, i8** %psk.addr, align 8, !dbg !2910
  %26 = load i8*, i8** %key, align 8, !dbg !2911
  %27 = load i64, i64* %key_len, align 8, !dbg !2912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 %27, i32 1, i1 false), !dbg !2913
  %28 = load i8*, i8** %key, align 8, !dbg !2914
  call void @CRYPTO_free(i8* %28, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 169), !dbg !2915
  %29 = load i32, i32* @s_debug, align 4, !dbg !2916
  %tobool31 = icmp ne i32 %29, 0, !dbg !2916
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !2918

if.then32:                                        ; preds = %if.end30
  %30 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2919
  %31 = load i64, i64* %key_len, align 8, !dbg !2920
  %call33 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.418, i32 0, i32 0), i64 %31), !dbg !2921
  br label %if.end34, !dbg !2921

if.end34:                                         ; preds = %if.then32, %if.end30
  %32 = load i64, i64* %key_len, align 8, !dbg !2922
  %conv35 = trunc i64 %32 to i32, !dbg !2922
  store i32 %conv35, i32* %retval, align 4, !dbg !2923
  br label %return, !dbg !2923

out_err:                                          ; preds = %if.then1
  %33 = load i32, i32* @s_debug, align 4, !dbg !2924
  %tobool36 = icmp ne i32 %33, 0, !dbg !2924
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !2926

if.then37:                                        ; preds = %out_err
  %34 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2927
  %call38 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %34, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.419, i32 0, i32 0)), !dbg !2928
  br label %if.end39, !dbg !2928

if.end39:                                         ; preds = %if.then37, %out_err
  %35 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2929
  %call40 = call i64 @BIO_ctrl(%struct.bio_st* %35, i32 11, i64 0, i8* null), !dbg !2930
  %conv41 = trunc i64 %call40 to i32, !dbg !2931
  %36 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !2932
  %call42 = call i64 @BIO_ctrl(%struct.bio_st* %36, i32 11, i64 0, i8* null), !dbg !2933
  %conv43 = trunc i64 %call42 to i32, !dbg !2934
  store i32 0, i32* %retval, align 4, !dbg !2935
  br label %return, !dbg !2935

return:                                           ; preds = %if.end39, %if.end34, %if.then28, %if.then22
  %37 = load i32, i32* %retval, align 4, !dbg !2936
  ret i32 %37, !dbg !2936
}

declare i32 @SSL_CTX_use_psk_identity_hint(%struct.ssl_ctx_st*, i8*) #2

declare %struct.ssl_session_st* @PEM_read_bio_SSL_SESSION(%struct.bio_st*, %struct.ssl_session_st**, i32 (i8*, i32, i32, i8*)*, i8*) #2

declare i32 @BIO_free(%struct.bio_st*) #2

declare void @SSL_CTX_set_psk_find_session_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i64, %struct.ssl_session_st**)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @psk_find_session_cb(%struct.ssl_st* %ssl, i8* %identity, i64 %identity_len, %struct.ssl_session_st** %sess) #0 !dbg !2937 {
entry:
  %retval = alloca i32, align 4
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %identity.addr = alloca i8*, align 8
  %identity_len.addr = alloca i64, align 8
  %sess.addr = alloca %struct.ssl_session_st**, align 8
  %tmpsess = alloca %struct.ssl_session_st*, align 8
  %key = alloca i8*, align 8
  %key_len = alloca i64, align 8
  %cipher = alloca %struct.ssl_cipher_st*, align 8
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !2941, metadata !431), !dbg !2942
  store i8* %identity, i8** %identity.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %identity.addr, metadata !2943, metadata !431), !dbg !2944
  store i64 %identity_len, i64* %identity_len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %identity_len.addr, metadata !2945, metadata !431), !dbg !2946
  store %struct.ssl_session_st** %sess, %struct.ssl_session_st*** %sess.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st*** %sess.addr, metadata !2947, metadata !431), !dbg !2948
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st** %tmpsess, metadata !2949, metadata !431), !dbg !2950
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %tmpsess, align 8, !dbg !2950
  call void @llvm.dbg.declare(metadata i8** %key, metadata !2951, metadata !431), !dbg !2952
  call void @llvm.dbg.declare(metadata i64* %key_len, metadata !2953, metadata !431), !dbg !2954
  call void @llvm.dbg.declare(metadata %struct.ssl_cipher_st** %cipher, metadata !2955, metadata !431), !dbg !2956
  store %struct.ssl_cipher_st* null, %struct.ssl_cipher_st** %cipher, align 8, !dbg !2956
  %0 = load i8*, i8** @psk_identity, align 8, !dbg !2957
  %call = call i64 @strlen(i8* %0) #8, !dbg !2959
  %1 = load i64, i64* %identity_len.addr, align 8, !dbg !2960
  %cmp = icmp ne i64 %call, %1, !dbg !2961
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2962

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** @psk_identity, align 8, !dbg !2963
  %3 = load i8*, i8** %identity.addr, align 8, !dbg !2965
  %4 = load i64, i64* %identity_len.addr, align 8, !dbg !2966
  %call1 = call i32 @memcmp(i8* %2, i8* %3, i64 %4) #8, !dbg !2967
  %cmp2 = icmp ne i32 %call1, 0, !dbg !2968
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2969

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.ssl_session_st**, %struct.ssl_session_st*** %sess.addr, align 8, !dbg !2971
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %5, align 8, !dbg !2973
  store i32 1, i32* %retval, align 4, !dbg !2974
  br label %return, !dbg !2974

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2975
  %cmp3 = icmp ne %struct.ssl_session_st* %6, null, !dbg !2977
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !2978

if.then4:                                         ; preds = %if.end
  %7 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2979
  %call5 = call i32 @SSL_SESSION_up_ref(%struct.ssl_session_st* %7), !dbg !2981
  %8 = load %struct.ssl_session_st*, %struct.ssl_session_st** @psksess, align 8, !dbg !2982
  %9 = load %struct.ssl_session_st**, %struct.ssl_session_st*** %sess.addr, align 8, !dbg !2983
  store %struct.ssl_session_st* %8, %struct.ssl_session_st** %9, align 8, !dbg !2984
  store i32 1, i32* %retval, align 4, !dbg !2985
  br label %return, !dbg !2985

if.end6:                                          ; preds = %if.end
  %10 = load i8*, i8** @psk_key, align 8, !dbg !2986
  %call7 = call i8* @OPENSSL_hexstr2buf(i8* %10, i64* %key_len), !dbg !2987
  store i8* %call7, i8** %key, align 8, !dbg !2988
  %11 = load i8*, i8** %key, align 8, !dbg !2989
  %cmp8 = icmp eq i8* %11, null, !dbg !2991
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !2992

if.then9:                                         ; preds = %if.end6
  %12 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !2993
  %13 = load i8*, i8** @psk_key, align 8, !dbg !2995
  %call10 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.416, i32 0, i32 0), i8* %13), !dbg !2996
  store i32 0, i32* %retval, align 4, !dbg !2997
  br label %return, !dbg !2997

if.end11:                                         ; preds = %if.end6
  %14 = load %struct.ssl_st*, %struct.ssl_st** %ssl.addr, align 8, !dbg !2998
  %call12 = call %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st* %14, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @tls13_aes128gcmsha256_id, i32 0, i32 0)), !dbg !2999
  store %struct.ssl_cipher_st* %call12, %struct.ssl_cipher_st** %cipher, align 8, !dbg !3000
  %15 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %cipher, align 8, !dbg !3001
  %cmp13 = icmp eq %struct.ssl_cipher_st* %15, null, !dbg !3003
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !3004

if.then14:                                        ; preds = %if.end11
  %16 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3005
  %call15 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.420, i32 0, i32 0)), !dbg !3007
  %17 = load i8*, i8** %key, align 8, !dbg !3008
  call void @CRYPTO_free(i8* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 217), !dbg !3009
  store i32 0, i32* %retval, align 4, !dbg !3010
  br label %return, !dbg !3010

if.end16:                                         ; preds = %if.end11
  %call17 = call %struct.ssl_session_st* @SSL_SESSION_new(), !dbg !3011
  store %struct.ssl_session_st* %call17, %struct.ssl_session_st** %tmpsess, align 8, !dbg !3012
  %18 = load %struct.ssl_session_st*, %struct.ssl_session_st** %tmpsess, align 8, !dbg !3013
  %cmp18 = icmp eq %struct.ssl_session_st* %18, null, !dbg !3015
  br i1 %cmp18, label %if.then28, label %lor.lhs.false19, !dbg !3016

lor.lhs.false19:                                  ; preds = %if.end16
  %19 = load %struct.ssl_session_st*, %struct.ssl_session_st** %tmpsess, align 8, !dbg !3017
  %20 = load i8*, i8** %key, align 8, !dbg !3019
  %21 = load i64, i64* %key_len, align 8, !dbg !3020
  %call20 = call i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st* %19, i8* %20, i64 %21), !dbg !3021
  %tobool = icmp ne i32 %call20, 0, !dbg !3021
  br i1 %tobool, label %lor.lhs.false21, label %if.then28, !dbg !3022

lor.lhs.false21:                                  ; preds = %lor.lhs.false19
  %22 = load %struct.ssl_session_st*, %struct.ssl_session_st** %tmpsess, align 8, !dbg !3023
  %23 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %cipher, align 8, !dbg !3024
  %call22 = call i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st* %22, %struct.ssl_cipher_st* %23), !dbg !3025
  %tobool23 = icmp ne i32 %call22, 0, !dbg !3025
  br i1 %tobool23, label %lor.lhs.false24, label %if.then28, !dbg !3026

lor.lhs.false24:                                  ; preds = %lor.lhs.false21
  %24 = load %struct.ssl_session_st*, %struct.ssl_session_st** %tmpsess, align 8, !dbg !3027
  %25 = load %struct.ssl_st*, %struct.ssl_st** %ssl.addr, align 8, !dbg !3028
  %call25 = call i32 @SSL_version(%struct.ssl_st* %25), !dbg !3029
  %call26 = call i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st* %24, i32 %call25), !dbg !3030
  %tobool27 = icmp ne i32 %call26, 0, !dbg !3032
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !3033

if.then28:                                        ; preds = %lor.lhs.false24, %lor.lhs.false21, %lor.lhs.false19, %if.end16
  %26 = load i8*, i8** %key, align 8, !dbg !3034
  call void @CRYPTO_free(i8* %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 226), !dbg !3036
  store i32 0, i32* %retval, align 4, !dbg !3037
  br label %return, !dbg !3037

if.end29:                                         ; preds = %lor.lhs.false24
  %27 = load i8*, i8** %key, align 8, !dbg !3038
  call void @CRYPTO_free(i8* %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 229), !dbg !3039
  %28 = load %struct.ssl_session_st*, %struct.ssl_session_st** %tmpsess, align 8, !dbg !3040
  %29 = load %struct.ssl_session_st**, %struct.ssl_session_st*** %sess.addr, align 8, !dbg !3041
  store %struct.ssl_session_st* %28, %struct.ssl_session_st** %29, align 8, !dbg !3042
  store i32 1, i32* %retval, align 4, !dbg !3043
  br label %return, !dbg !3043

return:                                           ; preds = %if.end29, %if.then28, %if.then14, %if.then9, %if.then4, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !3044
  ret i32 %30, !dbg !3044
}

declare void @SSL_CTX_set_verify(%struct.ssl_ctx_st*, i32, i32 (i32, %struct.x509_store_ctx_st*)*) #2

declare i32 @verify_callback(i32, %struct.x509_store_ctx_st*) #2

declare i32 @SSL_CTX_set_session_id_context(%struct.ssl_ctx_st*, i8*, i32) #2

declare void @SSL_CTX_set_cookie_generate_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i32*)*) #2

declare i32 @generate_cookie_callback(%struct.ssl_st*, i8*, i32*) #2

declare void @SSL_CTX_set_cookie_verify_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i32)*) #2

declare i32 @verify_cookie_callback(%struct.ssl_st*, i8*, i32) #2

declare void @SSL_CTX_set_stateless_cookie_generate_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i64*)*) #2

declare i32 @generate_stateless_cookie_callback(%struct.ssl_st*, i8*, i64*) #2

declare void @SSL_CTX_set_stateless_cookie_verify_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i8*, i64)*) #2

declare i32 @verify_stateless_cookie_callback(%struct.ssl_st*, i8*, i64) #2

declare i64 @SSL_CTX_callback_ctrl(%struct.ssl_ctx_st*, i32, void ()*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ssl_servername_cb(%struct.ssl_st* %s, i32* %ad, i8* %arg) #0 !dbg !3045 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %ad.addr = alloca i32*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca %struct.tlsextctx_st*, align 8
  %servername = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %uc = alloca i8, align 1
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !3049, metadata !431), !dbg !3050
  store i32* %ad, i32** %ad.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ad.addr, metadata !3051, metadata !431), !dbg !3052
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3053, metadata !431), !dbg !3054
  call void @llvm.dbg.declare(metadata %struct.tlsextctx_st** %p, metadata !3055, metadata !431), !dbg !3056
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3057
  %1 = bitcast i8* %0 to %struct.tlsextctx_st*, !dbg !3058
  store %struct.tlsextctx_st* %1, %struct.tlsextctx_st** %p, align 8, !dbg !3056
  call void @llvm.dbg.declare(metadata i8** %servername, metadata !3059, metadata !431), !dbg !3060
  %2 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !3061
  %call = call i8* @SSL_get_servername(%struct.ssl_st* %2, i32 0), !dbg !3062
  store i8* %call, i8** %servername, align 8, !dbg !3060
  %3 = load i8*, i8** %servername, align 8, !dbg !3063
  %cmp = icmp ne i8* %3, null, !dbg !3065
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3066

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3067
  %biodebug = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %4, i32 0, i32 1, !dbg !3069
  %5 = load %struct.bio_st*, %struct.bio_st** %biodebug, align 8, !dbg !3069
  %cmp1 = icmp ne %struct.bio_st* %5, null, !dbg !3070
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3071

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !3072, metadata !431), !dbg !3074
  %6 = load i8*, i8** %servername, align 8, !dbg !3075
  store i8* %6, i8** %cp, align 8, !dbg !3074
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !3076, metadata !431), !dbg !3077
  %7 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3078
  %biodebug2 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %7, i32 0, i32 1, !dbg !3079
  %8 = load %struct.bio_st*, %struct.bio_st** %biodebug2, align 8, !dbg !3079
  %call3 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.421, i32 0, i32 0)), !dbg !3080
  br label %while.cond, !dbg !3081

while.cond:                                       ; preds = %land.end, %if.then
  %9 = load i8*, i8** %cp, align 8, !dbg !3082
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !3082
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !3082
  %10 = load i8, i8* %9, align 1, !dbg !3084
  store i8 %10, i8* %uc, align 1, !dbg !3085
  %conv = zext i8 %10 to i32, !dbg !3086
  %cmp4 = icmp ne i32 %conv, 0, !dbg !3087
  br i1 %cmp4, label %while.body, label %while.end, !dbg !3088

while.body:                                       ; preds = %while.cond
  %11 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3089
  %biodebug6 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %11, i32 0, i32 1, !dbg !3090
  %12 = load %struct.bio_st*, %struct.bio_st** %biodebug6, align 8, !dbg !3090
  %13 = load i8, i8* %uc, align 1, !dbg !3091
  %conv7 = zext i8 %13 to i32, !dbg !3092
  %and = and i32 %conv7, -128, !dbg !3092
  %cmp8 = icmp eq i32 %and, 0, !dbg !3093
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !3094

land.rhs:                                         ; preds = %while.body
  %14 = load i8, i8* %uc, align 1, !dbg !3095
  %conv10 = zext i8 %14 to i32, !dbg !3096
  %idxprom = sext i32 %conv10 to i64, !dbg !3097
  %call11 = call i16** @__ctype_b_loc() #1, !dbg !3098
  %15 = load i16*, i16** %call11, align 8, !dbg !3099
  %arrayidx = getelementptr inbounds i16, i16* %15, i64 %idxprom, !dbg !3097
  %16 = load i16, i16* %arrayidx, align 2, !dbg !3097
  %conv12 = zext i16 %16 to i32, !dbg !3097
  %and13 = and i32 %conv12, 16384, !dbg !3100
  %tobool = icmp ne i32 %and13, 0, !dbg !3101
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.body
  %17 = phi i1 [ false, %while.body ], [ %tobool, %land.rhs ]
  %cond = select i1 %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.422, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.423, i32 0, i32 0), !dbg !3102
  %18 = load i8, i8* %uc, align 1, !dbg !3104
  %conv14 = zext i8 %18 to i32, !dbg !3104
  %call15 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %12, i8* %cond, i32 %conv14), !dbg !3105
  br label %while.cond, !dbg !3106, !llvm.loop !3107

while.end:                                        ; preds = %while.cond
  %19 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3108
  %biodebug16 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %19, i32 0, i32 1, !dbg !3109
  %20 = load %struct.bio_st*, %struct.bio_st** %biodebug16, align 8, !dbg !3109
  %call17 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.424, i32 0, i32 0)), !dbg !3110
  br label %if.end, !dbg !3111

if.end:                                           ; preds = %while.end, %land.lhs.true, %entry
  %21 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3112
  %servername18 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %21, i32 0, i32 0, !dbg !3114
  %22 = load i8*, i8** %servername18, align 8, !dbg !3114
  %cmp19 = icmp eq i8* %22, null, !dbg !3115
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !3116

if.then21:                                        ; preds = %if.end
  store i32 3, i32* %retval, align 4, !dbg !3117
  br label %return, !dbg !3117

if.end22:                                         ; preds = %if.end
  %23 = load i8*, i8** %servername, align 8, !dbg !3118
  %cmp23 = icmp ne i8* %23, null, !dbg !3120
  br i1 %cmp23, label %if.then25, label %if.end38, !dbg !3121

if.then25:                                        ; preds = %if.end22
  %24 = load i8*, i8** %servername, align 8, !dbg !3122
  %25 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3125
  %servername26 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %25, i32 0, i32 0, !dbg !3126
  %26 = load i8*, i8** %servername26, align 8, !dbg !3126
  %call27 = call i32 @strcasecmp(i8* %24, i8* %26) #8, !dbg !3127
  %tobool28 = icmp ne i32 %call27, 0, !dbg !3127
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !3128

if.then29:                                        ; preds = %if.then25
  %27 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3129
  %extension_error = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %27, i32 0, i32 2, !dbg !3130
  %28 = load i32, i32* %extension_error, align 8, !dbg !3130
  store i32 %28, i32* %retval, align 4, !dbg !3131
  br label %return, !dbg !3131

if.end30:                                         ; preds = %if.then25
  %29 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !3132
  %cmp31 = icmp ne %struct.ssl_ctx_st* %29, null, !dbg !3134
  br i1 %cmp31, label %if.then33, label %if.end37, !dbg !3135

if.then33:                                        ; preds = %if.end30
  %30 = load %struct.tlsextctx_st*, %struct.tlsextctx_st** %p, align 8, !dbg !3136
  %biodebug34 = getelementptr inbounds %struct.tlsextctx_st, %struct.tlsextctx_st* %30, i32 0, i32 1, !dbg !3138
  %31 = load %struct.bio_st*, %struct.bio_st** %biodebug34, align 8, !dbg !3138
  %call35 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %31, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.425, i32 0, i32 0)), !dbg !3139
  %32 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !3140
  %33 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx2, align 8, !dbg !3141
  %call36 = call %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st* %32, %struct.ssl_ctx_st* %33), !dbg !3142
  br label %if.end37, !dbg !3143

if.end37:                                         ; preds = %if.then33, %if.end30
  br label %if.end38, !dbg !3144

if.end38:                                         ; preds = %if.end37, %if.end22
  store i32 0, i32* %retval, align 4, !dbg !3145
  br label %return, !dbg !3145

return:                                           ; preds = %if.end38, %if.then29, %if.then21
  %34 = load i32, i32* %retval, align 4, !dbg !3146
  ret i32 %34, !dbg !3146
}

declare %struct.SRP_VBASE_st* @SRP_VBASE_new(i8*) #2

declare i32 @SRP_VBASE_init(%struct.SRP_VBASE_st*, i8*) #2

declare i32 @SSL_CTX_set_srp_cb_arg(%struct.ssl_ctx_st*, i8*) #2

declare i32 @SSL_CTX_set_srp_username_callback(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, i32*, i8*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ssl_srp_server_param_cb(%struct.ssl_st* %s, i32* %ad, i8* %arg) #0 !dbg !3147 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.ssl_st*, align 8
  %ad.addr = alloca i32*, align 8
  %arg.addr = alloca i8*, align 8
  %p = alloca %struct.srpsrvparm_st*, align 8
  %ret = alloca i32, align 4
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !3148, metadata !431), !dbg !3149
  store i32* %ad, i32** %ad.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ad.addr, metadata !3150, metadata !431), !dbg !3151
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3152, metadata !431), !dbg !3153
  call void @llvm.dbg.declare(metadata %struct.srpsrvparm_st** %p, metadata !3154, metadata !431), !dbg !3155
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3156
  %1 = bitcast i8* %0 to %struct.srpsrvparm_st*, !dbg !3157
  store %struct.srpsrvparm_st* %1, %struct.srpsrvparm_st** %p, align 8, !dbg !3155
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3158, metadata !431), !dbg !3159
  store i32 2, i32* %ret, align 4, !dbg !3159
  %2 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3160
  %login = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %2, i32 0, i32 0, !dbg !3162
  %3 = load i8*, i8** %login, align 8, !dbg !3162
  %cmp = icmp eq i8* %3, null, !dbg !3163
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3164

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3165
  %user = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %4, i32 0, i32 2, !dbg !3167
  %5 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user, align 8, !dbg !3167
  %cmp1 = icmp eq %struct.SRP_user_pwd_st* %5, null, !dbg !3168
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3169

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !3170
  %call = call i8* @SSL_get_srp_username(%struct.ssl_st* %6), !dbg !3172
  %7 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3173
  %login2 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %7, i32 0, i32 0, !dbg !3174
  store i8* %call, i8** %login2, align 8, !dbg !3175
  %8 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3176
  %9 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3177
  %login3 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %9, i32 0, i32 0, !dbg !3178
  %10 = load i8*, i8** %login3, align 8, !dbg !3178
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.426, i32 0, i32 0), i8* %10), !dbg !3179
  store i32 -1, i32* %retval, align 4, !dbg !3180
  br label %return, !dbg !3180

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3181
  %user5 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %11, i32 0, i32 2, !dbg !3183
  %12 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user5, align 8, !dbg !3183
  %cmp6 = icmp eq %struct.SRP_user_pwd_st* %12, null, !dbg !3184
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !3185

if.then7:                                         ; preds = %if.end
  %13 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3186
  %14 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3188
  %login8 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %14, i32 0, i32 0, !dbg !3189
  %15 = load i8*, i8** %login8, align 8, !dbg !3189
  %call9 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.427, i32 0, i32 0), i8* %15), !dbg !3190
  br label %err, !dbg !3191

if.end10:                                         ; preds = %if.end
  %16 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !3192
  %17 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3194
  %user11 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %17, i32 0, i32 2, !dbg !3195
  %18 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user11, align 8, !dbg !3195
  %N = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %18, i32 0, i32 4, !dbg !3196
  %19 = load %struct.bignum_st*, %struct.bignum_st** %N, align 8, !dbg !3196
  %20 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3197
  %user12 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %20, i32 0, i32 2, !dbg !3198
  %21 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user12, align 8, !dbg !3198
  %g = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %21, i32 0, i32 3, !dbg !3199
  %22 = load %struct.bignum_st*, %struct.bignum_st** %g, align 8, !dbg !3199
  %23 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3200
  %user13 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %23, i32 0, i32 2, !dbg !3201
  %24 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user13, align 8, !dbg !3201
  %s14 = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %24, i32 0, i32 1, !dbg !3202
  %25 = load %struct.bignum_st*, %struct.bignum_st** %s14, align 8, !dbg !3202
  %26 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3203
  %user15 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %26, i32 0, i32 2, !dbg !3204
  %27 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user15, align 8, !dbg !3204
  %v = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %27, i32 0, i32 2, !dbg !3205
  %28 = load %struct.bignum_st*, %struct.bignum_st** %v, align 8, !dbg !3205
  %29 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3206
  %user16 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %29, i32 0, i32 2, !dbg !3207
  %30 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user16, align 8, !dbg !3207
  %info = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %30, i32 0, i32 5, !dbg !3208
  %31 = load i8*, i8** %info, align 8, !dbg !3208
  %call17 = call i32 @SSL_set_srp_server_param(%struct.ssl_st* %16, %struct.bignum_st* %19, %struct.bignum_st* %22, %struct.bignum_st* %25, %struct.bignum_st* %28, i8* %31), !dbg !3209
  %cmp18 = icmp slt i32 %call17, 0, !dbg !3210
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !3211

if.then19:                                        ; preds = %if.end10
  %32 = load i32*, i32** %ad.addr, align 8, !dbg !3212
  store i32 80, i32* %32, align 4, !dbg !3214
  br label %err, !dbg !3215

if.end20:                                         ; preds = %if.end10
  %33 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3216
  %34 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3217
  %login21 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %34, i32 0, i32 0, !dbg !3218
  %35 = load i8*, i8** %login21, align 8, !dbg !3218
  %36 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3219
  %user22 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %36, i32 0, i32 2, !dbg !3220
  %37 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user22, align 8, !dbg !3220
  %info23 = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %37, i32 0, i32 5, !dbg !3221
  %38 = load i8*, i8** %info23, align 8, !dbg !3221
  %call24 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %33, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.428, i32 0, i32 0), i8* %35, i8* %38), !dbg !3222
  store i32 0, i32* %ret, align 4, !dbg !3223
  br label %err, !dbg !3224

err:                                              ; preds = %if.end20, %if.then19, %if.then7
  %39 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3225
  %user25 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %39, i32 0, i32 2, !dbg !3226
  %40 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** %user25, align 8, !dbg !3226
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %40), !dbg !3227
  %41 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3228
  %user26 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %41, i32 0, i32 2, !dbg !3229
  store %struct.SRP_user_pwd_st* null, %struct.SRP_user_pwd_st** %user26, align 8, !dbg !3230
  %42 = load %struct.srpsrvparm_st*, %struct.srpsrvparm_st** %p, align 8, !dbg !3231
  %login27 = getelementptr inbounds %struct.srpsrvparm_st, %struct.srpsrvparm_st* %42, i32 0, i32 0, !dbg !3232
  store i8* null, i8** %login27, align 8, !dbg !3233
  %43 = load i32, i32* %ret, align 4, !dbg !3234
  store i32 %43, i32* %retval, align 4, !dbg !3235
  br label %return, !dbg !3235

return:                                           ; preds = %err, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !3236
  ret i32 %44, !dbg !3236
}

declare void @SSL_CTX_set_client_CA_list(%struct.ssl_ctx_st*, %struct.stack_st_X509_NAME*) #2

declare %struct.stack_st_X509_NAME* @SSL_load_client_CA_file(i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @cert_status_cb(%struct.ssl_st* %s, i8* %arg) #0 !dbg !3237 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %arg.addr = alloca i8*, align 8
  %srctx = alloca %struct.tlsextstatusctx_st*, align 8
  %resp = alloca %struct.ocsp_response_st*, align 8
  %rspder = alloca i8*, align 8
  %rspderlen = alloca i32, align 4
  %ret = alloca i32, align 4
  %derbio = alloca %struct.bio_st*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !3240, metadata !431), !dbg !3241
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3242, metadata !431), !dbg !3243
  call void @llvm.dbg.declare(metadata %struct.tlsextstatusctx_st** %srctx, metadata !3244, metadata !431), !dbg !3246
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3247
  %1 = bitcast i8* %0 to %struct.tlsextstatusctx_st*, !dbg !3247
  store %struct.tlsextstatusctx_st* %1, %struct.tlsextstatusctx_st** %srctx, align 8, !dbg !3246
  call void @llvm.dbg.declare(metadata %struct.ocsp_response_st** %resp, metadata !3248, metadata !431), !dbg !3249
  store %struct.ocsp_response_st* null, %struct.ocsp_response_st** %resp, align 8, !dbg !3249
  call void @llvm.dbg.declare(metadata i8** %rspder, metadata !3250, metadata !431), !dbg !3251
  store i8* null, i8** %rspder, align 8, !dbg !3251
  call void @llvm.dbg.declare(metadata i32* %rspderlen, metadata !3252, metadata !431), !dbg !3253
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3254, metadata !431), !dbg !3255
  store i32 2, i32* %ret, align 4, !dbg !3255
  %2 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx, align 8, !dbg !3256
  %verbose = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %2, i32 0, i32 6, !dbg !3258
  %3 = load i32, i32* %verbose, align 4, !dbg !3258
  %tobool = icmp ne i32 %3, 0, !dbg !3256
  br i1 %tobool, label %if.then, label %if.end, !dbg !3259

if.then:                                          ; preds = %entry
  %4 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3260
  %call = call i32 @BIO_puts(%struct.bio_st* %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.429, i32 0, i32 0)), !dbg !3261
  br label %if.end, !dbg !3261

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx, align 8, !dbg !3262
  %respin = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %5, i32 0, i32 1, !dbg !3264
  %6 = load i8*, i8** %respin, align 8, !dbg !3264
  %cmp = icmp ne i8* %6, null, !dbg !3265
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3266

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.bio_st** %derbio, metadata !3267, metadata !431), !dbg !3269
  %7 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx, align 8, !dbg !3270
  %respin2 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %7, i32 0, i32 1, !dbg !3271
  %8 = load i8*, i8** %respin2, align 8, !dbg !3271
  %call3 = call %struct.bio_st* @bio_open_default(i8* %8, i8 signext 114, i32 4), !dbg !3272
  store %struct.bio_st* %call3, %struct.bio_st** %derbio, align 8, !dbg !3269
  %9 = load %struct.bio_st*, %struct.bio_st** %derbio, align 8, !dbg !3273
  %cmp4 = icmp eq %struct.bio_st* %9, null, !dbg !3275
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !3276

if.then5:                                         ; preds = %if.then1
  %10 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3277
  %call6 = call i32 @BIO_puts(%struct.bio_st* %10, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.430, i32 0, i32 0)), !dbg !3279
  br label %err, !dbg !3280

if.end7:                                          ; preds = %if.then1
  %11 = load %struct.bio_st*, %struct.bio_st** %derbio, align 8, !dbg !3281
  %call8 = call i8* @ASN1_d2i_bio(i8* ()* bitcast (%struct.ocsp_response_st* ()* @OCSP_RESPONSE_new to i8* ()*), i8* (i8**, i8**, i64)* bitcast (%struct.ocsp_response_st* (%struct.ocsp_response_st**, i8**, i64)* @d2i_OCSP_RESPONSE to i8* (i8**, i8**, i64)*), %struct.bio_st* %11, i8** null), !dbg !3282
  %12 = bitcast i8* %call8 to %struct.ocsp_response_st*, !dbg !3283
  store %struct.ocsp_response_st* %12, %struct.ocsp_response_st** %resp, align 8, !dbg !3284
  %13 = load %struct.bio_st*, %struct.bio_st** %derbio, align 8, !dbg !3285
  %call9 = call i32 @BIO_free(%struct.bio_st* %13), !dbg !3286
  %14 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %resp, align 8, !dbg !3287
  %cmp10 = icmp eq %struct.ocsp_response_st* %14, null, !dbg !3289
  br i1 %cmp10, label %if.then11, label %if.end13, !dbg !3290

if.then11:                                        ; preds = %if.end7
  %15 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3291
  %call12 = call i32 @BIO_puts(%struct.bio_st* %15, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.431, i32 0, i32 0)), !dbg !3293
  br label %err, !dbg !3294

if.end13:                                         ; preds = %if.end7
  br label %if.end18, !dbg !3295

if.else:                                          ; preds = %if.end
  %16 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !3296
  %17 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx, align 8, !dbg !3298
  %call14 = call i32 @get_ocsp_resp_from_responder(%struct.ssl_st* %16, %struct.tlsextstatusctx_st* %17, %struct.ocsp_response_st** %resp), !dbg !3299
  store i32 %call14, i32* %ret, align 4, !dbg !3300
  %18 = load i32, i32* %ret, align 4, !dbg !3301
  %cmp15 = icmp ne i32 %18, 0, !dbg !3303
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3304

if.then16:                                        ; preds = %if.else
  br label %err, !dbg !3305

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end13
  %19 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %resp, align 8, !dbg !3306
  %call19 = call i32 @i2d_OCSP_RESPONSE(%struct.ocsp_response_st* %19, i8** %rspder), !dbg !3307
  store i32 %call19, i32* %rspderlen, align 4, !dbg !3308
  %20 = load i32, i32* %rspderlen, align 4, !dbg !3309
  %cmp20 = icmp sle i32 %20, 0, !dbg !3311
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !3312

if.then21:                                        ; preds = %if.end18
  br label %err, !dbg !3313

if.end22:                                         ; preds = %if.end18
  %21 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !3314
  %22 = load i32, i32* %rspderlen, align 4, !dbg !3315
  %conv = sext i32 %22 to i64, !dbg !3315
  %23 = load i8*, i8** %rspder, align 8, !dbg !3316
  %call23 = call i64 @SSL_ctrl(%struct.ssl_st* %21, i32 71, i64 %conv, i8* %23), !dbg !3317
  %24 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx, align 8, !dbg !3318
  %verbose24 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %24, i32 0, i32 6, !dbg !3320
  %25 = load i32, i32* %verbose24, align 4, !dbg !3320
  %tobool25 = icmp ne i32 %25, 0, !dbg !3318
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !3321

if.then26:                                        ; preds = %if.end22
  %26 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3322
  %call27 = call i32 @BIO_puts(%struct.bio_st* %26, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.432, i32 0, i32 0)), !dbg !3324
  %27 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3325
  %28 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %resp, align 8, !dbg !3326
  %call28 = call i32 @OCSP_RESPONSE_print(%struct.bio_st* %27, %struct.ocsp_response_st* %28, i64 2), !dbg !3327
  br label %if.end29, !dbg !3328

if.end29:                                         ; preds = %if.then26, %if.end22
  store i32 0, i32* %ret, align 4, !dbg !3329
  br label %err, !dbg !3330

err:                                              ; preds = %if.end29, %if.then21, %if.then16, %if.then11, %if.then5
  %29 = load i32, i32* %ret, align 4, !dbg !3331
  %cmp30 = icmp ne i32 %29, 0, !dbg !3333
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !3334

if.then32:                                        ; preds = %err
  %30 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3335
  call void @ERR_print_errors(%struct.bio_st* %30), !dbg !3336
  br label %if.end33, !dbg !3336

if.end33:                                         ; preds = %if.then32, %err
  %31 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %resp, align 8, !dbg !3337
  call void @OCSP_RESPONSE_free(%struct.ocsp_response_st* %31), !dbg !3338
  %32 = load i32, i32* %ret, align 4, !dbg !3339
  ret i32 %32, !dbg !3340
}

declare i32 @set_keylog_file(%struct.ssl_ctx_st*, i8*) #2

declare i32 @SSL_CTX_set_max_early_data(%struct.ssl_ctx_st*, i32) #2

declare i32 @SSL_CTX_set_recv_max_early_data(%struct.ssl_ctx_st*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @rev_body(i32 %s, i32 %stype, i32 %prot, i8* %context) #0 !dbg !3341 {
entry:
  %s.addr = alloca i32, align 4
  %stype.addr = alloca i32, align 4
  %prot.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %con = alloca %struct.ssl_st*, align 8
  %io = alloca %struct.bio_st*, align 8
  %ssl_bio = alloca %struct.bio_st*, align 8
  %sbio = alloca %struct.bio_st*, align 8
  %p = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3342, metadata !431), !dbg !3343
  store i32 %stype, i32* %stype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stype.addr, metadata !3344, metadata !431), !dbg !3345
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !3346, metadata !431), !dbg !3347
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !3348, metadata !431), !dbg !3349
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3350, metadata !431), !dbg !3351
  store i8* null, i8** %buf, align 8, !dbg !3351
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3352, metadata !431), !dbg !3353
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3354, metadata !431), !dbg !3355
  store i32 1, i32* %ret, align 4, !dbg !3355
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con, metadata !3356, metadata !431), !dbg !3357
  call void @llvm.dbg.declare(metadata %struct.bio_st** %io, metadata !3358, metadata !431), !dbg !3359
  call void @llvm.dbg.declare(metadata %struct.bio_st** %ssl_bio, metadata !3360, metadata !431), !dbg !3361
  call void @llvm.dbg.declare(metadata %struct.bio_st** %sbio, metadata !3362, metadata !431), !dbg !3363
  %call = call i8* @app_malloc(i32 16384, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.540, i32 0, i32 0)), !dbg !3364
  store i8* %call, i8** %buf, align 8, !dbg !3365
  %call1 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !3366
  %call2 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1), !dbg !3367
  store %struct.bio_st* %call2, %struct.bio_st** %io, align 8, !dbg !3369
  %call3 = call %struct.bio_method_st* @BIO_f_ssl(), !dbg !3370
  %call4 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call3), !dbg !3371
  store %struct.bio_st* %call4, %struct.bio_st** %ssl_bio, align 8, !dbg !3372
  %0 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3373
  %cmp = icmp eq %struct.bio_st* %0, null, !dbg !3375
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3376

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bio_st*, %struct.bio_st** %ssl_bio, align 8, !dbg !3377
  %cmp5 = icmp eq %struct.bio_st* %1, null, !dbg !3379
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3380

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !3381

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3382
  %call6 = call i64 @BIO_int_ctrl(%struct.bio_st* %2, i32 117, i64 16384, i32 1), !dbg !3384
  %tobool = icmp ne i64 %call6, 0, !dbg !3384
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !3385

if.then7:                                         ; preds = %if.end
  br label %err, !dbg !3386

if.end8:                                          ; preds = %if.end
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !3387
  %call9 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* %3), !dbg !3389
  store %struct.ssl_st* %call9, %struct.ssl_st** %con, align 8, !dbg !3390
  %cmp10 = icmp eq %struct.ssl_st* %call9, null, !dbg !3391
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !3392

if.then11:                                        ; preds = %if.end8
  br label %err, !dbg !3393

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* @s_tlsextdebug, align 4, !dbg !3394
  %tobool13 = icmp ne i32 %4, 0, !dbg !3394
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !3396

if.then14:                                        ; preds = %if.end12
  %5 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3397
  %call15 = call i64 @SSL_callback_ctrl(%struct.ssl_st* %5, i32 56, void ()* bitcast (void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)* @tlsext_cb to void ()*)), !dbg !3399
  %6 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3400
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3401
  %8 = bitcast %struct.bio_st* %7 to i8*, !dbg !3401
  %call16 = call i64 @SSL_ctrl(%struct.ssl_st* %6, i32 57, i64 0, i8* %8), !dbg !3402
  br label %if.end17, !dbg !3403

if.end17:                                         ; preds = %if.then14, %if.end12
  %9 = load i8*, i8** %context.addr, align 8, !dbg !3404
  %cmp18 = icmp ne i8* %9, null, !dbg !3406
  br i1 %cmp18, label %land.lhs.true, label %if.end23, !dbg !3407

land.lhs.true:                                    ; preds = %if.end17
  %10 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3408
  %11 = load i8*, i8** %context.addr, align 8, !dbg !3410
  %12 = load i8*, i8** %context.addr, align 8, !dbg !3411
  %call19 = call i64 @strlen(i8* %12) #8, !dbg !3412
  %conv = trunc i64 %call19 to i32, !dbg !3412
  %call20 = call i32 @SSL_set_session_id_context(%struct.ssl_st* %10, i8* %11, i32 %conv), !dbg !3413
  %tobool21 = icmp ne i32 %call20, 0, !dbg !3413
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !3414

if.then22:                                        ; preds = %land.lhs.true
  %13 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3415
  call void @SSL_free(%struct.ssl_st* %13), !dbg !3417
  %14 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3418
  call void @ERR_print_errors(%struct.bio_st* %14), !dbg !3419
  br label %err, !dbg !3420

if.end23:                                         ; preds = %land.lhs.true, %if.end17
  %15 = load i32, i32* %s.addr, align 4, !dbg !3421
  %call24 = call %struct.bio_st* @BIO_new_socket(i32 %15, i32 0), !dbg !3422
  store %struct.bio_st* %call24, %struct.bio_st** %sbio, align 8, !dbg !3423
  %16 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3424
  %17 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3425
  %18 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3426
  call void @SSL_set_bio(%struct.ssl_st* %16, %struct.bio_st* %17, %struct.bio_st* %18), !dbg !3427
  %19 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3428
  call void @SSL_set_accept_state(%struct.ssl_st* %19), !dbg !3429
  %20 = load %struct.bio_st*, %struct.bio_st** %ssl_bio, align 8, !dbg !3430
  %21 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3431
  %22 = bitcast %struct.ssl_st* %21 to i8*, !dbg !3432
  %call25 = call i64 @BIO_ctrl(%struct.bio_st* %20, i32 109, i64 1, i8* %22), !dbg !3433
  %23 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3434
  %24 = load %struct.bio_st*, %struct.bio_st** %ssl_bio, align 8, !dbg !3435
  %call26 = call %struct.bio_st* @BIO_push(%struct.bio_st* %23, %struct.bio_st* %24), !dbg !3436
  %25 = load i32, i32* @s_debug, align 4, !dbg !3437
  %tobool27 = icmp ne i32 %25, 0, !dbg !3437
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !3439

if.then28:                                        ; preds = %if.end23
  %26 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3440
  %call29 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %26), !dbg !3442
  call void @BIO_set_callback(%struct.bio_st* %call29, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* @bio_dump_callback), !dbg !3443
  %27 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3445
  %call30 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %27), !dbg !3446
  %28 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3447
  %29 = bitcast %struct.bio_st* %28 to i8*, !dbg !3448
  call void @BIO_set_callback_arg(%struct.bio_st* %call30, i8* %29), !dbg !3449
  br label %if.end31, !dbg !3450

if.end31:                                         ; preds = %if.then28, %if.end23
  %30 = load i32, i32* @s_msg, align 4, !dbg !3451
  %tobool32 = icmp ne i32 %30, 0, !dbg !3451
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !3453

if.then33:                                        ; preds = %if.end31
  %31 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3454
  call void @SSL_set_msg_callback(%struct.ssl_st* %31, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* @msg_cb), !dbg !3456
  %32 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3457
  %33 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !3458
  %tobool34 = icmp ne %struct.bio_st* %33, null, !dbg !3458
  br i1 %tobool34, label %cond.true, label %cond.false, !dbg !3458

cond.true:                                        ; preds = %if.then33
  %34 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !3459
  br label %cond.end, !dbg !3461

cond.false:                                       ; preds = %if.then33
  %35 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3462
  br label %cond.end, !dbg !3464

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bio_st* [ %34, %cond.true ], [ %35, %cond.false ], !dbg !3465
  %36 = bitcast %struct.bio_st* %cond to i8*, !dbg !3467
  %call35 = call i64 @SSL_ctrl(%struct.ssl_st* %32, i32 16, i64 0, i8* %36), !dbg !3468
  br label %if.end36, !dbg !3469

if.end36:                                         ; preds = %cond.end, %if.end31
  br label %for.cond, !dbg !3470

for.cond:                                         ; preds = %if.end62, %if.end61, %if.end36
  %37 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3471
  %call37 = call i64 @BIO_ctrl(%struct.bio_st* %37, i32 101, i64 0, i8* null), !dbg !3475
  %conv38 = trunc i64 %call37 to i32, !dbg !3475
  store i32 %conv38, i32* %i, align 4, !dbg !3476
  %38 = load i32, i32* %i, align 4, !dbg !3477
  %cmp39 = icmp sgt i32 %38, 0, !dbg !3479
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !3480

if.then41:                                        ; preds = %for.cond
  br label %for.end, !dbg !3481

if.end42:                                         ; preds = %for.cond
  %39 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3482
  %call43 = call i32 @BIO_test_flags(%struct.bio_st* %39, i32 8), !dbg !3484
  %tobool44 = icmp ne i32 %call43, 0, !dbg !3484
  br i1 %tobool44, label %if.end47, label %if.then45, !dbg !3485

if.then45:                                        ; preds = %if.end42
  %40 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3486
  %call46 = call i32 @BIO_puts(%struct.bio_st* %40, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.541, i32 0, i32 0)), !dbg !3488
  %41 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3489
  call void @ERR_print_errors(%struct.bio_st* %41), !dbg !3490
  br label %end, !dbg !3491

if.end47:                                         ; preds = %if.end42
  %42 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3492
  %call48 = call i32 @BIO_test_flags(%struct.bio_st* %42, i32 4), !dbg !3494
  %tobool49 = icmp ne i32 %call48, 0, !dbg !3494
  br i1 %tobool49, label %land.lhs.true50, label %if.end62, !dbg !3495

land.lhs.true50:                                  ; preds = %if.end47
  %43 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3496
  %call51 = call i32 @BIO_get_retry_reason(%struct.bio_st* %43), !dbg !3498
  %cmp52 = icmp eq i32 %call51, 1, !dbg !3499
  br i1 %cmp52, label %if.then54, label %if.end62, !dbg !3500

if.then54:                                        ; preds = %land.lhs.true50
  %44 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3502
  %call55 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %44, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.542, i32 0, i32 0)), !dbg !3504
  %45 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3505
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %45), !dbg !3506
  %46 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !3507
  %47 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !3508
  %call56 = call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %46, i8* %47), !dbg !3509
  store %struct.SRP_user_pwd_st* %call56, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3510
  %48 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3511
  %tobool57 = icmp ne %struct.SRP_user_pwd_st* %48, null, !dbg !3513
  br i1 %tobool57, label %if.then58, label %if.else, !dbg !3514

if.then58:                                        ; preds = %if.then54
  %49 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3515
  %50 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3516
  %info = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %50, i32 0, i32 5, !dbg !3517
  %51 = load i8*, i8** %info, align 8, !dbg !3517
  %call59 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %49, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i32 0, i32 0), i8* %51), !dbg !3518
  br label %if.end61, !dbg !3518

if.else:                                          ; preds = %if.then54
  %52 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3519
  %call60 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0)), !dbg !3520
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then58
  br label %for.cond, !dbg !3521, !llvm.loop !3522

if.end62:                                         ; preds = %land.lhs.true50, %if.end47
  br label %for.cond, !dbg !3523, !llvm.loop !3522

for.end:                                          ; preds = %if.then41
  %53 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3525
  %call63 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %53, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.543, i32 0, i32 0)), !dbg !3526
  %54 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3527
  call void @print_ssl_summary(%struct.ssl_st* %54), !dbg !3528
  br label %for.cond64, !dbg !3529

for.cond64:                                       ; preds = %if.end135, %if.end93, %if.end92, %for.end
  %55 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3530
  %56 = load i8*, i8** %buf, align 8, !dbg !3534
  %call65 = call i32 @BIO_gets(%struct.bio_st* %55, i8* %56, i32 16383), !dbg !3535
  store i32 %call65, i32* %i, align 4, !dbg !3536
  %57 = load i32, i32* %i, align 4, !dbg !3537
  %cmp66 = icmp slt i32 %57, 0, !dbg !3539
  br i1 %cmp66, label %if.then68, label %if.else95, !dbg !3540

if.then68:                                        ; preds = %for.cond64
  %58 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3541
  %call69 = call i32 @BIO_test_flags(%struct.bio_st* %58, i32 8), !dbg !3544
  %tobool70 = icmp ne i32 %call69, 0, !dbg !3544
  br i1 %tobool70, label %if.else75, label %if.then71, !dbg !3545

if.then71:                                        ; preds = %if.then68
  %59 = load i32, i32* @s_quiet, align 4, !dbg !3546
  %tobool72 = icmp ne i32 %59, 0, !dbg !3546
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !3549

if.then73:                                        ; preds = %if.then71
  %60 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3550
  call void @ERR_print_errors(%struct.bio_st* %60), !dbg !3551
  br label %if.end74, !dbg !3551

if.end74:                                         ; preds = %if.then73, %if.then71
  br label %err, !dbg !3552

if.else75:                                        ; preds = %if.then68
  %61 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3553
  %call76 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %61, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.503, i32 0, i32 0)), !dbg !3555
  %62 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3556
  %call77 = call i32 @BIO_test_flags(%struct.bio_st* %62, i32 4), !dbg !3558
  %tobool78 = icmp ne i32 %call77, 0, !dbg !3558
  br i1 %tobool78, label %land.lhs.true79, label %if.end93, !dbg !3559

land.lhs.true79:                                  ; preds = %if.else75
  %63 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3560
  %call80 = call i32 @BIO_get_retry_reason(%struct.bio_st* %63), !dbg !3562
  %cmp81 = icmp eq i32 %call80, 1, !dbg !3563
  br i1 %cmp81, label %if.then83, label %if.end93, !dbg !3564

if.then83:                                        ; preds = %land.lhs.true79
  %64 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3566
  %call84 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %64, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.473, i32 0, i32 0)), !dbg !3568
  %65 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3569
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %65), !dbg !3570
  %66 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !3571
  %67 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !3572
  %call85 = call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %66, i8* %67), !dbg !3573
  store %struct.SRP_user_pwd_st* %call85, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3574
  %68 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3575
  %tobool86 = icmp ne %struct.SRP_user_pwd_st* %68, null, !dbg !3577
  br i1 %tobool86, label %if.then87, label %if.else90, !dbg !3578

if.then87:                                        ; preds = %if.then83
  %69 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3579
  %70 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3580
  %info88 = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %70, i32 0, i32 5, !dbg !3581
  %71 = load i8*, i8** %info88, align 8, !dbg !3581
  %call89 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %69, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i32 0, i32 0), i8* %71), !dbg !3582
  br label %if.end92, !dbg !3582

if.else90:                                        ; preds = %if.then83
  %72 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3583
  %call91 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %72, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0)), !dbg !3584
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %if.then87
  br label %for.cond64, !dbg !3585, !llvm.loop !3586

if.end93:                                         ; preds = %land.lhs.true79, %if.else75
  %call94 = call i32 @sleep(i32 1), !dbg !3587
  br label %for.cond64, !dbg !3588, !llvm.loop !3586

if.else95:                                        ; preds = %for.cond64
  %73 = load i32, i32* %i, align 4, !dbg !3589
  %cmp96 = icmp eq i32 %73, 0, !dbg !3591
  br i1 %cmp96, label %if.then98, label %if.else100, !dbg !3592

if.then98:                                        ; preds = %if.else95
  store i32 1, i32* %ret, align 4, !dbg !3593
  %74 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3595
  %call99 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %74, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.477, i32 0, i32 0)), !dbg !3596
  br label %end, !dbg !3597

if.else100:                                       ; preds = %if.else95
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3598, metadata !431), !dbg !3600
  %75 = load i8*, i8** %buf, align 8, !dbg !3601
  %76 = load i32, i32* %i, align 4, !dbg !3602
  %idx.ext = sext i32 %76 to i64, !dbg !3603
  %add.ptr = getelementptr inbounds i8, i8* %75, i64 %idx.ext, !dbg !3603
  %add.ptr101 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !3604
  store i8* %add.ptr101, i8** %p, align 8, !dbg !3600
  br label %while.cond, !dbg !3605

while.cond:                                       ; preds = %while.body, %if.else100
  %77 = load i32, i32* %i, align 4, !dbg !3606
  %tobool102 = icmp ne i32 %77, 0, !dbg !3606
  br i1 %tobool102, label %land.rhs, label %land.end, !dbg !3608

land.rhs:                                         ; preds = %while.cond
  %78 = load i8*, i8** %p, align 8, !dbg !3609
  %79 = load i8, i8* %78, align 1, !dbg !3611
  %conv103 = sext i8 %79 to i32, !dbg !3611
  %cmp104 = icmp eq i32 %conv103, 10, !dbg !3612
  br i1 %cmp104, label %lor.end, label %lor.rhs, !dbg !3613

lor.rhs:                                          ; preds = %land.rhs
  %80 = load i8*, i8** %p, align 8, !dbg !3614
  %81 = load i8, i8* %80, align 1, !dbg !3616
  %conv106 = sext i8 %81 to i32, !dbg !3616
  %cmp107 = icmp eq i32 %conv106, 13, !dbg !3617
  br label %lor.end, !dbg !3618

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %82 = phi i1 [ true, %land.rhs ], [ %cmp107, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %83 = phi i1 [ false, %while.cond ], [ %82, %lor.end ]
  br i1 %83, label %while.body, label %while.end, !dbg !3619

while.body:                                       ; preds = %land.end
  %84 = load i8*, i8** %p, align 8, !dbg !3621
  %incdec.ptr = getelementptr inbounds i8, i8* %84, i32 -1, !dbg !3621
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3621
  %85 = load i32, i32* %i, align 4, !dbg !3623
  %dec = add nsw i32 %85, -1, !dbg !3623
  store i32 %dec, i32* %i, align 4, !dbg !3623
  br label %while.cond, !dbg !3624, !llvm.loop !3626

while.end:                                        ; preds = %land.end
  %86 = load i32, i32* @s_ign_eof, align 4, !dbg !3627
  %tobool109 = icmp ne i32 %86, 0, !dbg !3627
  br i1 %tobool109, label %if.end119, label %land.lhs.true110, !dbg !3629

land.lhs.true110:                                 ; preds = %while.end
  %87 = load i32, i32* %i, align 4, !dbg !3630
  %cmp111 = icmp eq i32 %87, 5, !dbg !3632
  br i1 %cmp111, label %land.lhs.true113, label %if.end119, !dbg !3633

land.lhs.true113:                                 ; preds = %land.lhs.true110
  %88 = load i8*, i8** %buf, align 8, !dbg !3634
  %call114 = call i32 @strncmp(i8* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.544, i32 0, i32 0), i64 5) #8, !dbg !3636
  %cmp115 = icmp eq i32 %call114, 0, !dbg !3637
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !3638

if.then117:                                       ; preds = %land.lhs.true113
  store i32 1, i32* %ret, align 4, !dbg !3639
  %89 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3641
  %call118 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %89, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.477, i32 0, i32 0)), !dbg !3642
  br label %end, !dbg !3643

if.end119:                                        ; preds = %land.lhs.true113, %land.lhs.true110, %while.end
  %90 = load i8*, i8** %buf, align 8, !dbg !3644
  %91 = load i32, i32* %i, align 4, !dbg !3645
  %conv120 = sext i32 %91 to i64, !dbg !3645
  call void @BUF_reverse(i8* %90, i8* null, i64 %conv120), !dbg !3646
  %92 = load i32, i32* %i, align 4, !dbg !3647
  %idxprom = sext i32 %92 to i64, !dbg !3648
  %93 = load i8*, i8** %buf, align 8, !dbg !3648
  %arrayidx = getelementptr inbounds i8, i8* %93, i64 %idxprom, !dbg !3648
  store i8 10, i8* %arrayidx, align 1, !dbg !3649
  %94 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3650
  %95 = load i8*, i8** %buf, align 8, !dbg !3651
  %96 = load i32, i32* %i, align 4, !dbg !3652
  %add = add nsw i32 %96, 1, !dbg !3653
  %call121 = call i32 @BIO_write(%struct.bio_st* %94, i8* %95, i32 %add), !dbg !3654
  br label %for.cond122, !dbg !3655

for.cond122:                                      ; preds = %if.end132, %if.end119
  %97 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3656
  %call123 = call i64 @BIO_ctrl(%struct.bio_st* %97, i32 11, i64 0, i8* null), !dbg !3660
  %conv124 = trunc i64 %call123 to i32, !dbg !3661
  store i32 %conv124, i32* %i, align 4, !dbg !3662
  %98 = load i32, i32* %i, align 4, !dbg !3663
  %cmp125 = icmp sgt i32 %98, 0, !dbg !3665
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !3666

if.then127:                                       ; preds = %for.cond122
  br label %for.end133, !dbg !3667

if.end128:                                        ; preds = %for.cond122
  %99 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3668
  %call129 = call i32 @BIO_test_flags(%struct.bio_st* %99, i32 8), !dbg !3670
  %tobool130 = icmp ne i32 %call129, 0, !dbg !3670
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !3671

if.then131:                                       ; preds = %if.end128
  br label %end, !dbg !3672

if.end132:                                        ; preds = %if.end128
  br label %for.cond122, !dbg !3673, !llvm.loop !3675

for.end133:                                       ; preds = %if.then127
  br label %if.end134

if.end134:                                        ; preds = %for.end133
  br label %if.end135

if.end135:                                        ; preds = %if.end134
  br label %for.cond64, !dbg !3676, !llvm.loop !3586

end:                                              ; preds = %if.then131, %if.then117, %if.then98, %if.then45
  %100 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3678
  call void @SSL_set_shutdown(%struct.ssl_st* %100, i32 3), !dbg !3679
  br label %err, !dbg !3679

err:                                              ; preds = %end, %if.end74, %if.then22, %if.then11, %if.then7, %if.then
  %101 = load i8*, i8** %buf, align 8, !dbg !3680
  call void @CRYPTO_free(i8* %101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3489), !dbg !3681
  %102 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3682
  call void @BIO_free_all(%struct.bio_st* %102), !dbg !3683
  %103 = load i32, i32* %ret, align 4, !dbg !3684
  ret i32 %103, !dbg !3685
}

; Function Attrs: nounwind uwtable
define internal i32 @www_body(i32 %s, i32 %stype, i32 %prot, i8* %context) #0 !dbg !411 {
entry:
  %s.addr = alloca i32, align 4
  %stype.addr = alloca i32, align 4
  %prot.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dot = alloca i32, align 4
  %con = alloca %struct.ssl_st*, align 8
  %c = alloca %struct.ssl_cipher_st*, align 8
  %io = alloca %struct.bio_st*, align 8
  %ssl_bio = alloca %struct.bio_st*, align 8
  %sbio = alloca %struct.bio_st*, align 8
  %width = alloca i32, align 4
  %readfds = alloca %struct.fd_set, align 8
  %test = alloca %struct.bio_st*, align 8
  %p = alloca i8*, align 8
  %peer = alloca %struct.x509_st*, align 8
  %sk = alloca %struct.stack_st_SSL_CIPHER*, align 8
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %myp = alloca i8*, align 8
  %file = alloca %struct.bio_st*, align 8
  %p261 = alloca i8*, align 8
  %e = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !3686, metadata !431), !dbg !3687
  store i32 %stype, i32* %stype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stype.addr, metadata !3688, metadata !431), !dbg !3689
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !3690, metadata !431), !dbg !3691
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !3692, metadata !431), !dbg !3693
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !3694, metadata !431), !dbg !3695
  store i8* null, i8** %buf, align 8, !dbg !3695
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3696, metadata !431), !dbg !3697
  store i32 1, i32* %ret, align 4, !dbg !3697
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3698, metadata !431), !dbg !3699
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3700, metadata !431), !dbg !3701
  call void @llvm.dbg.declare(metadata i32* %k, metadata !3702, metadata !431), !dbg !3703
  call void @llvm.dbg.declare(metadata i32* %dot, metadata !3704, metadata !431), !dbg !3705
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con, metadata !3706, metadata !431), !dbg !3707
  call void @llvm.dbg.declare(metadata %struct.ssl_cipher_st** %c, metadata !3708, metadata !431), !dbg !3709
  call void @llvm.dbg.declare(metadata %struct.bio_st** %io, metadata !3710, metadata !431), !dbg !3711
  call void @llvm.dbg.declare(metadata %struct.bio_st** %ssl_bio, metadata !3712, metadata !431), !dbg !3713
  call void @llvm.dbg.declare(metadata %struct.bio_st** %sbio, metadata !3714, metadata !431), !dbg !3715
  call void @llvm.dbg.declare(metadata i32* %width, metadata !3716, metadata !431), !dbg !3717
  call void @llvm.dbg.declare(metadata %struct.fd_set* %readfds, metadata !3718, metadata !431), !dbg !3726
  %0 = load i32, i32* %s.addr, align 4, !dbg !3727
  %add = add nsw i32 %0, 1, !dbg !3728
  store i32 %add, i32* %width, align 4, !dbg !3729
  %call = call i8* @app_malloc(i32 16384, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.502, i32 0, i32 0)), !dbg !3730
  store i8* %call, i8** %buf, align 8, !dbg !3731
  %call1 = call %struct.bio_method_st* @BIO_f_buffer(), !dbg !3732
  %call2 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call1), !dbg !3733
  store %struct.bio_st* %call2, %struct.bio_st** %io, align 8, !dbg !3735
  %call3 = call %struct.bio_method_st* @BIO_f_ssl(), !dbg !3736
  %call4 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call3), !dbg !3737
  store %struct.bio_st* %call4, %struct.bio_st** %ssl_bio, align 8, !dbg !3738
  %1 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3739
  %cmp = icmp eq %struct.bio_st* %1, null, !dbg !3741
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3742

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.bio_st*, %struct.bio_st** %ssl_bio, align 8, !dbg !3743
  %cmp5 = icmp eq %struct.bio_st* %2, null, !dbg !3745
  br i1 %cmp5, label %if.then, label %if.end, !dbg !3746

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %err, !dbg !3747

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* @s_nbio, align 4, !dbg !3748
  %tobool = icmp ne i32 %3, 0, !dbg !3748
  br i1 %tobool, label %if.then6, label %if.end15, !dbg !3750

if.then6:                                         ; preds = %if.end
  %4 = load i32, i32* %s.addr, align 4, !dbg !3751
  %call7 = call i32 @BIO_socket_nbio(i32 %4, i32 1), !dbg !3754
  %tobool8 = icmp ne i32 %call7, 0, !dbg !3754
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !3755

if.then9:                                         ; preds = %if.then6
  %5 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3756
  call void @ERR_print_errors(%struct.bio_st* %5), !dbg !3757
  br label %if.end14, !dbg !3757

if.else:                                          ; preds = %if.then6
  %6 = load i32, i32* @s_quiet, align 4, !dbg !3758
  %tobool10 = icmp ne i32 %6, 0, !dbg !3758
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !3760

if.then11:                                        ; preds = %if.else
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3761
  %call12 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.451, i32 0, i32 0)), !dbg !3762
  br label %if.end13, !dbg !3762

if.end13:                                         ; preds = %if.then11, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then9
  br label %if.end15, !dbg !3763

if.end15:                                         ; preds = %if.end14, %if.end
  %8 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3764
  %call16 = call i64 @BIO_int_ctrl(%struct.bio_st* %8, i32 117, i64 16384, i32 1), !dbg !3766
  %tobool17 = icmp ne i64 %call16, 0, !dbg !3766
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !3767

if.then18:                                        ; preds = %if.end15
  br label %err, !dbg !3768

if.end19:                                         ; preds = %if.end15
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !3769
  %call20 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* %9), !dbg !3771
  store %struct.ssl_st* %call20, %struct.ssl_st** %con, align 8, !dbg !3772
  %cmp21 = icmp eq %struct.ssl_st* %call20, null, !dbg !3773
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !3774

if.then22:                                        ; preds = %if.end19
  br label %err, !dbg !3775

if.end23:                                         ; preds = %if.end19
  %10 = load i32, i32* @s_tlsextdebug, align 4, !dbg !3776
  %tobool24 = icmp ne i32 %10, 0, !dbg !3776
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !3778

if.then25:                                        ; preds = %if.end23
  %11 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3779
  %call26 = call i64 @SSL_callback_ctrl(%struct.ssl_st* %11, i32 56, void ()* bitcast (void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)* @tlsext_cb to void ()*)), !dbg !3781
  %12 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3782
  %13 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3783
  %14 = bitcast %struct.bio_st* %13 to i8*, !dbg !3783
  %call27 = call i64 @SSL_ctrl(%struct.ssl_st* %12, i32 57, i64 0, i8* %14), !dbg !3784
  br label %if.end28, !dbg !3785

if.end28:                                         ; preds = %if.then25, %if.end23
  %15 = load i8*, i8** %context.addr, align 8, !dbg !3786
  %cmp29 = icmp ne i8* %15, null, !dbg !3788
  br i1 %cmp29, label %land.lhs.true, label %if.end34, !dbg !3789

land.lhs.true:                                    ; preds = %if.end28
  %16 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3790
  %17 = load i8*, i8** %context.addr, align 8, !dbg !3792
  %18 = load i8*, i8** %context.addr, align 8, !dbg !3793
  %call30 = call i64 @strlen(i8* %18) #8, !dbg !3794
  %conv = trunc i64 %call30 to i32, !dbg !3794
  %call31 = call i32 @SSL_set_session_id_context(%struct.ssl_st* %16, i8* %17, i32 %conv), !dbg !3795
  %tobool32 = icmp ne i32 %call31, 0, !dbg !3795
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !3796

if.then33:                                        ; preds = %land.lhs.true
  %19 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3797
  call void @SSL_free(%struct.ssl_st* %19), !dbg !3799
  br label %err, !dbg !3800

if.end34:                                         ; preds = %land.lhs.true, %if.end28
  %20 = load i32, i32* %s.addr, align 4, !dbg !3801
  %call35 = call %struct.bio_st* @BIO_new_socket(i32 %20, i32 0), !dbg !3802
  store %struct.bio_st* %call35, %struct.bio_st** %sbio, align 8, !dbg !3803
  %21 = load i32, i32* @s_nbio_test, align 4, !dbg !3804
  %tobool36 = icmp ne i32 %21, 0, !dbg !3804
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !3806

if.then37:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.bio_st** %test, metadata !3807, metadata !431), !dbg !3809
  %call38 = call %struct.bio_method_st* @BIO_f_nbio_test(), !dbg !3810
  %call39 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call38), !dbg !3811
  store %struct.bio_st* %call39, %struct.bio_st** %test, align 8, !dbg !3813
  %22 = load %struct.bio_st*, %struct.bio_st** %test, align 8, !dbg !3814
  %23 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3815
  %call40 = call %struct.bio_st* @BIO_push(%struct.bio_st* %22, %struct.bio_st* %23), !dbg !3816
  store %struct.bio_st* %call40, %struct.bio_st** %sbio, align 8, !dbg !3817
  br label %if.end41, !dbg !3818

if.end41:                                         ; preds = %if.then37, %if.end34
  %24 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3819
  %25 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3820
  %26 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !3821
  call void @SSL_set_bio(%struct.ssl_st* %24, %struct.bio_st* %25, %struct.bio_st* %26), !dbg !3822
  %27 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3823
  call void @SSL_set_accept_state(%struct.ssl_st* %27), !dbg !3824
  %28 = load %struct.bio_st*, %struct.bio_st** %ssl_bio, align 8, !dbg !3825
  %29 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3826
  %30 = bitcast %struct.ssl_st* %29 to i8*, !dbg !3827
  %call42 = call i64 @BIO_ctrl(%struct.bio_st* %28, i32 109, i64 1, i8* %30), !dbg !3828
  %31 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3829
  %32 = load %struct.bio_st*, %struct.bio_st** %ssl_bio, align 8, !dbg !3830
  %call43 = call %struct.bio_st* @BIO_push(%struct.bio_st* %31, %struct.bio_st* %32), !dbg !3831
  %33 = load i32, i32* @s_debug, align 4, !dbg !3832
  %tobool44 = icmp ne i32 %33, 0, !dbg !3832
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !3834

if.then45:                                        ; preds = %if.end41
  %34 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3835
  %call46 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %34), !dbg !3837
  call void @BIO_set_callback(%struct.bio_st* %call46, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* @bio_dump_callback), !dbg !3838
  %35 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3840
  %call47 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %35), !dbg !3841
  %36 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3842
  %37 = bitcast %struct.bio_st* %36 to i8*, !dbg !3843
  call void @BIO_set_callback_arg(%struct.bio_st* %call47, i8* %37), !dbg !3844
  br label %if.end48, !dbg !3845

if.end48:                                         ; preds = %if.then45, %if.end41
  %38 = load i32, i32* @s_msg, align 4, !dbg !3846
  %tobool49 = icmp ne i32 %38, 0, !dbg !3846
  br i1 %tobool49, label %if.then50, label %if.end53, !dbg !3848

if.then50:                                        ; preds = %if.end48
  %39 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3849
  call void @SSL_set_msg_callback(%struct.ssl_st* %39, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* @msg_cb), !dbg !3851
  %40 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3852
  %41 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !3853
  %tobool51 = icmp ne %struct.bio_st* %41, null, !dbg !3853
  br i1 %tobool51, label %cond.true, label %cond.false, !dbg !3853

cond.true:                                        ; preds = %if.then50
  %42 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !3854
  br label %cond.end, !dbg !3856

cond.false:                                       ; preds = %if.then50
  %43 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3857
  br label %cond.end, !dbg !3859

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bio_st* [ %42, %cond.true ], [ %43, %cond.false ], !dbg !3860
  %44 = bitcast %struct.bio_st* %cond to i8*, !dbg !3862
  %call52 = call i64 @SSL_ctrl(%struct.ssl_st* %40, i32 16, i64 0, i8* %44), !dbg !3863
  br label %if.end53, !dbg !3864

if.end53:                                         ; preds = %cond.end, %if.end48
  br label %for.cond, !dbg !3865

for.cond:                                         ; preds = %if.end419, %if.end84, %if.end83, %if.end53
  %45 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3866
  %46 = load i8*, i8** %buf, align 8, !dbg !3870
  %call54 = call i32 @BIO_gets(%struct.bio_st* %45, i8* %46, i32 16383), !dbg !3871
  store i32 %call54, i32* %i, align 4, !dbg !3872
  %47 = load i32, i32* %i, align 4, !dbg !3873
  %cmp55 = icmp slt i32 %47, 0, !dbg !3875
  br i1 %cmp55, label %if.then57, label %if.else86, !dbg !3876

if.then57:                                        ; preds = %for.cond
  %48 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3877
  %call58 = call i32 @BIO_test_flags(%struct.bio_st* %48, i32 8), !dbg !3880
  %tobool59 = icmp ne i32 %call58, 0, !dbg !3880
  br i1 %tobool59, label %if.else67, label %land.lhs.true60, !dbg !3881

land.lhs.true60:                                  ; preds = %if.then57
  %49 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3882
  %call61 = call i32 @SSL_waiting_for_async(%struct.ssl_st* %49), !dbg !3884
  %tobool62 = icmp ne i32 %call61, 0, !dbg !3884
  br i1 %tobool62, label %if.else67, label %if.then63, !dbg !3885

if.then63:                                        ; preds = %land.lhs.true60
  %50 = load i32, i32* @s_quiet, align 4, !dbg !3886
  %tobool64 = icmp ne i32 %50, 0, !dbg !3886
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !3889

if.then65:                                        ; preds = %if.then63
  %51 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3890
  call void @ERR_print_errors(%struct.bio_st* %51), !dbg !3891
  br label %if.end66, !dbg !3891

if.end66:                                         ; preds = %if.then65, %if.then63
  br label %err, !dbg !3892

if.else67:                                        ; preds = %land.lhs.true60, %if.then57
  %52 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3893
  %call68 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.503, i32 0, i32 0)), !dbg !3895
  %53 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3896
  %call69 = call i32 @BIO_test_flags(%struct.bio_st* %53, i32 4), !dbg !3898
  %tobool70 = icmp ne i32 %call69, 0, !dbg !3898
  br i1 %tobool70, label %land.lhs.true71, label %if.end84, !dbg !3899

land.lhs.true71:                                  ; preds = %if.else67
  %54 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !3900
  %call72 = call i32 @BIO_get_retry_reason(%struct.bio_st* %54), !dbg !3902
  %cmp73 = icmp eq i32 %call72, 1, !dbg !3903
  br i1 %cmp73, label %if.then75, label %if.end84, !dbg !3904

if.then75:                                        ; preds = %land.lhs.true71
  %55 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3906
  %call76 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %55, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.473, i32 0, i32 0)), !dbg !3908
  %56 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3909
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %56), !dbg !3910
  %57 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !3911
  %58 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !3912
  %call77 = call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %57, i8* %58), !dbg !3913
  store %struct.SRP_user_pwd_st* %call77, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3914
  %59 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3915
  %tobool78 = icmp ne %struct.SRP_user_pwd_st* %59, null, !dbg !3917
  br i1 %tobool78, label %if.then79, label %if.else81, !dbg !3918

if.then79:                                        ; preds = %if.then75
  %60 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3919
  %61 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !3920
  %info = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %61, i32 0, i32 5, !dbg !3921
  %62 = load i8*, i8** %info, align 8, !dbg !3921
  %call80 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %60, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i32 0, i32 0), i8* %62), !dbg !3922
  br label %if.end83, !dbg !3922

if.else81:                                        ; preds = %if.then75
  %63 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3923
  %call82 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %63, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0)), !dbg !3924
  br label %if.end83

if.end83:                                         ; preds = %if.else81, %if.then79
  br label %for.cond, !dbg !3925, !llvm.loop !3926

if.end84:                                         ; preds = %land.lhs.true71, %if.else67
  %call85 = call i32 @sleep(i32 1), !dbg !3927
  br label %for.cond, !dbg !3928, !llvm.loop !3926

if.else86:                                        ; preds = %for.cond
  %64 = load i32, i32* %i, align 4, !dbg !3929
  %cmp87 = icmp eq i32 %64, 0, !dbg !3931
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !3932

if.then89:                                        ; preds = %if.else86
  store i32 1, i32* %ret, align 4, !dbg !3933
  br label %end, !dbg !3935

if.end90:                                         ; preds = %if.else86
  br label %if.end91

if.end91:                                         ; preds = %if.end90
  %65 = load i32, i32* @www, align 4, !dbg !3936
  %cmp92 = icmp eq i32 %65, 1, !dbg !3938
  br i1 %cmp92, label %land.lhs.true94, label %lor.lhs.false98, !dbg !3939

land.lhs.true94:                                  ; preds = %if.end91
  %66 = load i8*, i8** %buf, align 8, !dbg !3940
  %call95 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.504, i32 0, i32 0), i8* %66, i64 4) #8, !dbg !3942
  %cmp96 = icmp eq i32 %call95, 0, !dbg !3943
  br i1 %cmp96, label %if.then105, label %lor.lhs.false98, !dbg !3944

lor.lhs.false98:                                  ; preds = %land.lhs.true94, %if.end91
  %67 = load i32, i32* @www, align 4, !dbg !3945
  %cmp99 = icmp eq i32 %67, 2, !dbg !3946
  br i1 %cmp99, label %land.lhs.true101, label %if.else250, !dbg !3947

land.lhs.true101:                                 ; preds = %lor.lhs.false98
  %68 = load i8*, i8** %buf, align 8, !dbg !3948
  %call102 = call i32 @strncmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.505, i32 0, i32 0), i8* %68, i64 11) #8, !dbg !3949
  %cmp103 = icmp eq i32 %call102, 0, !dbg !3950
  br i1 %cmp103, label %if.then105, label %if.else250, !dbg !3951

if.then105:                                       ; preds = %land.lhs.true101, %land.lhs.true94
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3953, metadata !431), !dbg !3955
  call void @llvm.dbg.declare(metadata %struct.x509_st** %peer, metadata !3956, metadata !431), !dbg !3957
  store %struct.x509_st* null, %struct.x509_st** %peer, align 8, !dbg !3957
  call void @llvm.dbg.declare(metadata %struct.stack_st_SSL_CIPHER** %sk, metadata !3958, metadata !431), !dbg !3961
  %69 = load i32, i32* @www, align 4, !dbg !3962
  %cmp106 = icmp eq i32 %69, 1, !dbg !3964
  br i1 %cmp106, label %land.lhs.true108, label %if.end147, !dbg !3965

land.lhs.true108:                                 ; preds = %if.then105
  %70 = load i8*, i8** %buf, align 8, !dbg !3966
  %call109 = call i32 @strncmp(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.507, i32 0, i32 0), i8* %70, i64 10) #8, !dbg !3968
  %cmp110 = icmp eq i32 %call109, 0, !dbg !3969
  br i1 %cmp110, label %if.then112, label %if.end147, !dbg !3970

if.then112:                                       ; preds = %land.lhs.true108
  %71 = load i8*, i8** %buf, align 8, !dbg !3971
  %call113 = call i32 @strncmp(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.508, i32 0, i32 0), i8* %71, i64 14) #8, !dbg !3974
  %cmp114 = icmp eq i32 %call113, 0, !dbg !3975
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !3976

if.then116:                                       ; preds = %if.then112
  %72 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3977
  call void @SSL_set_verify(%struct.ssl_st* %72, i32 5, i32 (i32, %struct.x509_store_ctx_st*)* null), !dbg !3978
  br label %if.end117, !dbg !3978

if.end117:                                        ; preds = %if.then116, %if.then112
  %73 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3979
  %call118 = call i32 @SSL_renegotiate(%struct.ssl_st* %73), !dbg !3980
  store i32 %call118, i32* %i, align 4, !dbg !3981
  %74 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3982
  %75 = load i32, i32* %i, align 4, !dbg !3983
  %call119 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %74, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.509, i32 0, i32 0), i32 %75), !dbg !3984
  %76 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3985
  %call120 = call i32 @SSL_do_handshake(%struct.ssl_st* %76), !dbg !3986
  store i32 %call120, i32* %i, align 4, !dbg !3987
  %77 = load i32, i32* %i, align 4, !dbg !3988
  %cmp121 = icmp sle i32 %77, 0, !dbg !3990
  br i1 %cmp121, label %if.then123, label %if.end126, !dbg !3991

if.then123:                                       ; preds = %if.end117
  %78 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !3992
  %79 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !3994
  %80 = load i32, i32* %i, align 4, !dbg !3995
  %call124 = call i32 @SSL_get_error(%struct.ssl_st* %79, i32 %80), !dbg !3996
  %call125 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %78, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.510, i32 0, i32 0), i32 %call124), !dbg !3997
  %81 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !3998
  call void @ERR_print_errors(%struct.bio_st* %81), !dbg !3999
  br label %err, !dbg !4000

if.end126:                                        ; preds = %if.end117
  br label %do.body, !dbg !4001, !llvm.loop !4002

do.body:                                          ; preds = %if.end126
  call void @llvm.dbg.declare(metadata i32* %__d0, metadata !4003, metadata !431), !dbg !4005
  call void @llvm.dbg.declare(metadata i32* %__d1, metadata !4006, metadata !431), !dbg !4007
  %__fds_bits = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4008
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 0, !dbg !4010
  %82 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx) #9, !dbg !4011, !srcloc !4012
  %asmresult = extractvalue { i64, i64* } %82, 0, !dbg !4011
  %asmresult127 = extractvalue { i64, i64* } %82, 1, !dbg !4011
  %83 = trunc i64 %asmresult to i32, !dbg !4011
  store i32 %83, i32* %__d0, align 4, !dbg !4011
  %84 = ptrtoint i64* %asmresult127 to i64, !dbg !4011
  %85 = trunc i64 %84 to i32, !dbg !4011
  store i32 %85, i32* %__d1, align 4, !dbg !4011
  br label %do.end, !dbg !4013

do.end:                                           ; preds = %do.body
  %86 = load i32, i32* %s.addr, align 4, !dbg !4014
  %rem = srem i32 %86, 64, !dbg !4015
  %sh_prom = zext i32 %rem to i64, !dbg !4016
  %shl = shl i64 1, %sh_prom, !dbg !4016
  %87 = load i32, i32* %s.addr, align 4, !dbg !4014
  %div = sdiv i32 %87, 64, !dbg !4015
  %idxprom = sext i32 %div to i64, !dbg !4017
  %__fds_bits128 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4018
  %arrayidx129 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits128, i64 0, i64 %idxprom, !dbg !4017
  %88 = load i64, i64* %arrayidx129, align 8, !dbg !4019
  %or = or i64 %88, %shl, !dbg !4019
  store i64 %or, i64* %arrayidx129, align 8, !dbg !4019
  %89 = load i32, i32* %width, align 4, !dbg !4020
  %90 = bitcast %struct.fd_set* %readfds to i8*, !dbg !4021
  %91 = bitcast i8* %90 to %struct.fd_set*, !dbg !4021
  %call130 = call i32 @select(i32 %89, %struct.fd_set* %91, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* null), !dbg !4022
  store i32 %call130, i32* %i, align 4, !dbg !4023
  %92 = load i32, i32* %i, align 4, !dbg !4024
  %cmp131 = icmp sle i32 %92, 0, !dbg !4026
  br i1 %cmp131, label %if.then143, label %lor.lhs.false133, !dbg !4027

lor.lhs.false133:                                 ; preds = %do.end
  %93 = load i32, i32* %s.addr, align 4, !dbg !4028
  %div134 = sdiv i32 %93, 64, !dbg !4030
  %idxprom135 = sext i32 %div134 to i64, !dbg !4030
  %__fds_bits136 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4031
  %arrayidx137 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits136, i64 0, i64 %idxprom135, !dbg !4030
  %94 = load i64, i64* %arrayidx137, align 8, !dbg !4030
  %95 = load i32, i32* %s.addr, align 4, !dbg !4028
  %rem138 = srem i32 %95, 64, !dbg !4030
  %sh_prom139 = zext i32 %rem138 to i64, !dbg !4032
  %shl140 = shl i64 1, %sh_prom139, !dbg !4032
  %and = and i64 %94, %shl140, !dbg !4033
  %cmp141 = icmp ne i64 %and, 0, !dbg !4034
  br i1 %cmp141, label %if.end145, label %if.then143, !dbg !4035

if.then143:                                       ; preds = %lor.lhs.false133, %do.end
  %96 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4036
  %call144 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %96, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.511, i32 0, i32 0)), !dbg !4038
  %97 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4039
  call void @ERR_print_errors(%struct.bio_st* %97), !dbg !4040
  br label %err, !dbg !4041

if.end145:                                        ; preds = %lor.lhs.false133
  %98 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4042
  %99 = load i8*, i8** %buf, align 8, !dbg !4043
  %call146 = call i32 @BIO_gets(%struct.bio_st* %98, i8* %99, i32 16383), !dbg !4044
  br label %if.end147, !dbg !4045

if.end147:                                        ; preds = %if.end145, %land.lhs.true108, %if.then105
  %100 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4046
  %call148 = call i32 @BIO_puts(%struct.bio_st* %100, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.512, i32 0, i32 0)), !dbg !4047
  %101 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4048
  %call149 = call i32 @BIO_puts(%struct.bio_st* %101, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.513, i32 0, i32 0)), !dbg !4049
  %102 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4050
  %call150 = call i32 @BIO_puts(%struct.bio_st* %102, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.514, i32 0, i32 0)), !dbg !4051
  %103 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4052
  %call151 = call i32 @BIO_puts(%struct.bio_st* %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !4053
  store i32 0, i32* %i, align 4, !dbg !4054
  br label %for.cond152, !dbg !4056

for.cond152:                                      ; preds = %for.inc168, %if.end147
  %104 = load i32, i32* %i, align 4, !dbg !4057
  %105 = load i32, i32* @local_argc, align 4, !dbg !4060
  %cmp153 = icmp slt i32 %104, %105, !dbg !4061
  br i1 %cmp153, label %for.body, label %for.end169, !dbg !4062

for.body:                                         ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i8** %myp, metadata !4063, metadata !431), !dbg !4065
  %106 = load i32, i32* %i, align 4, !dbg !4066
  %idxprom155 = sext i32 %106 to i64, !dbg !4068
  %107 = load i8**, i8*** @local_argv, align 8, !dbg !4068
  %arrayidx156 = getelementptr inbounds i8*, i8** %107, i64 %idxprom155, !dbg !4068
  %108 = load i8*, i8** %arrayidx156, align 8, !dbg !4068
  store i8* %108, i8** %myp, align 8, !dbg !4069
  br label %for.cond157, !dbg !4070

for.cond157:                                      ; preds = %for.inc, %for.body
  %109 = load i8*, i8** %myp, align 8, !dbg !4071
  %110 = load i8, i8* %109, align 1, !dbg !4074
  %tobool158 = icmp ne i8 %110, 0, !dbg !4075
  br i1 %tobool158, label %for.body159, label %for.end, !dbg !4075

for.body159:                                      ; preds = %for.cond157
  %111 = load i8*, i8** %myp, align 8, !dbg !4076
  %112 = load i8, i8* %111, align 1, !dbg !4077
  %conv160 = sext i8 %112 to i32, !dbg !4077
  switch i32 %conv160, label %sw.default [
    i32 60, label %sw.bb
    i32 62, label %sw.bb162
    i32 38, label %sw.bb164
  ], !dbg !4078

sw.bb:                                            ; preds = %for.body159
  %113 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4079
  %call161 = call i32 @BIO_puts(%struct.bio_st* %113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.515, i32 0, i32 0)), !dbg !4081
  br label %sw.epilog, !dbg !4082

sw.bb162:                                         ; preds = %for.body159
  %114 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4083
  %call163 = call i32 @BIO_puts(%struct.bio_st* %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.516, i32 0, i32 0)), !dbg !4084
  br label %sw.epilog, !dbg !4085

sw.bb164:                                         ; preds = %for.body159
  %115 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4086
  %call165 = call i32 @BIO_puts(%struct.bio_st* %115, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.517, i32 0, i32 0)), !dbg !4087
  br label %sw.epilog, !dbg !4088

sw.default:                                       ; preds = %for.body159
  %116 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4089
  %117 = load i8*, i8** %myp, align 8, !dbg !4090
  %call166 = call i32 @BIO_write(%struct.bio_st* %116, i8* %117, i32 1), !dbg !4091
  br label %sw.epilog, !dbg !4092

sw.epilog:                                        ; preds = %sw.default, %sw.bb164, %sw.bb162, %sw.bb
  br label %for.inc, !dbg !4093

for.inc:                                          ; preds = %sw.epilog
  %118 = load i8*, i8** %myp, align 8, !dbg !4094
  %incdec.ptr = getelementptr inbounds i8, i8* %118, i32 1, !dbg !4094
  store i8* %incdec.ptr, i8** %myp, align 8, !dbg !4094
  br label %for.cond157, !dbg !4096, !llvm.loop !4097

for.end:                                          ; preds = %for.cond157
  %119 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4099
  %call167 = call i32 @BIO_write(%struct.bio_st* %119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.518, i32 0, i32 0), i32 1), !dbg !4100
  br label %for.inc168, !dbg !4101

for.inc168:                                       ; preds = %for.end
  %120 = load i32, i32* %i, align 4, !dbg !4102
  %inc = add nsw i32 %120, 1, !dbg !4102
  store i32 %inc, i32* %i, align 4, !dbg !4102
  br label %for.cond152, !dbg !4104, !llvm.loop !4105

for.end169:                                       ; preds = %for.cond152
  %121 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4107
  %call170 = call i32 @BIO_puts(%struct.bio_st* %121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !4108
  %122 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4109
  %123 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4110
  %call171 = call i64 @SSL_ctrl(%struct.ssl_st* %123, i32 76, i64 0, i8* null), !dbg !4111
  %tobool172 = icmp ne i64 %call171, 0, !dbg !4111
  %cond173 = select i1 %tobool172, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.486, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.487, i32 0, i32 0), !dbg !4111
  %call174 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %122, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.485, i32 0, i32 0), i8* %cond173), !dbg !4112
  %124 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4113
  %call175 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %124, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.519, i32 0, i32 0)), !dbg !4114
  %125 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4115
  %call176 = call %struct.stack_st_SSL_CIPHER* @SSL_get_ciphers(%struct.ssl_st* %125), !dbg !4116
  store %struct.stack_st_SSL_CIPHER* %call176, %struct.stack_st_SSL_CIPHER** %sk, align 8, !dbg !4117
  %126 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %sk, align 8, !dbg !4118
  %call177 = call i32 @sk_SSL_CIPHER_num(%struct.stack_st_SSL_CIPHER* %126), !dbg !4119
  store i32 %call177, i32* %j, align 4, !dbg !4120
  store i32 0, i32* %i, align 4, !dbg !4121
  br label %for.cond178, !dbg !4123

for.cond178:                                      ; preds = %for.inc197, %for.end169
  %127 = load i32, i32* %i, align 4, !dbg !4124
  %128 = load i32, i32* %j, align 4, !dbg !4127
  %cmp179 = icmp slt i32 %127, %128, !dbg !4128
  br i1 %cmp179, label %for.body181, label %for.end199, !dbg !4129

for.body181:                                      ; preds = %for.cond178
  %129 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %sk, align 8, !dbg !4130
  %130 = load i32, i32* %i, align 4, !dbg !4132
  %call182 = call %struct.ssl_cipher_st* @sk_SSL_CIPHER_value(%struct.stack_st_SSL_CIPHER* %129, i32 %130), !dbg !4133
  store %struct.ssl_cipher_st* %call182, %struct.ssl_cipher_st** %c, align 8, !dbg !4134
  %131 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4135
  %132 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %c, align 8, !dbg !4136
  %call183 = call i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st* %132), !dbg !4137
  %133 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %c, align 8, !dbg !4138
  %call184 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* %133), !dbg !4139
  %call185 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %131, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.520, i32 0, i32 0), i8* %call183, i8* %call184), !dbg !4141
  %134 = load i32, i32* %i, align 4, !dbg !4142
  %add186 = add nsw i32 %134, 1, !dbg !4144
  %rem187 = srem i32 %add186, 2, !dbg !4145
  %cmp188 = icmp eq i32 %rem187, 0, !dbg !4146
  br i1 %cmp188, label %land.lhs.true190, label %if.end196, !dbg !4147

land.lhs.true190:                                 ; preds = %for.body181
  %135 = load i32, i32* %i, align 4, !dbg !4148
  %add191 = add nsw i32 %135, 1, !dbg !4150
  %136 = load i32, i32* %j, align 4, !dbg !4151
  %cmp192 = icmp ne i32 %add191, %136, !dbg !4152
  br i1 %cmp192, label %if.then194, label %if.end196, !dbg !4153

if.then194:                                       ; preds = %land.lhs.true190
  %137 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4154
  %call195 = call i32 @BIO_puts(%struct.bio_st* %137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !4155
  br label %if.end196, !dbg !4155

if.end196:                                        ; preds = %if.then194, %land.lhs.true190, %for.body181
  br label %for.inc197, !dbg !4156

for.inc197:                                       ; preds = %if.end196
  %138 = load i32, i32* %i, align 4, !dbg !4157
  %inc198 = add nsw i32 %138, 1, !dbg !4157
  store i32 %inc198, i32* %i, align 4, !dbg !4157
  br label %for.cond178, !dbg !4159, !llvm.loop !4160

for.end199:                                       ; preds = %for.cond178
  %139 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4162
  %call200 = call i32 @BIO_puts(%struct.bio_st* %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !4163
  %140 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4164
  %141 = load i8*, i8** %buf, align 8, !dbg !4165
  %call201 = call i8* @SSL_get_shared_ciphers(%struct.ssl_st* %140, i8* %141, i32 16384), !dbg !4166
  store i8* %call201, i8** %p, align 8, !dbg !4167
  %142 = load i8*, i8** %p, align 8, !dbg !4168
  %cmp202 = icmp ne i8* %142, null, !dbg !4170
  br i1 %cmp202, label %if.then204, label %if.end223, !dbg !4171

if.then204:                                       ; preds = %for.end199
  %143 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4172
  %call205 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %143, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.521, i32 0, i32 0)), !dbg !4174
  store i32 0, i32* %i, align 4, !dbg !4175
  store i32 0, i32* %j, align 4, !dbg !4176
  br label %while.cond, !dbg !4177

while.cond:                                       ; preds = %if.end220, %if.then204
  %144 = load i8*, i8** %p, align 8, !dbg !4178
  %145 = load i8, i8* %144, align 1, !dbg !4180
  %tobool206 = icmp ne i8 %145, 0, !dbg !4181
  br i1 %tobool206, label %while.body, label %while.end, !dbg !4181

while.body:                                       ; preds = %while.cond
  %146 = load i8*, i8** %p, align 8, !dbg !4182
  %147 = load i8, i8* %146, align 1, !dbg !4185
  %conv207 = sext i8 %147 to i32, !dbg !4185
  %cmp208 = icmp eq i32 %conv207, 58, !dbg !4186
  br i1 %cmp208, label %if.then210, label %if.else217, !dbg !4187

if.then210:                                       ; preds = %while.body
  %148 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4188
  %149 = load i8*, i8** @www_body.space, align 8, !dbg !4190
  %150 = load i32, i32* %j, align 4, !dbg !4191
  %sub = sub nsw i32 26, %150, !dbg !4192
  %call211 = call i32 @BIO_write(%struct.bio_st* %148, i8* %149, i32 %sub), !dbg !4193
  %151 = load i32, i32* %i, align 4, !dbg !4194
  %inc212 = add nsw i32 %151, 1, !dbg !4194
  store i32 %inc212, i32* %i, align 4, !dbg !4194
  store i32 0, i32* %j, align 4, !dbg !4195
  %152 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4196
  %153 = load i32, i32* %i, align 4, !dbg !4197
  %rem213 = srem i32 %153, 3, !dbg !4198
  %tobool214 = icmp ne i32 %rem213, 0, !dbg !4199
  %cond215 = select i1 %tobool214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0), !dbg !4199
  %call216 = call i32 @BIO_write(%struct.bio_st* %152, i8* %cond215, i32 1), !dbg !4200
  br label %if.end220, !dbg !4201

if.else217:                                       ; preds = %while.body
  %154 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4202
  %155 = load i8*, i8** %p, align 8, !dbg !4204
  %call218 = call i32 @BIO_write(%struct.bio_st* %154, i8* %155, i32 1), !dbg !4205
  %156 = load i32, i32* %j, align 4, !dbg !4206
  %inc219 = add nsw i32 %156, 1, !dbg !4206
  store i32 %inc219, i32* %j, align 4, !dbg !4206
  br label %if.end220

if.end220:                                        ; preds = %if.else217, %if.then210
  %157 = load i8*, i8** %p, align 8, !dbg !4207
  %incdec.ptr221 = getelementptr inbounds i8, i8* %157, i32 1, !dbg !4207
  store i8* %incdec.ptr221, i8** %p, align 8, !dbg !4207
  br label %while.cond, !dbg !4208, !llvm.loop !4210

while.end:                                        ; preds = %while.cond
  %158 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4211
  %call222 = call i32 @BIO_puts(%struct.bio_st* %158, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !4212
  br label %if.end223, !dbg !4213

if.end223:                                        ; preds = %while.end, %for.end199
  %159 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4214
  %160 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4215
  %call224 = call i32 @ssl_print_sigalgs(%struct.bio_st* %159, %struct.ssl_st* %160), !dbg !4216
  %161 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4217
  %162 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4218
  %call225 = call i32 @ssl_print_groups(%struct.bio_st* %161, %struct.ssl_st* %162, i32 0), !dbg !4219
  %163 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4220
  %164 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4221
  call void @print_ca_names(%struct.bio_st* %163, %struct.ssl_st* %164), !dbg !4222
  %165 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4223
  %166 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4224
  %call226 = call i32 @SSL_session_reused(%struct.ssl_st* %166), !dbg !4225
  %tobool227 = icmp ne i32 %call226, 0, !dbg !4225
  %cond228 = select i1 %tobool227, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.523, i32 0, i32 0), !dbg !4225
  %call229 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %165, i8* %cond228), !dbg !4226
  %167 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4228
  %call230 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* %167), !dbg !4229
  store %struct.ssl_cipher_st* %call230, %struct.ssl_cipher_st** %c, align 8, !dbg !4230
  %168 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4231
  %169 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %c, align 8, !dbg !4232
  %call231 = call i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st* %169), !dbg !4233
  %170 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %c, align 8, !dbg !4234
  %call232 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* %170), !dbg !4235
  %call233 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %168, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.524, i32 0, i32 0), i8* %call231, i8* %call232), !dbg !4236
  %171 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4237
  %172 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4238
  %call234 = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %172), !dbg !4239
  %call235 = call i32 @SSL_SESSION_print(%struct.bio_st* %171, %struct.ssl_session_st* %call234), !dbg !4240
  %173 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4241
  %call236 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %173, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0)), !dbg !4242
  %174 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4243
  %175 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4244
  %call237 = call %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st* %175), !dbg !4245
  call void @print_stats(%struct.bio_st* %174, %struct.ssl_ctx_st* %call237), !dbg !4246
  %176 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4247
  %call238 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.525, i32 0, i32 0)), !dbg !4248
  %177 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4249
  %call239 = call %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st* %177), !dbg !4250
  store %struct.x509_st* %call239, %struct.x509_st** %peer, align 8, !dbg !4251
  %178 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !4252
  %cmp240 = icmp ne %struct.x509_st* %178, null, !dbg !4254
  br i1 %cmp240, label %if.then242, label %if.else246, !dbg !4255

if.then242:                                       ; preds = %if.end223
  %179 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4256
  %call243 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %179, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.478, i32 0, i32 0)), !dbg !4258
  %180 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4259
  %181 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !4260
  %call244 = call i32 @X509_print(%struct.bio_st* %180, %struct.x509_st* %181), !dbg !4261
  %182 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4262
  %183 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !4263
  %call245 = call i32 @PEM_write_bio_X509(%struct.bio_st* %182, %struct.x509_st* %183), !dbg !4264
  %184 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !4265
  call void @X509_free(%struct.x509_st* %184), !dbg !4266
  store %struct.x509_st* null, %struct.x509_st** %peer, align 8, !dbg !4267
  br label %if.end248, !dbg !4268

if.else246:                                       ; preds = %if.end223
  %185 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4269
  %call247 = call i32 @BIO_puts(%struct.bio_st* %185, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.526, i32 0, i32 0)), !dbg !4271
  br label %if.end248

if.end248:                                        ; preds = %if.else246, %if.then242
  %186 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4272
  %call249 = call i32 @BIO_puts(%struct.bio_st* %186, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.527, i32 0, i32 0)), !dbg !4273
  br label %for.end420, !dbg !4274

if.else250:                                       ; preds = %land.lhs.true101, %lor.lhs.false98
  %187 = load i32, i32* @www, align 4, !dbg !4275
  %cmp251 = icmp eq i32 %187, 2, !dbg !4277
  br i1 %cmp251, label %land.lhs.true256, label %lor.lhs.false253, !dbg !4278

lor.lhs.false253:                                 ; preds = %if.else250
  %188 = load i32, i32* @www, align 4, !dbg !4279
  %cmp254 = icmp eq i32 %188, 3, !dbg !4281
  br i1 %cmp254, label %land.lhs.true256, label %if.end418, !dbg !4282

land.lhs.true256:                                 ; preds = %lor.lhs.false253, %if.else250
  %189 = load i8*, i8** %buf, align 8, !dbg !4283
  %call257 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), i8* %189, i64 5) #8, !dbg !4284
  %cmp258 = icmp eq i32 %call257, 0, !dbg !4285
  br i1 %cmp258, label %if.then260, label %if.end418, !dbg !4286

if.then260:                                       ; preds = %land.lhs.true256
  call void @llvm.dbg.declare(metadata %struct.bio_st** %file, metadata !4288, metadata !431), !dbg !4290
  call void @llvm.dbg.declare(metadata i8** %p261, metadata !4291, metadata !431), !dbg !4292
  call void @llvm.dbg.declare(metadata i8** %e, metadata !4293, metadata !431), !dbg !4294
  %190 = load i8*, i8** %buf, align 8, !dbg !4295
  %arrayidx262 = getelementptr inbounds i8, i8* %190, i64 5, !dbg !4295
  store i8* %arrayidx262, i8** %p261, align 8, !dbg !4296
  store i32 1, i32* %dot, align 4, !dbg !4297
  %191 = load i8*, i8** %p261, align 8, !dbg !4298
  store i8* %191, i8** %e, align 8, !dbg !4300
  br label %for.cond263, !dbg !4301

for.cond263:                                      ; preds = %for.inc302, %if.then260
  %192 = load i8*, i8** %e, align 8, !dbg !4302
  %193 = load i8, i8* %192, align 1, !dbg !4305
  %conv264 = sext i8 %193 to i32, !dbg !4305
  %cmp265 = icmp ne i32 %conv264, 0, !dbg !4306
  br i1 %cmp265, label %for.body267, label %for.end304, !dbg !4307

for.body267:                                      ; preds = %for.cond263
  %194 = load i8*, i8** %e, align 8, !dbg !4308
  %arrayidx268 = getelementptr inbounds i8, i8* %194, i64 0, !dbg !4308
  %195 = load i8, i8* %arrayidx268, align 1, !dbg !4308
  %conv269 = sext i8 %195 to i32, !dbg !4308
  %cmp270 = icmp eq i32 %conv269, 32, !dbg !4311
  br i1 %cmp270, label %if.then272, label %if.end273, !dbg !4312

if.then272:                                       ; preds = %for.body267
  br label %for.end304, !dbg !4313

if.end273:                                        ; preds = %for.body267
  %196 = load i32, i32* %dot, align 4, !dbg !4314
  switch i32 %196, label %sw.epilog292 [
    i32 1, label %sw.bb274
    i32 2, label %sw.bb280
    i32 3, label %sw.bb286
  ], !dbg !4315

sw.bb274:                                         ; preds = %if.end273
  %197 = load i8*, i8** %e, align 8, !dbg !4316
  %arrayidx275 = getelementptr inbounds i8, i8* %197, i64 0, !dbg !4316
  %198 = load i8, i8* %arrayidx275, align 1, !dbg !4316
  %conv276 = sext i8 %198 to i32, !dbg !4316
  %cmp277 = icmp eq i32 %conv276, 46, !dbg !4318
  %cond279 = select i1 %cmp277, i32 2, i32 0, !dbg !4319
  store i32 %cond279, i32* %dot, align 4, !dbg !4320
  br label %sw.epilog292, !dbg !4321

sw.bb280:                                         ; preds = %if.end273
  %199 = load i8*, i8** %e, align 8, !dbg !4322
  %arrayidx281 = getelementptr inbounds i8, i8* %199, i64 0, !dbg !4322
  %200 = load i8, i8* %arrayidx281, align 1, !dbg !4322
  %conv282 = sext i8 %200 to i32, !dbg !4322
  %cmp283 = icmp eq i32 %conv282, 46, !dbg !4323
  %cond285 = select i1 %cmp283, i32 3, i32 0, !dbg !4324
  store i32 %cond285, i32* %dot, align 4, !dbg !4325
  br label %sw.epilog292, !dbg !4326

sw.bb286:                                         ; preds = %if.end273
  %201 = load i8*, i8** %e, align 8, !dbg !4327
  %arrayidx287 = getelementptr inbounds i8, i8* %201, i64 0, !dbg !4327
  %202 = load i8, i8* %arrayidx287, align 1, !dbg !4327
  %conv288 = sext i8 %202 to i32, !dbg !4327
  %cmp289 = icmp eq i32 %conv288, 47, !dbg !4328
  %cond291 = select i1 %cmp289, i32 -1, i32 0, !dbg !4329
  store i32 %cond291, i32* %dot, align 4, !dbg !4330
  br label %sw.epilog292, !dbg !4331

sw.epilog292:                                     ; preds = %if.end273, %sw.bb286, %sw.bb280, %sw.bb274
  %203 = load i32, i32* %dot, align 4, !dbg !4332
  %cmp293 = icmp eq i32 %203, 0, !dbg !4334
  br i1 %cmp293, label %if.then295, label %if.end301, !dbg !4335

if.then295:                                       ; preds = %sw.epilog292
  %204 = load i8*, i8** %e, align 8, !dbg !4336
  %arrayidx296 = getelementptr inbounds i8, i8* %204, i64 0, !dbg !4336
  %205 = load i8, i8* %arrayidx296, align 1, !dbg !4336
  %conv297 = sext i8 %205 to i32, !dbg !4336
  %cmp298 = icmp eq i32 %conv297, 47, !dbg !4337
  %cond300 = select i1 %cmp298, i32 1, i32 0, !dbg !4338
  store i32 %cond300, i32* %dot, align 4, !dbg !4339
  br label %if.end301, !dbg !4340

if.end301:                                        ; preds = %if.then295, %sw.epilog292
  br label %for.inc302, !dbg !4341

for.inc302:                                       ; preds = %if.end301
  %206 = load i8*, i8** %e, align 8, !dbg !4342
  %incdec.ptr303 = getelementptr inbounds i8, i8* %206, i32 1, !dbg !4342
  store i8* %incdec.ptr303, i8** %e, align 8, !dbg !4342
  br label %for.cond263, !dbg !4344, !llvm.loop !4345

for.end304:                                       ; preds = %if.then272, %for.cond263
  %207 = load i32, i32* %dot, align 4, !dbg !4347
  %cmp305 = icmp eq i32 %207, 3, !dbg !4348
  br i1 %cmp305, label %lor.end, label %lor.rhs, !dbg !4349

lor.rhs:                                          ; preds = %for.end304
  %208 = load i32, i32* %dot, align 4, !dbg !4350
  %cmp307 = icmp eq i32 %208, -1, !dbg !4352
  br label %lor.end, !dbg !4353

lor.end:                                          ; preds = %lor.rhs, %for.end304
  %209 = phi i1 [ true, %for.end304 ], [ %cmp307, %lor.rhs ]
  %lor.ext = zext i1 %209 to i32, !dbg !4354
  store i32 %lor.ext, i32* %dot, align 4, !dbg !4356
  %210 = load i8*, i8** %e, align 8, !dbg !4357
  %211 = load i8, i8* %210, align 1, !dbg !4359
  %conv309 = sext i8 %211 to i32, !dbg !4359
  %cmp310 = icmp eq i32 %conv309, 0, !dbg !4360
  br i1 %cmp310, label %if.then312, label %if.end315, !dbg !4361

if.then312:                                       ; preds = %lor.end
  %212 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4362
  %213 = load i8*, i8** @www_body.text, align 8, !dbg !4364
  %call313 = call i32 @BIO_puts(%struct.bio_st* %212, i8* %213), !dbg !4365
  %214 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4366
  %215 = load i8*, i8** %p261, align 8, !dbg !4367
  %call314 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %214, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.530, i32 0, i32 0), i8* %215), !dbg !4368
  br label %for.end420, !dbg !4369

if.end315:                                        ; preds = %lor.end
  %216 = load i8*, i8** %e, align 8, !dbg !4370
  store i8 0, i8* %216, align 1, !dbg !4371
  %217 = load i32, i32* %dot, align 4, !dbg !4372
  %tobool316 = icmp ne i32 %217, 0, !dbg !4372
  br i1 %tobool316, label %if.then317, label %if.end320, !dbg !4374

if.then317:                                       ; preds = %if.end315
  %218 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4375
  %219 = load i8*, i8** @www_body.text, align 8, !dbg !4377
  %call318 = call i32 @BIO_puts(%struct.bio_st* %218, i8* %219), !dbg !4378
  %220 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4379
  %221 = load i8*, i8** %p261, align 8, !dbg !4380
  %call319 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %220, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.531, i32 0, i32 0), i8* %221), !dbg !4381
  br label %for.end420, !dbg !4382

if.end320:                                        ; preds = %if.end315
  %222 = load i8*, i8** %p261, align 8, !dbg !4383
  %223 = load i8, i8* %222, align 1, !dbg !4385
  %conv321 = sext i8 %223 to i32, !dbg !4385
  %cmp322 = icmp eq i32 %conv321, 47, !dbg !4386
  br i1 %cmp322, label %if.then324, label %if.end327, !dbg !4387

if.then324:                                       ; preds = %if.end320
  %224 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4388
  %225 = load i8*, i8** @www_body.text, align 8, !dbg !4390
  %call325 = call i32 @BIO_puts(%struct.bio_st* %224, i8* %225), !dbg !4391
  %226 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4392
  %227 = load i8*, i8** %p261, align 8, !dbg !4393
  %call326 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %226, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.532, i32 0, i32 0), i8* %227), !dbg !4394
  br label %for.end420, !dbg !4395

if.end327:                                        ; preds = %if.end320
  %228 = load i8*, i8** %p261, align 8, !dbg !4396
  %call328 = call i32 @app_isdir(i8* %228), !dbg !4398
  %cmp329 = icmp sgt i32 %call328, 0, !dbg !4399
  br i1 %cmp329, label %if.then331, label %if.end334, !dbg !4400

if.then331:                                       ; preds = %if.end327
  %229 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4401
  %230 = load i8*, i8** @www_body.text, align 8, !dbg !4403
  %call332 = call i32 @BIO_puts(%struct.bio_st* %229, i8* %230), !dbg !4404
  %231 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4405
  %232 = load i8*, i8** %p261, align 8, !dbg !4406
  %call333 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %231, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.533, i32 0, i32 0), i8* %232), !dbg !4407
  br label %for.end420, !dbg !4408

if.end334:                                        ; preds = %if.end327
  %233 = load i8*, i8** %p261, align 8, !dbg !4409
  %call335 = call %struct.bio_st* @BIO_new_file(i8* %233, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.401, i32 0, i32 0)), !dbg !4411
  store %struct.bio_st* %call335, %struct.bio_st** %file, align 8, !dbg !4412
  %cmp336 = icmp eq %struct.bio_st* %call335, null, !dbg !4413
  br i1 %cmp336, label %if.then338, label %if.end341, !dbg !4414

if.then338:                                       ; preds = %if.end334
  %234 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4415
  %235 = load i8*, i8** @www_body.text, align 8, !dbg !4417
  %call339 = call i32 @BIO_puts(%struct.bio_st* %234, i8* %235), !dbg !4418
  %236 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4419
  %237 = load i8*, i8** %p261, align 8, !dbg !4420
  %call340 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %236, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.534, i32 0, i32 0), i8* %237), !dbg !4421
  %238 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4422
  call void @ERR_print_errors(%struct.bio_st* %238), !dbg !4423
  br label %for.end420, !dbg !4424

if.end341:                                        ; preds = %if.end334
  %239 = load i32, i32* @s_quiet, align 4, !dbg !4425
  %tobool342 = icmp ne i32 %239, 0, !dbg !4425
  br i1 %tobool342, label %if.end345, label %if.then343, !dbg !4427

if.then343:                                       ; preds = %if.end341
  %240 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4428
  %241 = load i8*, i8** %p261, align 8, !dbg !4429
  %call344 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %240, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.535, i32 0, i32 0), i8* %241), !dbg !4430
  br label %if.end345, !dbg !4430

if.end345:                                        ; preds = %if.then343, %if.end341
  %242 = load i32, i32* @www, align 4, !dbg !4431
  %cmp346 = icmp eq i32 %242, 2, !dbg !4433
  br i1 %cmp346, label %if.then348, label %if.end385, !dbg !4434

if.then348:                                       ; preds = %if.end345
  %243 = load i8*, i8** %p261, align 8, !dbg !4435
  %call349 = call i64 @strlen(i8* %243) #8, !dbg !4437
  %conv350 = trunc i64 %call349 to i32, !dbg !4437
  store i32 %conv350, i32* %i, align 4, !dbg !4438
  %244 = load i32, i32* %i, align 4, !dbg !4439
  %cmp351 = icmp sgt i32 %244, 5, !dbg !4441
  br i1 %cmp351, label %land.lhs.true353, label %lor.lhs.false360, !dbg !4442

land.lhs.true353:                                 ; preds = %if.then348
  %245 = load i32, i32* %i, align 4, !dbg !4443
  %sub354 = sub nsw i32 %245, 5, !dbg !4445
  %idxprom355 = sext i32 %sub354 to i64, !dbg !4446
  %246 = load i8*, i8** %p261, align 8, !dbg !4446
  %arrayidx356 = getelementptr inbounds i8, i8* %246, i64 %idxprom355, !dbg !4446
  %call357 = call i32 @strcmp(i8* %arrayidx356, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.536, i32 0, i32 0)) #8, !dbg !4447
  %cmp358 = icmp eq i32 %call357, 0, !dbg !4448
  br i1 %cmp358, label %if.then380, label %lor.lhs.false360, !dbg !4449

lor.lhs.false360:                                 ; preds = %land.lhs.true353, %if.then348
  %247 = load i32, i32* %i, align 4, !dbg !4450
  %cmp361 = icmp sgt i32 %247, 4, !dbg !4451
  br i1 %cmp361, label %land.lhs.true363, label %lor.lhs.false370, !dbg !4452

land.lhs.true363:                                 ; preds = %lor.lhs.false360
  %248 = load i32, i32* %i, align 4, !dbg !4453
  %sub364 = sub nsw i32 %248, 4, !dbg !4454
  %idxprom365 = sext i32 %sub364 to i64, !dbg !4455
  %249 = load i8*, i8** %p261, align 8, !dbg !4455
  %arrayidx366 = getelementptr inbounds i8, i8* %249, i64 %idxprom365, !dbg !4455
  %call367 = call i32 @strcmp(i8* %arrayidx366, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.537, i32 0, i32 0)) #8, !dbg !4456
  %cmp368 = icmp eq i32 %call367, 0, !dbg !4457
  br i1 %cmp368, label %if.then380, label %lor.lhs.false370, !dbg !4458

lor.lhs.false370:                                 ; preds = %land.lhs.true363, %lor.lhs.false360
  %250 = load i32, i32* %i, align 4, !dbg !4459
  %cmp371 = icmp sgt i32 %250, 4, !dbg !4460
  br i1 %cmp371, label %land.lhs.true373, label %if.else382, !dbg !4461

land.lhs.true373:                                 ; preds = %lor.lhs.false370
  %251 = load i32, i32* %i, align 4, !dbg !4462
  %sub374 = sub nsw i32 %251, 4, !dbg !4463
  %idxprom375 = sext i32 %sub374 to i64, !dbg !4464
  %252 = load i8*, i8** %p261, align 8, !dbg !4464
  %arrayidx376 = getelementptr inbounds i8, i8* %252, i64 %idxprom375, !dbg !4464
  %call377 = call i32 @strcmp(i8* %arrayidx376, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.538, i32 0, i32 0)) #8, !dbg !4465
  %cmp378 = icmp eq i32 %call377, 0, !dbg !4466
  br i1 %cmp378, label %if.then380, label %if.else382, !dbg !4467

if.then380:                                       ; preds = %land.lhs.true373, %land.lhs.true363, %land.lhs.true353
  %253 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4469
  %call381 = call i32 @BIO_puts(%struct.bio_st* %253, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.512, i32 0, i32 0)), !dbg !4470
  br label %if.end384, !dbg !4470

if.else382:                                       ; preds = %land.lhs.true373, %lor.lhs.false370
  %254 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4471
  %call383 = call i32 @BIO_puts(%struct.bio_st* %254, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.529, i32 0, i32 0)), !dbg !4472
  br label %if.end384

if.end384:                                        ; preds = %if.else382, %if.then380
  br label %if.end385, !dbg !4473

if.end385:                                        ; preds = %if.end384, %if.end345
  br label %for.cond386, !dbg !4474

for.cond386:                                      ; preds = %for.end415, %if.end385
  %255 = load %struct.bio_st*, %struct.bio_st** %file, align 8, !dbg !4475
  %256 = load i8*, i8** %buf, align 8, !dbg !4479
  %call387 = call i32 @BIO_read(%struct.bio_st* %255, i8* %256, i32 16384), !dbg !4480
  store i32 %call387, i32* %i, align 4, !dbg !4481
  %257 = load i32, i32* %i, align 4, !dbg !4482
  %cmp388 = icmp sle i32 %257, 0, !dbg !4484
  br i1 %cmp388, label %if.then390, label %if.end391, !dbg !4485

if.then390:                                       ; preds = %for.cond386
  br label %for.end416, !dbg !4486

if.end391:                                        ; preds = %for.cond386
  store i32 0, i32* %j, align 4, !dbg !4487
  br label %for.cond392, !dbg !4489

for.cond392:                                      ; preds = %if.end414, %if.end391
  %258 = load i32, i32* %j, align 4, !dbg !4490
  %259 = load i32, i32* %i, align 4, !dbg !4493
  %cmp393 = icmp slt i32 %258, %259, !dbg !4494
  br i1 %cmp393, label %for.body395, label %for.end415, !dbg !4495

for.body395:                                      ; preds = %for.cond392
  %260 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4496
  %261 = load i32, i32* %j, align 4, !dbg !4498
  %idxprom396 = sext i32 %261 to i64, !dbg !4499
  %262 = load i8*, i8** %buf, align 8, !dbg !4499
  %arrayidx397 = getelementptr inbounds i8, i8* %262, i64 %idxprom396, !dbg !4499
  %263 = load i32, i32* %i, align 4, !dbg !4500
  %264 = load i32, i32* %j, align 4, !dbg !4501
  %sub398 = sub nsw i32 %263, %264, !dbg !4502
  %call399 = call i32 @BIO_write(%struct.bio_st* %260, i8* %arrayidx397, i32 %sub398), !dbg !4503
  store i32 %call399, i32* %k, align 4, !dbg !4504
  %265 = load i32, i32* %k, align 4, !dbg !4505
  %cmp400 = icmp sle i32 %265, 0, !dbg !4507
  br i1 %cmp400, label %if.then402, label %if.else412, !dbg !4508

if.then402:                                       ; preds = %for.body395
  %266 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4509
  %call403 = call i32 @BIO_test_flags(%struct.bio_st* %266, i32 8), !dbg !4512
  %tobool404 = icmp ne i32 %call403, 0, !dbg !4512
  br i1 %tobool404, label %if.else409, label %land.lhs.true405, !dbg !4513

land.lhs.true405:                                 ; preds = %if.then402
  %267 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4514
  %call406 = call i32 @SSL_waiting_for_async(%struct.ssl_st* %267), !dbg !4516
  %tobool407 = icmp ne i32 %call406, 0, !dbg !4516
  br i1 %tobool407, label %if.else409, label %if.then408, !dbg !4517

if.then408:                                       ; preds = %land.lhs.true405
  br label %write_error, !dbg !4519

if.else409:                                       ; preds = %land.lhs.true405, %if.then402
  %268 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4520
  %call410 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %268, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.539, i32 0, i32 0)), !dbg !4522
  br label %if.end411

if.end411:                                        ; preds = %if.else409
  br label %if.end414, !dbg !4523

if.else412:                                       ; preds = %for.body395
  %269 = load i32, i32* %k, align 4, !dbg !4524
  %270 = load i32, i32* %j, align 4, !dbg !4526
  %add413 = add nsw i32 %270, %269, !dbg !4526
  store i32 %add413, i32* %j, align 4, !dbg !4526
  br label %if.end414

if.end414:                                        ; preds = %if.else412, %if.end411
  br label %for.cond392, !dbg !4527, !llvm.loop !4529

for.end415:                                       ; preds = %for.cond392
  br label %for.cond386, !dbg !4531, !llvm.loop !4533

for.end416:                                       ; preds = %if.then390
  br label %write_error, !dbg !4534

write_error:                                      ; preds = %for.end416, %if.then408
  %271 = load %struct.bio_st*, %struct.bio_st** %file, align 8, !dbg !4535
  %call417 = call i32 @BIO_free(%struct.bio_st* %271), !dbg !4536
  br label %for.end420, !dbg !4537

if.end418:                                        ; preds = %land.lhs.true256, %lor.lhs.false253
  br label %if.end419

if.end419:                                        ; preds = %if.end418
  br label %for.cond, !dbg !4538, !llvm.loop !3926

for.end420:                                       ; preds = %write_error, %if.then338, %if.then331, %if.then324, %if.then317, %if.then312, %if.end248
  br label %for.cond421, !dbg !4540

for.cond421:                                      ; preds = %if.end432, %for.end420
  %272 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4541
  %call422 = call i64 @BIO_ctrl(%struct.bio_st* %272, i32 11, i64 0, i8* null), !dbg !4545
  %conv423 = trunc i64 %call422 to i32, !dbg !4546
  store i32 %conv423, i32* %i, align 4, !dbg !4547
  %273 = load i32, i32* %i, align 4, !dbg !4548
  %cmp424 = icmp sle i32 %273, 0, !dbg !4550
  br i1 %cmp424, label %if.then426, label %if.else431, !dbg !4551

if.then426:                                       ; preds = %for.cond421
  %274 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4552
  %call427 = call i32 @BIO_test_flags(%struct.bio_st* %274, i32 8), !dbg !4555
  %tobool428 = icmp ne i32 %call427, 0, !dbg !4555
  br i1 %tobool428, label %if.end430, label %if.then429, !dbg !4556

if.then429:                                       ; preds = %if.then426
  br label %for.end433, !dbg !4557

if.end430:                                        ; preds = %if.then426
  br label %if.end432, !dbg !4558

if.else431:                                       ; preds = %for.cond421
  br label %for.end433, !dbg !4559

if.end432:                                        ; preds = %if.end430
  br label %for.cond421, !dbg !4560, !llvm.loop !4562

for.end433:                                       ; preds = %if.else431, %if.then429
  br label %end, !dbg !4563

end:                                              ; preds = %for.end433, %if.then89
  %275 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4564
  call void @SSL_set_shutdown(%struct.ssl_st* %275, i32 3), !dbg !4565
  br label %err, !dbg !4565

err:                                              ; preds = %end, %if.then143, %if.then123, %if.end66, %if.then33, %if.then22, %if.then18, %if.then
  %276 = load i8*, i8** %buf, align 8, !dbg !4566
  call void @CRYPTO_free(i8* %276, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3334), !dbg !4567
  %277 = load %struct.bio_st*, %struct.bio_st** %io, align 8, !dbg !4568
  call void @BIO_free_all(%struct.bio_st* %277), !dbg !4569
  %278 = load i32, i32* %ret, align 4, !dbg !4570
  ret i32 %278, !dbg !4571
}

; Function Attrs: nounwind uwtable
define internal i32 @sv_body(i32 %s, i32 %stype, i32 %prot, i8* %context) #0 !dbg !406 {
entry:
  %s.addr = alloca i32, align 4
  %stype.addr = alloca i32, align 4
  %prot.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %readfds = alloca %struct.fd_set, align 8
  %ret = alloca i32, align 4
  %width = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %l = alloca i64, align 8
  %con = alloca %struct.ssl_st*, align 8
  %sbio = alloca %struct.bio_st*, align 8
  %timeout = alloca %struct.timeval, align 8
  %timeoutp = alloca %struct.timeval*, align 8
  %isdtls = alloca i32, align 4
  %test = alloca %struct.bio_st*, align 8
  %write_header = alloca i32, align 4
  %edret = alloca i32, align 4
  %readbytes = alloca i64, align 8
  %read_from_terminal = alloca i32, align 4
  %read_from_sslcon = alloca i32, align 4
  %__d0 = alloca i32, align 4
  %__d1 = alloca i32, align 4
  %j = alloca i32, align 4
  %lf_num = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !4572, metadata !431), !dbg !4573
  store i32 %stype, i32* %stype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stype.addr, metadata !4574, metadata !431), !dbg !4575
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !4576, metadata !431), !dbg !4577
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !4578, metadata !431), !dbg !4579
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !4580, metadata !431), !dbg !4581
  store i8* null, i8** %buf, align 8, !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.fd_set* %readfds, metadata !4582, metadata !431), !dbg !4583
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4584, metadata !431), !dbg !4585
  store i32 1, i32* %ret, align 4, !dbg !4585
  call void @llvm.dbg.declare(metadata i32* %width, metadata !4586, metadata !431), !dbg !4587
  call void @llvm.dbg.declare(metadata i32* %k, metadata !4588, metadata !431), !dbg !4589
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4590, metadata !431), !dbg !4591
  call void @llvm.dbg.declare(metadata i64* %l, metadata !4592, metadata !431), !dbg !4593
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con, metadata !4594, metadata !431), !dbg !4595
  store %struct.ssl_st* null, %struct.ssl_st** %con, align 8, !dbg !4595
  call void @llvm.dbg.declare(metadata %struct.bio_st** %sbio, metadata !4596, metadata !431), !dbg !4597
  call void @llvm.dbg.declare(metadata %struct.timeval* %timeout, metadata !4598, metadata !431), !dbg !4607
  call void @llvm.dbg.declare(metadata %struct.timeval** %timeoutp, metadata !4608, metadata !431), !dbg !4610
  call void @llvm.dbg.declare(metadata i32* %isdtls, metadata !4611, metadata !431), !dbg !4612
  %0 = load i32, i32* %stype.addr, align 4, !dbg !4613
  %cmp = icmp eq i32 %0, 2, !dbg !4614
  %conv = zext i1 %cmp to i32, !dbg !4614
  store i32 %conv, i32* %isdtls, align 4, !dbg !4612
  %call = call i8* @app_malloc(i32 16384, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.450, i32 0, i32 0)), !dbg !4615
  store i8* %call, i8** %buf, align 8, !dbg !4616
  %1 = load i32, i32* @s_nbio, align 4, !dbg !4617
  %tobool = icmp ne i32 %1, 0, !dbg !4617
  br i1 %tobool, label %if.then, label %if.end8, !dbg !4619

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %s.addr, align 4, !dbg !4620
  %call1 = call i32 @BIO_socket_nbio(i32 %2, i32 1), !dbg !4623
  %tobool2 = icmp ne i32 %call1, 0, !dbg !4623
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !4624

if.then3:                                         ; preds = %if.then
  %3 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4625
  call void @ERR_print_errors(%struct.bio_st* %3), !dbg !4626
  br label %if.end7, !dbg !4626

if.else:                                          ; preds = %if.then
  %4 = load i32, i32* @s_quiet, align 4, !dbg !4627
  %tobool4 = icmp ne i32 %4, 0, !dbg !4627
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !4629

if.then5:                                         ; preds = %if.else
  %5 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4630
  %call6 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.451, i32 0, i32 0)), !dbg !4631
  br label %if.end, !dbg !4631

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then3
  br label %if.end8, !dbg !4632

if.end8:                                          ; preds = %if.end7, %entry
  %6 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** @ctx, align 8, !dbg !4633
  %call9 = call %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st* %6), !dbg !4634
  store %struct.ssl_st* %call9, %struct.ssl_st** %con, align 8, !dbg !4635
  %7 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4636
  %cmp10 = icmp eq %struct.ssl_st* %7, null, !dbg !4638
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !4639

if.then12:                                        ; preds = %if.end8
  store i32 -1, i32* %ret, align 4, !dbg !4640
  br label %err, !dbg !4642

if.end13:                                         ; preds = %if.end8
  %8 = load i32, i32* @s_tlsextdebug, align 4, !dbg !4643
  %tobool14 = icmp ne i32 %8, 0, !dbg !4643
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !4645

if.then15:                                        ; preds = %if.end13
  %9 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4646
  %call16 = call i64 @SSL_callback_ctrl(%struct.ssl_st* %9, i32 56, void ()* bitcast (void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)* @tlsext_cb to void ()*)), !dbg !4648
  %10 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4649
  %11 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4650
  %12 = bitcast %struct.bio_st* %11 to i8*, !dbg !4650
  %call17 = call i64 @SSL_ctrl(%struct.ssl_st* %10, i32 57, i64 0, i8* %12), !dbg !4651
  br label %if.end18, !dbg !4652

if.end18:                                         ; preds = %if.then15, %if.end13
  %13 = load i8*, i8** %context.addr, align 8, !dbg !4653
  %cmp19 = icmp ne i8* %13, null, !dbg !4655
  br i1 %cmp19, label %land.lhs.true, label %if.end27, !dbg !4656

land.lhs.true:                                    ; preds = %if.end18
  %14 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4657
  %15 = load i8*, i8** %context.addr, align 8, !dbg !4659
  %16 = load i8*, i8** %context.addr, align 8, !dbg !4660
  %call21 = call i64 @strlen(i8* %16) #8, !dbg !4661
  %conv22 = trunc i64 %call21 to i32, !dbg !4661
  %call23 = call i32 @SSL_set_session_id_context(%struct.ssl_st* %14, i8* %15, i32 %conv22), !dbg !4662
  %tobool24 = icmp ne i32 %call23, 0, !dbg !4662
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !4663

if.then25:                                        ; preds = %land.lhs.true
  %17 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4665
  %call26 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %17, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.452, i32 0, i32 0)), !dbg !4667
  store i32 -1, i32* %ret, align 4, !dbg !4668
  br label %err, !dbg !4669

if.end27:                                         ; preds = %land.lhs.true, %if.end18
  %18 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4670
  %call28 = call i32 @SSL_clear(%struct.ssl_st* %18), !dbg !4672
  %tobool29 = icmp ne i32 %call28, 0, !dbg !4672
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !4673

if.then30:                                        ; preds = %if.end27
  %19 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4674
  %call31 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %19, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.453, i32 0, i32 0)), !dbg !4676
  store i32 -1, i32* %ret, align 4, !dbg !4677
  br label %err, !dbg !4678

if.end32:                                         ; preds = %if.end27
  %20 = load i32, i32* %isdtls, align 4, !dbg !4679
  %tobool33 = icmp ne i32 %20, 0, !dbg !4679
  br i1 %tobool33, label %if.then34, label %if.else64, !dbg !4681

if.then34:                                        ; preds = %if.end32
  %21 = load i32, i32* %s.addr, align 4, !dbg !4682
  %call35 = call %struct.bio_st* @BIO_new_dgram(i32 %21, i32 0), !dbg !4684
  store %struct.bio_st* %call35, %struct.bio_st** %sbio, align 8, !dbg !4685
  %22 = load i32, i32* @enable_timeouts, align 4, !dbg !4686
  %tobool36 = icmp ne i32 %22, 0, !dbg !4686
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !4688

if.then37:                                        ; preds = %if.then34
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 0, !dbg !4689
  store i64 0, i64* %tv_sec, align 8, !dbg !4691
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 1, !dbg !4692
  store i64 250000, i64* %tv_usec, align 8, !dbg !4693
  %23 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4694
  %24 = bitcast %struct.timeval* %timeout to i8*, !dbg !4695
  %call38 = call i64 @BIO_ctrl(%struct.bio_st* %23, i32 33, i64 0, i8* %24), !dbg !4696
  %tv_sec39 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 0, !dbg !4697
  store i64 0, i64* %tv_sec39, align 8, !dbg !4698
  %tv_usec40 = getelementptr inbounds %struct.timeval, %struct.timeval* %timeout, i32 0, i32 1, !dbg !4699
  store i64 250000, i64* %tv_usec40, align 8, !dbg !4700
  %25 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4701
  %26 = bitcast %struct.timeval* %timeout to i8*, !dbg !4702
  %call41 = call i64 @BIO_ctrl(%struct.bio_st* %25, i32 35, i64 0, i8* %26), !dbg !4703
  br label %if.end42, !dbg !4704

if.end42:                                         ; preds = %if.then37, %if.then34
  %27 = load i64, i64* @socket_mtu, align 8, !dbg !4705
  %tobool43 = icmp ne i64 %27, 0, !dbg !4705
  br i1 %tobool43, label %if.then44, label %if.else60, !dbg !4707

if.then44:                                        ; preds = %if.end42
  %28 = load i64, i64* @socket_mtu, align 8, !dbg !4708
  %29 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4711
  %call45 = call i64 @SSL_ctrl(%struct.ssl_st* %29, i32 121, i64 0, i8* null), !dbg !4712
  %cmp46 = icmp slt i64 %28, %call45, !dbg !4713
  br i1 %cmp46, label %if.then48, label %if.end52, !dbg !4714

if.then48:                                        ; preds = %if.then44
  %30 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4715
  %31 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4717
  %call49 = call i64 @SSL_ctrl(%struct.ssl_st* %31, i32 121, i64 0, i8* null), !dbg !4718
  %call50 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %30, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.454, i32 0, i32 0), i64 %call49), !dbg !4719
  store i32 -1, i32* %ret, align 4, !dbg !4720
  %32 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4721
  %call51 = call i32 @BIO_free(%struct.bio_st* %32), !dbg !4722
  br label %err, !dbg !4723

if.end52:                                         ; preds = %if.then44
  %33 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4724
  %call53 = call i64 @SSL_set_options(%struct.ssl_st* %33, i64 4096), !dbg !4725
  %34 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4726
  %35 = load i64, i64* @socket_mtu, align 8, !dbg !4728
  %call54 = call i64 @SSL_ctrl(%struct.ssl_st* %34, i32 120, i64 %35, i8* null), !dbg !4729
  %tobool55 = icmp ne i64 %call54, 0, !dbg !4729
  br i1 %tobool55, label %if.end59, label %if.then56, !dbg !4730

if.then56:                                        ; preds = %if.end52
  %36 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4731
  %call57 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %36, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.455, i32 0, i32 0)), !dbg !4733
  store i32 -1, i32* %ret, align 4, !dbg !4734
  %37 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4735
  %call58 = call i32 @BIO_free(%struct.bio_st* %37), !dbg !4736
  br label %err, !dbg !4737

if.end59:                                         ; preds = %if.end52
  br label %if.end62, !dbg !4738

if.else60:                                        ; preds = %if.end42
  %38 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4739
  %call61 = call i64 @BIO_ctrl(%struct.bio_st* %38, i32 39, i64 0, i8* null), !dbg !4740
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.end59
  %39 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4741
  %call63 = call i64 @SSL_set_options(%struct.ssl_st* %39, i64 8192), !dbg !4742
  br label %if.end66, !dbg !4743

if.else64:                                        ; preds = %if.end32
  %40 = load i32, i32* %s.addr, align 4, !dbg !4744
  %call65 = call %struct.bio_st* @BIO_new_socket(i32 %40, i32 0), !dbg !4745
  store %struct.bio_st* %call65, %struct.bio_st** %sbio, align 8, !dbg !4746
  br label %if.end66

if.end66:                                         ; preds = %if.else64, %if.end62
  %41 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4747
  %cmp67 = icmp eq %struct.bio_st* %41, null, !dbg !4749
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !4750

if.then69:                                        ; preds = %if.end66
  %42 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4751
  %call70 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %42, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.456, i32 0, i32 0)), !dbg !4753
  %43 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4754
  call void @ERR_print_errors(%struct.bio_st* %43), !dbg !4755
  br label %err, !dbg !4756

if.end71:                                         ; preds = %if.end66
  %44 = load i32, i32* @s_nbio_test, align 4, !dbg !4757
  %tobool72 = icmp ne i32 %44, 0, !dbg !4757
  br i1 %tobool72, label %if.then73, label %if.end77, !dbg !4759

if.then73:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata %struct.bio_st** %test, metadata !4760, metadata !431), !dbg !4762
  %call74 = call %struct.bio_method_st* @BIO_f_nbio_test(), !dbg !4763
  %call75 = call %struct.bio_st* @BIO_new(%struct.bio_method_st* %call74), !dbg !4764
  store %struct.bio_st* %call75, %struct.bio_st** %test, align 8, !dbg !4766
  %45 = load %struct.bio_st*, %struct.bio_st** %test, align 8, !dbg !4767
  %46 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4768
  %call76 = call %struct.bio_st* @BIO_push(%struct.bio_st* %45, %struct.bio_st* %46), !dbg !4769
  store %struct.bio_st* %call76, %struct.bio_st** %sbio, align 8, !dbg !4770
  br label %if.end77, !dbg !4771

if.end77:                                         ; preds = %if.then73, %if.end71
  %47 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4772
  %48 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4773
  %49 = load %struct.bio_st*, %struct.bio_st** %sbio, align 8, !dbg !4774
  call void @SSL_set_bio(%struct.ssl_st* %47, %struct.bio_st* %48, %struct.bio_st* %49), !dbg !4775
  %50 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4776
  call void @SSL_set_accept_state(%struct.ssl_st* %50), !dbg !4777
  %51 = load i32, i32* @s_debug, align 4, !dbg !4778
  %tobool78 = icmp ne i32 %51, 0, !dbg !4778
  br i1 %tobool78, label %if.then79, label %if.end82, !dbg !4780

if.then79:                                        ; preds = %if.end77
  %52 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4781
  %call80 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %52), !dbg !4783
  call void @BIO_set_callback(%struct.bio_st* %call80, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)* @bio_dump_callback), !dbg !4784
  %53 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4786
  %call81 = call %struct.bio_st* @SSL_get_rbio(%struct.ssl_st* %53), !dbg !4787
  %54 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4788
  %55 = bitcast %struct.bio_st* %54 to i8*, !dbg !4789
  call void @BIO_set_callback_arg(%struct.bio_st* %call81, i8* %55), !dbg !4790
  br label %if.end82, !dbg !4791

if.end82:                                         ; preds = %if.then79, %if.end77
  %56 = load i32, i32* @s_msg, align 4, !dbg !4792
  %tobool83 = icmp ne i32 %56, 0, !dbg !4792
  br i1 %tobool83, label %if.then84, label %if.end87, !dbg !4794

if.then84:                                        ; preds = %if.end82
  %57 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4795
  call void @SSL_set_msg_callback(%struct.ssl_st* %57, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)* @msg_cb), !dbg !4797
  %58 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4798
  %59 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !4799
  %tobool85 = icmp ne %struct.bio_st* %59, null, !dbg !4799
  br i1 %tobool85, label %cond.true, label %cond.false, !dbg !4799

cond.true:                                        ; preds = %if.then84
  %60 = load %struct.bio_st*, %struct.bio_st** @bio_s_msg, align 8, !dbg !4800
  br label %cond.end, !dbg !4802

cond.false:                                       ; preds = %if.then84
  %61 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4803
  br label %cond.end, !dbg !4805

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.bio_st* [ %60, %cond.true ], [ %61, %cond.false ], !dbg !4806
  %62 = bitcast %struct.bio_st* %cond to i8*, !dbg !4808
  %call86 = call i64 @SSL_ctrl(%struct.ssl_st* %58, i32 16, i64 0, i8* %62), !dbg !4809
  br label %if.end87, !dbg !4810

if.end87:                                         ; preds = %cond.end, %if.end82
  %63 = load i32, i32* @s_tlsextdebug, align 4, !dbg !4811
  %tobool88 = icmp ne i32 %63, 0, !dbg !4811
  br i1 %tobool88, label %if.then89, label %if.end92, !dbg !4813

if.then89:                                        ; preds = %if.end87
  %64 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4814
  %call90 = call i64 @SSL_callback_ctrl(%struct.ssl_st* %64, i32 56, void ()* bitcast (void (%struct.ssl_st*, i32, i32, i8*, i32, i8*)* @tlsext_cb to void ()*)), !dbg !4816
  %65 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4817
  %66 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4818
  %67 = bitcast %struct.bio_st* %66 to i8*, !dbg !4818
  %call91 = call i64 @SSL_ctrl(%struct.ssl_st* %65, i32 57, i64 0, i8* %67), !dbg !4819
  br label %if.end92, !dbg !4820

if.end92:                                         ; preds = %if.then89, %if.end87
  %68 = load i32, i32* @early_data, align 4, !dbg !4821
  %tobool93 = icmp ne i32 %68, 0, !dbg !4821
  br i1 %tobool93, label %if.then94, label %if.end133, !dbg !4823

if.then94:                                        ; preds = %if.end92
  call void @llvm.dbg.declare(metadata i32* %write_header, metadata !4824, metadata !431), !dbg !4826
  store i32 1, i32* %write_header, align 4, !dbg !4826
  call void @llvm.dbg.declare(metadata i32* %edret, metadata !4827, metadata !431), !dbg !4828
  store i32 0, i32* %edret, align 4, !dbg !4828
  call void @llvm.dbg.declare(metadata i64* %readbytes, metadata !4829, metadata !431), !dbg !4830
  br label %while.cond, !dbg !4831

while.cond:                                       ; preds = %if.end115, %if.then94
  %69 = load i32, i32* %edret, align 4, !dbg !4832
  %cmp95 = icmp ne i32 %69, 2, !dbg !4834
  br i1 %cmp95, label %while.body, label %while.end, !dbg !4835

while.body:                                       ; preds = %while.cond
  br label %for.cond, !dbg !4836

for.cond:                                         ; preds = %sw.bb, %while.body
  %70 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4838
  %71 = load i8*, i8** %buf, align 8, !dbg !4842
  %call97 = call i32 @SSL_read_early_data(%struct.ssl_st* %70, i8* %71, i64 16384, i64* %readbytes), !dbg !4843
  store i32 %call97, i32* %edret, align 4, !dbg !4844
  %72 = load i32, i32* %edret, align 4, !dbg !4845
  %cmp98 = icmp ne i32 %72, 0, !dbg !4847
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !4848

if.then100:                                       ; preds = %for.cond
  br label %for.end, !dbg !4849

if.end101:                                        ; preds = %for.cond
  %73 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4850
  %call102 = call i32 @SSL_get_error(%struct.ssl_st* %73, i32 0), !dbg !4851
  switch i32 %call102, label %sw.default [
    i32 3, label %sw.bb
    i32 9, label %sw.bb
    i32 2, label %sw.bb
  ], !dbg !4852

sw.bb:                                            ; preds = %if.end101, %if.end101, %if.end101
  br label %for.cond, !dbg !4853, !llvm.loop !4855

sw.default:                                       ; preds = %if.end101
  %74 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4856
  %call103 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %74, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.457, i32 0, i32 0)), !dbg !4857
  %75 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !4858
  call void @ERR_print_errors(%struct.bio_st* %75), !dbg !4859
  br label %err, !dbg !4860

for.end:                                          ; preds = %if.then100
  %76 = load i64, i64* %readbytes, align 8, !dbg !4861
  %cmp104 = icmp ugt i64 %76, 0, !dbg !4863
  br i1 %cmp104, label %if.then106, label %if.end115, !dbg !4864

if.then106:                                       ; preds = %for.end
  %77 = load i32, i32* %write_header, align 4, !dbg !4865
  %tobool107 = icmp ne i32 %77, 0, !dbg !4865
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !4868

if.then108:                                       ; preds = %if.then106
  %78 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4869
  %call109 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %78, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.458, i32 0, i32 0)), !dbg !4871
  store i32 0, i32* %write_header, align 4, !dbg !4872
  br label %if.end110, !dbg !4873

if.end110:                                        ; preds = %if.then108, %if.then106
  %79 = load i8*, i8** %buf, align 8, !dbg !4874
  %80 = load i64, i64* %readbytes, align 8, !dbg !4875
  %conv111 = trunc i64 %80 to i32, !dbg !4876
  %call112 = call i32 @raw_write_stdout(i8* %79, i32 %conv111), !dbg !4877
  %81 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4878
  %call113 = call i64 @BIO_ctrl(%struct.bio_st* %81, i32 11, i64 0, i8* null), !dbg !4879
  %conv114 = trunc i64 %call113 to i32, !dbg !4880
  br label %if.end115, !dbg !4881

if.end115:                                        ; preds = %if.end110, %for.end
  br label %while.cond, !dbg !4882, !llvm.loop !4884

while.end:                                        ; preds = %while.cond
  %82 = load i32, i32* %write_header, align 4, !dbg !4885
  %tobool116 = icmp ne i32 %82, 0, !dbg !4885
  br i1 %tobool116, label %if.then117, label %if.else126, !dbg !4887

if.then117:                                       ; preds = %while.end
  %83 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4888
  %call118 = call i32 @SSL_get_early_data_status(%struct.ssl_st* %83), !dbg !4891
  %cmp119 = icmp eq i32 %call118, 0, !dbg !4892
  br i1 %cmp119, label %if.then121, label %if.else123, !dbg !4893

if.then121:                                       ; preds = %if.then117
  %84 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4894
  %call122 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.459, i32 0, i32 0)), !dbg !4895
  br label %if.end125, !dbg !4895

if.else123:                                       ; preds = %if.then117
  %85 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4896
  %call124 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %85, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.460, i32 0, i32 0)), !dbg !4897
  br label %if.end125

if.end125:                                        ; preds = %if.else123, %if.then121
  br label %if.end128, !dbg !4898

if.else126:                                       ; preds = %while.end
  %86 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !4899
  %call127 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %86, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.461, i32 0, i32 0)), !dbg !4901
  br label %if.end128

if.end128:                                        ; preds = %if.else126, %if.end125
  %87 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4902
  %call129 = call i32 @SSL_is_init_finished(%struct.ssl_st* %87), !dbg !4904
  %tobool130 = icmp ne i32 %call129, 0, !dbg !4904
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !4905

if.then131:                                       ; preds = %if.end128
  %88 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4906
  call void @print_connection_info(%struct.ssl_st* %88), !dbg !4907
  br label %if.end132, !dbg !4907

if.end132:                                        ; preds = %if.then131, %if.end128
  br label %if.end133, !dbg !4908

if.end133:                                        ; preds = %if.end132, %if.end92
  %call134 = call i32 @fileno_stdin(), !dbg !4909
  %89 = load i32, i32* %s.addr, align 4, !dbg !4911
  %cmp135 = icmp sgt i32 %call134, %89, !dbg !4912
  br i1 %cmp135, label %if.then137, label %if.else139, !dbg !4913

if.then137:                                       ; preds = %if.end133
  %call138 = call i32 @fileno_stdin(), !dbg !4914
  %add = add nsw i32 %call138, 1, !dbg !4915
  store i32 %add, i32* %width, align 4, !dbg !4916
  br label %if.end141, !dbg !4917

if.else139:                                       ; preds = %if.end133
  %90 = load i32, i32* %s.addr, align 4, !dbg !4918
  %add140 = add nsw i32 %90, 1, !dbg !4919
  store i32 %add140, i32* %width, align 4, !dbg !4920
  br label %if.end141

if.end141:                                        ; preds = %if.else139, %if.then137
  br label %for.cond142, !dbg !4921

for.cond142:                                      ; preds = %if.end513, %if.end378, %if.then345, %if.then321, %if.then302, %if.then183, %if.end141
  call void @llvm.dbg.declare(metadata i32* %read_from_terminal, metadata !4922, metadata !431), !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %read_from_sslcon, metadata !4927, metadata !431), !dbg !4928
  store i32 0, i32* %read_from_terminal, align 4, !dbg !4929
  %91 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4930
  %call143 = call i32 @SSL_has_pending(%struct.ssl_st* %91), !dbg !4931
  %tobool144 = icmp ne i32 %call143, 0, !dbg !4931
  br i1 %tobool144, label %lor.end, label %lor.rhs, !dbg !4932

lor.rhs:                                          ; preds = %for.cond142
  %92 = load i32, i32* @async, align 4, !dbg !4933
  %tobool145 = icmp ne i32 %92, 0, !dbg !4933
  br i1 %tobool145, label %land.rhs, label %land.end, !dbg !4935

land.rhs:                                         ; preds = %lor.rhs
  %93 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4936
  %call146 = call i32 @SSL_waiting_for_async(%struct.ssl_st* %93), !dbg !4938
  %tobool147 = icmp ne i32 %call146, 0, !dbg !4939
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %94 = phi i1 [ false, %lor.rhs ], [ %tobool147, %land.rhs ]
  br label %lor.end, !dbg !4940

lor.end:                                          ; preds = %land.end, %for.cond142
  %95 = phi i1 [ true, %for.cond142 ], [ %94, %land.end ]
  %lor.ext = zext i1 %95 to i32, !dbg !4942
  store i32 %lor.ext, i32* %read_from_sslcon, align 4, !dbg !4944
  %96 = load i32, i32* %read_from_sslcon, align 4, !dbg !4945
  %tobool148 = icmp ne i32 %96, 0, !dbg !4945
  br i1 %tobool148, label %if.end210, label %if.then149, !dbg !4947

if.then149:                                       ; preds = %lor.end
  br label %do.body, !dbg !4948, !llvm.loop !4950

do.body:                                          ; preds = %if.then149
  call void @llvm.dbg.declare(metadata i32* %__d0, metadata !4951, metadata !431), !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %__d1, metadata !4954, metadata !431), !dbg !4955
  %__fds_bits = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4956
  %arrayidx = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits, i64 0, i64 0, !dbg !4958
  %97 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %arrayidx) #9, !dbg !4959, !srcloc !4960
  %asmresult = extractvalue { i64, i64* } %97, 0, !dbg !4959
  %asmresult150 = extractvalue { i64, i64* } %97, 1, !dbg !4959
  %98 = trunc i64 %asmresult to i32, !dbg !4959
  store i32 %98, i32* %__d0, align 4, !dbg !4959
  %99 = ptrtoint i64* %asmresult150 to i64, !dbg !4959
  %100 = trunc i64 %99 to i32, !dbg !4959
  store i32 %100, i32* %__d1, align 4, !dbg !4959
  br label %do.end, !dbg !4961

do.end:                                           ; preds = %do.body
  %call151 = call i32 @fileno_stdin(), !dbg !4962
  %rem = srem i32 %call151, 64, !dbg !4963
  %sh_prom = zext i32 %rem to i64, !dbg !4964
  %shl = shl i64 1, %sh_prom, !dbg !4964
  %call152 = call i32 @fileno_stdin(), !dbg !4965
  %div = sdiv i32 %call152, 64, !dbg !4963
  %idxprom = sext i32 %div to i64, !dbg !4967
  %__fds_bits153 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4968
  %arrayidx154 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits153, i64 0, i64 %idxprom, !dbg !4967
  %101 = load i64, i64* %arrayidx154, align 8, !dbg !4969
  %or = or i64 %101, %shl, !dbg !4969
  store i64 %or, i64* %arrayidx154, align 8, !dbg !4969
  %102 = load i32, i32* %s.addr, align 4, !dbg !4970
  %rem155 = srem i32 %102, 64, !dbg !4971
  %sh_prom156 = zext i32 %rem155 to i64, !dbg !4972
  %shl157 = shl i64 1, %sh_prom156, !dbg !4972
  %103 = load i32, i32* %s.addr, align 4, !dbg !4970
  %div158 = sdiv i32 %103, 64, !dbg !4971
  %idxprom159 = sext i32 %div158 to i64, !dbg !4973
  %__fds_bits160 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !4974
  %arrayidx161 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits160, i64 0, i64 %idxprom159, !dbg !4973
  %104 = load i64, i64* %arrayidx161, align 8, !dbg !4975
  %or162 = or i64 %104, %shl157, !dbg !4975
  store i64 %or162, i64* %arrayidx161, align 8, !dbg !4975
  %105 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4976
  %call163 = call i32 @SSL_is_dtls(%struct.ssl_st* %105), !dbg !4978
  %tobool164 = icmp ne i32 %call163, 0, !dbg !4978
  br i1 %tobool164, label %land.lhs.true165, label %if.else169, !dbg !4979

land.lhs.true165:                                 ; preds = %do.end
  %106 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4980
  %107 = bitcast %struct.timeval* %timeout to i8*, !dbg !4982
  %call166 = call i64 @SSL_ctrl(%struct.ssl_st* %106, i32 73, i64 0, i8* %107), !dbg !4983
  %tobool167 = icmp ne i64 %call166, 0, !dbg !4983
  br i1 %tobool167, label %if.then168, label %if.else169, !dbg !4984

if.then168:                                       ; preds = %land.lhs.true165
  store %struct.timeval* %timeout, %struct.timeval** %timeoutp, align 8, !dbg !4985
  br label %if.end170, !dbg !4986

if.else169:                                       ; preds = %land.lhs.true165, %do.end
  store %struct.timeval* null, %struct.timeval** %timeoutp, align 8, !dbg !4987
  br label %if.end170

if.end170:                                        ; preds = %if.else169, %if.then168
  %108 = load i32, i32* %width, align 4, !dbg !4988
  %109 = bitcast %struct.fd_set* %readfds to i8*, !dbg !4989
  %110 = bitcast i8* %109 to %struct.fd_set*, !dbg !4989
  %111 = load %struct.timeval*, %struct.timeval** %timeoutp, align 8, !dbg !4990
  %call171 = call i32 @select(i32 %108, %struct.fd_set* %110, %struct.fd_set* null, %struct.fd_set* null, %struct.timeval* %111), !dbg !4991
  store i32 %call171, i32* %i, align 4, !dbg !4992
  %112 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4993
  %call172 = call i32 @SSL_is_dtls(%struct.ssl_st* %112), !dbg !4995
  %tobool173 = icmp ne i32 %call172, 0, !dbg !4995
  br i1 %tobool173, label %land.lhs.true174, label %if.end180, !dbg !4996

land.lhs.true174:                                 ; preds = %if.end170
  %113 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !4997
  %call175 = call i64 @SSL_ctrl(%struct.ssl_st* %113, i32 74, i64 0, i8* null), !dbg !4999
  %cmp176 = icmp sgt i64 %call175, 0, !dbg !5000
  br i1 %cmp176, label %if.then178, label %if.end180, !dbg !5001

if.then178:                                       ; preds = %land.lhs.true174
  %114 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5002
  %call179 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %114, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.462, i32 0, i32 0)), !dbg !5003
  br label %if.end180, !dbg !5003

if.end180:                                        ; preds = %if.then178, %land.lhs.true174, %if.end170
  %115 = load i32, i32* %i, align 4, !dbg !5004
  %cmp181 = icmp sle i32 %115, 0, !dbg !5006
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !5007

if.then183:                                       ; preds = %if.end180
  br label %for.cond142, !dbg !5008, !llvm.loop !5009

if.end184:                                        ; preds = %if.end180
  %call185 = call i32 @fileno_stdin(), !dbg !5010
  %div186 = sdiv i32 %call185, 64, !dbg !5012
  %idxprom187 = sext i32 %div186 to i64, !dbg !5012
  %__fds_bits188 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !5013
  %arrayidx189 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits188, i64 0, i64 %idxprom187, !dbg !5012
  %116 = load i64, i64* %arrayidx189, align 8, !dbg !5012
  %call190 = call i32 @fileno_stdin(), !dbg !5014
  %rem191 = srem i32 %call190, 64, !dbg !5012
  %sh_prom192 = zext i32 %rem191 to i64, !dbg !5016
  %shl193 = shl i64 1, %sh_prom192, !dbg !5016
  %and = and i64 %116, %shl193, !dbg !5017
  %cmp194 = icmp ne i64 %and, 0, !dbg !5018
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !5019

if.then196:                                       ; preds = %if.end184
  store i32 1, i32* %read_from_terminal, align 4, !dbg !5020
  br label %if.end197, !dbg !5021

if.end197:                                        ; preds = %if.then196, %if.end184
  %117 = load i32, i32* %s.addr, align 4, !dbg !5022
  %div198 = sdiv i32 %117, 64, !dbg !5024
  %idxprom199 = sext i32 %div198 to i64, !dbg !5024
  %__fds_bits200 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %readfds, i32 0, i32 0, !dbg !5025
  %arrayidx201 = getelementptr inbounds [16 x i64], [16 x i64]* %__fds_bits200, i64 0, i64 %idxprom199, !dbg !5024
  %118 = load i64, i64* %arrayidx201, align 8, !dbg !5024
  %119 = load i32, i32* %s.addr, align 4, !dbg !5022
  %rem202 = srem i32 %119, 64, !dbg !5024
  %sh_prom203 = zext i32 %rem202 to i64, !dbg !5026
  %shl204 = shl i64 1, %sh_prom203, !dbg !5026
  %and205 = and i64 %118, %shl204, !dbg !5027
  %cmp206 = icmp ne i64 %and205, 0, !dbg !5028
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !5029

if.then208:                                       ; preds = %if.end197
  store i32 1, i32* %read_from_sslcon, align 4, !dbg !5030
  br label %if.end209, !dbg !5031

if.end209:                                        ; preds = %if.then208, %if.end197
  br label %if.end210, !dbg !5032

if.end210:                                        ; preds = %if.end209, %lor.end
  %120 = load i32, i32* %read_from_terminal, align 4, !dbg !5033
  %tobool211 = icmp ne i32 %120, 0, !dbg !5033
  br i1 %tobool211, label %if.then212, label %if.end447, !dbg !5035

if.then212:                                       ; preds = %if.end210
  %121 = load i32, i32* @s_crlf, align 4, !dbg !5036
  %tobool213 = icmp ne i32 %121, 0, !dbg !5036
  br i1 %tobool213, label %if.then214, label %if.else251, !dbg !5039

if.then214:                                       ; preds = %if.then212
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5040, metadata !431), !dbg !5042
  call void @llvm.dbg.declare(metadata i32* %lf_num, metadata !5043, metadata !431), !dbg !5044
  %122 = load i8*, i8** %buf, align 8, !dbg !5045
  %call215 = call i32 @raw_read_stdin(i8* %122, i32 8192), !dbg !5046
  store i32 %call215, i32* %i, align 4, !dbg !5047
  store i32 0, i32* %lf_num, align 4, !dbg !5048
  store i32 0, i32* %j, align 4, !dbg !5049
  br label %for.cond216, !dbg !5051

for.cond216:                                      ; preds = %for.inc, %if.then214
  %123 = load i32, i32* %j, align 4, !dbg !5052
  %124 = load i32, i32* %i, align 4, !dbg !5055
  %cmp217 = icmp slt i32 %123, %124, !dbg !5056
  br i1 %cmp217, label %for.body, label %for.end227, !dbg !5057

for.body:                                         ; preds = %for.cond216
  %125 = load i32, i32* %j, align 4, !dbg !5058
  %idxprom219 = sext i32 %125 to i64, !dbg !5060
  %126 = load i8*, i8** %buf, align 8, !dbg !5060
  %arrayidx220 = getelementptr inbounds i8, i8* %126, i64 %idxprom219, !dbg !5060
  %127 = load i8, i8* %arrayidx220, align 1, !dbg !5060
  %conv221 = sext i8 %127 to i32, !dbg !5060
  %cmp222 = icmp eq i32 %conv221, 10, !dbg !5061
  br i1 %cmp222, label %if.then224, label %if.end225, !dbg !5062

if.then224:                                       ; preds = %for.body
  %128 = load i32, i32* %lf_num, align 4, !dbg !5063
  %inc = add nsw i32 %128, 1, !dbg !5063
  store i32 %inc, i32* %lf_num, align 4, !dbg !5063
  br label %if.end225, !dbg !5064

if.end225:                                        ; preds = %if.then224, %for.body
  br label %for.inc, !dbg !5065

for.inc:                                          ; preds = %if.end225
  %129 = load i32, i32* %j, align 4, !dbg !5067
  %inc226 = add nsw i32 %129, 1, !dbg !5067
  store i32 %inc226, i32* %j, align 4, !dbg !5067
  br label %for.cond216, !dbg !5069, !llvm.loop !5070

for.end227:                                       ; preds = %for.cond216
  %130 = load i32, i32* %i, align 4, !dbg !5072
  %sub = sub nsw i32 %130, 1, !dbg !5074
  store i32 %sub, i32* %j, align 4, !dbg !5075
  br label %for.cond228, !dbg !5076

for.cond228:                                      ; preds = %for.inc248, %for.end227
  %131 = load i32, i32* %j, align 4, !dbg !5077
  %cmp229 = icmp sge i32 %131, 0, !dbg !5080
  br i1 %cmp229, label %for.body231, label %for.end250, !dbg !5081

for.body231:                                      ; preds = %for.cond228
  %132 = load i32, i32* %j, align 4, !dbg !5082
  %idxprom232 = sext i32 %132 to i64, !dbg !5084
  %133 = load i8*, i8** %buf, align 8, !dbg !5084
  %arrayidx233 = getelementptr inbounds i8, i8* %133, i64 %idxprom232, !dbg !5084
  %134 = load i8, i8* %arrayidx233, align 1, !dbg !5084
  %135 = load i32, i32* %j, align 4, !dbg !5085
  %136 = load i32, i32* %lf_num, align 4, !dbg !5086
  %add234 = add nsw i32 %135, %136, !dbg !5087
  %idxprom235 = sext i32 %add234 to i64, !dbg !5088
  %137 = load i8*, i8** %buf, align 8, !dbg !5088
  %arrayidx236 = getelementptr inbounds i8, i8* %137, i64 %idxprom235, !dbg !5088
  store i8 %134, i8* %arrayidx236, align 1, !dbg !5089
  %138 = load i32, i32* %j, align 4, !dbg !5090
  %idxprom237 = sext i32 %138 to i64, !dbg !5092
  %139 = load i8*, i8** %buf, align 8, !dbg !5092
  %arrayidx238 = getelementptr inbounds i8, i8* %139, i64 %idxprom237, !dbg !5092
  %140 = load i8, i8* %arrayidx238, align 1, !dbg !5092
  %conv239 = sext i8 %140 to i32, !dbg !5092
  %cmp240 = icmp eq i32 %conv239, 10, !dbg !5093
  br i1 %cmp240, label %if.then242, label %if.end247, !dbg !5094

if.then242:                                       ; preds = %for.body231
  %141 = load i32, i32* %lf_num, align 4, !dbg !5095
  %dec = add nsw i32 %141, -1, !dbg !5095
  store i32 %dec, i32* %lf_num, align 4, !dbg !5095
  %142 = load i32, i32* %i, align 4, !dbg !5097
  %inc243 = add nsw i32 %142, 1, !dbg !5097
  store i32 %inc243, i32* %i, align 4, !dbg !5097
  %143 = load i32, i32* %j, align 4, !dbg !5098
  %144 = load i32, i32* %lf_num, align 4, !dbg !5099
  %add244 = add nsw i32 %143, %144, !dbg !5100
  %idxprom245 = sext i32 %add244 to i64, !dbg !5101
  %145 = load i8*, i8** %buf, align 8, !dbg !5101
  %arrayidx246 = getelementptr inbounds i8, i8* %145, i64 %idxprom245, !dbg !5101
  store i8 13, i8* %arrayidx246, align 1, !dbg !5102
  br label %if.end247, !dbg !5103

if.end247:                                        ; preds = %if.then242, %for.body231
  br label %for.inc248, !dbg !5104

for.inc248:                                       ; preds = %if.end247
  %146 = load i32, i32* %j, align 4, !dbg !5105
  %dec249 = add nsw i32 %146, -1, !dbg !5105
  store i32 %dec249, i32* %j, align 4, !dbg !5105
  br label %for.cond228, !dbg !5107, !llvm.loop !5108

for.end250:                                       ; preds = %for.cond228
  br label %if.end253, !dbg !5110

if.else251:                                       ; preds = %if.then212
  %147 = load i8*, i8** %buf, align 8, !dbg !5111
  %call252 = call i32 @raw_read_stdin(i8* %147, i32 16384), !dbg !5113
  store i32 %call252, i32* %i, align 4, !dbg !5114
  br label %if.end253

if.end253:                                        ; preds = %if.else251, %for.end250
  %148 = load i32, i32* @s_quiet, align 4, !dbg !5115
  %tobool254 = icmp ne i32 %148, 0, !dbg !5115
  br i1 %tobool254, label %if.end397, label %land.lhs.true255, !dbg !5117

land.lhs.true255:                                 ; preds = %if.end253
  %149 = load i32, i32* @s_brief, align 4, !dbg !5118
  %tobool256 = icmp ne i32 %149, 0, !dbg !5118
  br i1 %tobool256, label %if.end397, label %if.then257, !dbg !5120

if.then257:                                       ; preds = %land.lhs.true255
  %150 = load i32, i32* %i, align 4, !dbg !5121
  %cmp258 = icmp sle i32 %150, 0, !dbg !5124
  br i1 %cmp258, label %if.then264, label %lor.lhs.false, !dbg !5125

lor.lhs.false:                                    ; preds = %if.then257
  %151 = load i8*, i8** %buf, align 8, !dbg !5126
  %arrayidx260 = getelementptr inbounds i8, i8* %151, i64 0, !dbg !5126
  %152 = load i8, i8* %arrayidx260, align 1, !dbg !5126
  %conv261 = sext i8 %152 to i32, !dbg !5126
  %cmp262 = icmp eq i32 %conv261, 81, !dbg !5128
  br i1 %cmp262, label %if.then264, label %if.end269, !dbg !5129

if.then264:                                       ; preds = %lor.lhs.false, %if.then257
  %153 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5130
  %call265 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.463, i32 0, i32 0)), !dbg !5132
  %154 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5133
  %call266 = call i64 @BIO_ctrl(%struct.bio_st* %154, i32 11, i64 0, i8* null), !dbg !5134
  %conv267 = trunc i64 %call266 to i32, !dbg !5135
  %155 = load i32, i32* %s.addr, align 4, !dbg !5136
  %call268 = call i32 @BIO_closesocket(i32 %155), !dbg !5137
  call void @close_accept_socket(), !dbg !5138
  store i32 -11, i32* %ret, align 4, !dbg !5139
  br label %err, !dbg !5140

if.end269:                                        ; preds = %lor.lhs.false
  %156 = load i32, i32* %i, align 4, !dbg !5141
  %cmp270 = icmp sle i32 %156, 0, !dbg !5143
  br i1 %cmp270, label %if.then277, label %lor.lhs.false272, !dbg !5144

lor.lhs.false272:                                 ; preds = %if.end269
  %157 = load i8*, i8** %buf, align 8, !dbg !5145
  %arrayidx273 = getelementptr inbounds i8, i8* %157, i64 0, !dbg !5145
  %158 = load i8, i8* %arrayidx273, align 1, !dbg !5145
  %conv274 = sext i8 %158 to i32, !dbg !5145
  %cmp275 = icmp eq i32 %conv274, 113, !dbg !5147
  br i1 %cmp275, label %if.then277, label %if.end287, !dbg !5148

if.then277:                                       ; preds = %lor.lhs.false272, %if.end269
  %159 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5149
  %call278 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %159, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.463, i32 0, i32 0)), !dbg !5151
  %160 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5152
  %call279 = call i64 @BIO_ctrl(%struct.bio_st* %160, i32 11, i64 0, i8* null), !dbg !5153
  %conv280 = trunc i64 %call279 to i32, !dbg !5154
  %161 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5155
  %call281 = call i32 @SSL_version(%struct.ssl_st* %161), !dbg !5157
  %cmp282 = icmp ne i32 %call281, 65279, !dbg !5158
  br i1 %cmp282, label %if.then284, label %if.end286, !dbg !5159

if.then284:                                       ; preds = %if.then277
  %162 = load i32, i32* %s.addr, align 4, !dbg !5160
  %call285 = call i32 @BIO_closesocket(i32 %162), !dbg !5161
  br label %if.end286, !dbg !5161

if.end286:                                        ; preds = %if.then284, %if.then277
  br label %err, !dbg !5162

if.end287:                                        ; preds = %lor.lhs.false272
  %163 = load i8*, i8** %buf, align 8, !dbg !5163
  %arrayidx288 = getelementptr inbounds i8, i8* %163, i64 0, !dbg !5163
  %164 = load i8, i8* %arrayidx288, align 1, !dbg !5163
  %conv289 = sext i8 %164 to i32, !dbg !5163
  %cmp290 = icmp eq i32 %conv289, 114, !dbg !5165
  br i1 %cmp290, label %land.lhs.true292, label %if.end306, !dbg !5166

land.lhs.true292:                                 ; preds = %if.end287
  %165 = load i8*, i8** %buf, align 8, !dbg !5167
  %arrayidx293 = getelementptr inbounds i8, i8* %165, i64 1, !dbg !5167
  %166 = load i8, i8* %arrayidx293, align 1, !dbg !5167
  %conv294 = sext i8 %166 to i32, !dbg !5167
  %cmp295 = icmp eq i32 %conv294, 10, !dbg !5169
  br i1 %cmp295, label %if.then302, label %lor.lhs.false297, !dbg !5170

lor.lhs.false297:                                 ; preds = %land.lhs.true292
  %167 = load i8*, i8** %buf, align 8, !dbg !5171
  %arrayidx298 = getelementptr inbounds i8, i8* %167, i64 1, !dbg !5171
  %168 = load i8, i8* %arrayidx298, align 1, !dbg !5171
  %conv299 = sext i8 %168 to i32, !dbg !5171
  %cmp300 = icmp eq i32 %conv299, 13, !dbg !5173
  br i1 %cmp300, label %if.then302, label %if.end306, !dbg !5174

if.then302:                                       ; preds = %lor.lhs.false297, %land.lhs.true292
  %169 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5175
  %call303 = call i32 @SSL_renegotiate(%struct.ssl_st* %169), !dbg !5177
  %170 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5178
  %call304 = call i32 @SSL_do_handshake(%struct.ssl_st* %170), !dbg !5179
  store i32 %call304, i32* %i, align 4, !dbg !5180
  %171 = load i32, i32* %i, align 4, !dbg !5181
  %call305 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.464, i32 0, i32 0), i32 %171), !dbg !5182
  store i32 0, i32* %i, align 4, !dbg !5183
  br label %for.cond142, !dbg !5184, !llvm.loop !5009

if.end306:                                        ; preds = %lor.lhs.false297, %if.end287
  %172 = load i8*, i8** %buf, align 8, !dbg !5185
  %arrayidx307 = getelementptr inbounds i8, i8* %172, i64 0, !dbg !5185
  %173 = load i8, i8* %arrayidx307, align 1, !dbg !5185
  %conv308 = sext i8 %173 to i32, !dbg !5185
  %cmp309 = icmp eq i32 %conv308, 82, !dbg !5187
  br i1 %cmp309, label %land.lhs.true311, label %if.end325, !dbg !5188

land.lhs.true311:                                 ; preds = %if.end306
  %174 = load i8*, i8** %buf, align 8, !dbg !5189
  %arrayidx312 = getelementptr inbounds i8, i8* %174, i64 1, !dbg !5189
  %175 = load i8, i8* %arrayidx312, align 1, !dbg !5189
  %conv313 = sext i8 %175 to i32, !dbg !5189
  %cmp314 = icmp eq i32 %conv313, 10, !dbg !5191
  br i1 %cmp314, label %if.then321, label %lor.lhs.false316, !dbg !5192

lor.lhs.false316:                                 ; preds = %land.lhs.true311
  %176 = load i8*, i8** %buf, align 8, !dbg !5193
  %arrayidx317 = getelementptr inbounds i8, i8* %176, i64 1, !dbg !5193
  %177 = load i8, i8* %arrayidx317, align 1, !dbg !5193
  %conv318 = sext i8 %177 to i32, !dbg !5193
  %cmp319 = icmp eq i32 %conv318, 13, !dbg !5195
  br i1 %cmp319, label %if.then321, label %if.end325, !dbg !5196

if.then321:                                       ; preds = %lor.lhs.false316, %land.lhs.true311
  %178 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5197
  call void @SSL_set_verify(%struct.ssl_st* %178, i32 5, i32 (i32, %struct.x509_store_ctx_st*)* null), !dbg !5199
  %179 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5200
  %call322 = call i32 @SSL_renegotiate(%struct.ssl_st* %179), !dbg !5201
  %180 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5202
  %call323 = call i32 @SSL_do_handshake(%struct.ssl_st* %180), !dbg !5203
  store i32 %call323, i32* %i, align 4, !dbg !5204
  %181 = load i32, i32* %i, align 4, !dbg !5205
  %call324 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.464, i32 0, i32 0), i32 %181), !dbg !5206
  store i32 0, i32* %i, align 4, !dbg !5207
  br label %for.cond142, !dbg !5208, !llvm.loop !5009

if.end325:                                        ; preds = %lor.lhs.false316, %if.end306
  %182 = load i8*, i8** %buf, align 8, !dbg !5209
  %arrayidx326 = getelementptr inbounds i8, i8* %182, i64 0, !dbg !5209
  %183 = load i8, i8* %arrayidx326, align 1, !dbg !5209
  %conv327 = sext i8 %183 to i32, !dbg !5209
  %cmp328 = icmp eq i32 %conv327, 75, !dbg !5211
  br i1 %cmp328, label %land.lhs.true335, label %lor.lhs.false330, !dbg !5212

lor.lhs.false330:                                 ; preds = %if.end325
  %184 = load i8*, i8** %buf, align 8, !dbg !5213
  %arrayidx331 = getelementptr inbounds i8, i8* %184, i64 0, !dbg !5213
  %185 = load i8, i8* %arrayidx331, align 1, !dbg !5213
  %conv332 = sext i8 %185 to i32, !dbg !5213
  %cmp333 = icmp eq i32 %conv332, 107, !dbg !5215
  br i1 %cmp333, label %land.lhs.true335, label %if.end354, !dbg !5216

land.lhs.true335:                                 ; preds = %lor.lhs.false330, %if.end325
  %186 = load i8*, i8** %buf, align 8, !dbg !5217
  %arrayidx336 = getelementptr inbounds i8, i8* %186, i64 1, !dbg !5217
  %187 = load i8, i8* %arrayidx336, align 1, !dbg !5217
  %conv337 = sext i8 %187 to i32, !dbg !5217
  %cmp338 = icmp eq i32 %conv337, 10, !dbg !5218
  br i1 %cmp338, label %if.then345, label %lor.lhs.false340, !dbg !5219

lor.lhs.false340:                                 ; preds = %land.lhs.true335
  %188 = load i8*, i8** %buf, align 8, !dbg !5220
  %arrayidx341 = getelementptr inbounds i8, i8* %188, i64 1, !dbg !5220
  %189 = load i8, i8* %arrayidx341, align 1, !dbg !5220
  %conv342 = sext i8 %189 to i32, !dbg !5220
  %cmp343 = icmp eq i32 %conv342, 13, !dbg !5222
  br i1 %cmp343, label %if.then345, label %if.end354, !dbg !5223

if.then345:                                       ; preds = %lor.lhs.false340, %land.lhs.true335
  %190 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5225
  %191 = load i8*, i8** %buf, align 8, !dbg !5227
  %arrayidx346 = getelementptr inbounds i8, i8* %191, i64 0, !dbg !5227
  %192 = load i8, i8* %arrayidx346, align 1, !dbg !5227
  %conv347 = sext i8 %192 to i32, !dbg !5227
  %cmp348 = icmp eq i32 %conv347, 75, !dbg !5228
  %cond350 = select i1 %cmp348, i32 1, i32 0, !dbg !5227
  %call351 = call i32 @SSL_key_update(%struct.ssl_st* %190, i32 %cond350), !dbg !5229
  %193 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5230
  %call352 = call i32 @SSL_do_handshake(%struct.ssl_st* %193), !dbg !5231
  store i32 %call352, i32* %i, align 4, !dbg !5232
  %194 = load i32, i32* %i, align 4, !dbg !5233
  %call353 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.464, i32 0, i32 0), i32 %194), !dbg !5234
  store i32 0, i32* %i, align 4, !dbg !5235
  br label %for.cond142, !dbg !5236, !llvm.loop !5009

if.end354:                                        ; preds = %lor.lhs.false340, %lor.lhs.false330
  %195 = load i8*, i8** %buf, align 8, !dbg !5237
  %arrayidx355 = getelementptr inbounds i8, i8* %195, i64 0, !dbg !5237
  %196 = load i8, i8* %arrayidx355, align 1, !dbg !5237
  %conv356 = sext i8 %196 to i32, !dbg !5237
  %cmp357 = icmp eq i32 %conv356, 99, !dbg !5239
  br i1 %cmp357, label %land.lhs.true359, label %if.end379, !dbg !5240

land.lhs.true359:                                 ; preds = %if.end354
  %197 = load i8*, i8** %buf, align 8, !dbg !5241
  %arrayidx360 = getelementptr inbounds i8, i8* %197, i64 1, !dbg !5241
  %198 = load i8, i8* %arrayidx360, align 1, !dbg !5241
  %conv361 = sext i8 %198 to i32, !dbg !5241
  %cmp362 = icmp eq i32 %conv361, 10, !dbg !5243
  br i1 %cmp362, label %if.then369, label %lor.lhs.false364, !dbg !5244

lor.lhs.false364:                                 ; preds = %land.lhs.true359
  %199 = load i8*, i8** %buf, align 8, !dbg !5245
  %arrayidx365 = getelementptr inbounds i8, i8* %199, i64 1, !dbg !5245
  %200 = load i8, i8* %arrayidx365, align 1, !dbg !5245
  %conv366 = sext i8 %200 to i32, !dbg !5245
  %cmp367 = icmp eq i32 %conv366, 13, !dbg !5247
  br i1 %cmp367, label %if.then369, label %if.end379, !dbg !5248

if.then369:                                       ; preds = %lor.lhs.false364, %land.lhs.true359
  %201 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5249
  call void @SSL_set_verify(%struct.ssl_st* %201, i32 1, i32 (i32, %struct.x509_store_ctx_st*)* null), !dbg !5251
  %202 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5252
  %call370 = call i32 @SSL_verify_client_post_handshake(%struct.ssl_st* %202), !dbg !5253
  store i32 %call370, i32* %i, align 4, !dbg !5254
  %203 = load i32, i32* %i, align 4, !dbg !5255
  %cmp371 = icmp eq i32 %203, 0, !dbg !5257
  br i1 %cmp371, label %if.then373, label %if.else375, !dbg !5258

if.then373:                                       ; preds = %if.then369
  %call374 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.465, i32 0, i32 0)), !dbg !5259
  %204 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5261
  call void @ERR_print_errors(%struct.bio_st* %204), !dbg !5262
  br label %if.end378, !dbg !5263

if.else375:                                       ; preds = %if.then369
  %205 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5264
  %call376 = call i32 @SSL_do_handshake(%struct.ssl_st* %205), !dbg !5266
  store i32 %call376, i32* %i, align 4, !dbg !5267
  %206 = load i32, i32* %i, align 4, !dbg !5268
  %call377 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.464, i32 0, i32 0), i32 %206), !dbg !5269
  store i32 0, i32* %i, align 4, !dbg !5270
  br label %if.end378

if.end378:                                        ; preds = %if.else375, %if.then373
  br label %for.cond142, !dbg !5271, !llvm.loop !5009

if.end379:                                        ; preds = %lor.lhs.false364, %if.end354
  %207 = load i8*, i8** %buf, align 8, !dbg !5272
  %arrayidx380 = getelementptr inbounds i8, i8* %207, i64 0, !dbg !5272
  %208 = load i8, i8* %arrayidx380, align 1, !dbg !5272
  %conv381 = sext i8 %208 to i32, !dbg !5272
  %cmp382 = icmp eq i32 %conv381, 80, !dbg !5274
  br i1 %cmp382, label %if.then384, label %if.end389, !dbg !5275

if.then384:                                       ; preds = %if.end379
  %209 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5276
  %call385 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %209), !dbg !5278
  %210 = load i8*, i8** @sv_body.str, align 8, !dbg !5279
  %211 = load i8*, i8** @sv_body.str, align 8, !dbg !5280
  %call386 = call i64 @strlen(i8* %211) #8, !dbg !5281
  %conv387 = trunc i64 %call386 to i32, !dbg !5283
  %call388 = call i32 @BIO_write(%struct.bio_st* %call385, i8* %210, i32 %conv387), !dbg !5284
  br label %if.end389, !dbg !5286

if.end389:                                        ; preds = %if.then384, %if.end379
  %212 = load i8*, i8** %buf, align 8, !dbg !5287
  %arrayidx390 = getelementptr inbounds i8, i8* %212, i64 0, !dbg !5287
  %213 = load i8, i8* %arrayidx390, align 1, !dbg !5287
  %conv391 = sext i8 %213 to i32, !dbg !5287
  %cmp392 = icmp eq i32 %conv391, 83, !dbg !5289
  br i1 %cmp392, label %if.then394, label %if.end396, !dbg !5290

if.then394:                                       ; preds = %if.end389
  %214 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5291
  %215 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5293
  %call395 = call %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st* %215), !dbg !5294
  call void @print_stats(%struct.bio_st* %214, %struct.ssl_ctx_st* %call395), !dbg !5295
  br label %if.end396, !dbg !5297

if.end396:                                        ; preds = %if.then394, %if.end389
  br label %if.end397, !dbg !5298

if.end397:                                        ; preds = %if.end396, %land.lhs.true255, %if.end253
  store i32 0, i32* %k, align 4, !dbg !5299
  store i64 0, i64* %l, align 8, !dbg !5300
  br label %for.cond398, !dbg !5301

for.cond398:                                      ; preds = %if.end445, %if.end397
  %216 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5302
  %217 = load i64, i64* %l, align 8, !dbg !5306
  %218 = load i8*, i8** %buf, align 8, !dbg !5307
  %arrayidx399 = getelementptr inbounds i8, i8* %218, i64 %217, !dbg !5307
  %219 = load i32, i32* %i, align 4, !dbg !5308
  %call400 = call i32 @SSL_write(%struct.ssl_st* %216, i8* %arrayidx399, i32 %219), !dbg !5309
  store i32 %call400, i32* %k, align 4, !dbg !5310
  br label %while.cond401, !dbg !5311

while.cond401:                                    ; preds = %if.end413, %for.cond398
  %220 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5312
  %221 = load i32, i32* %k, align 4, !dbg !5314
  %call402 = call i32 @SSL_get_error(%struct.ssl_st* %220, i32 %221), !dbg !5315
  %cmp403 = icmp eq i32 %call402, 4, !dbg !5316
  br i1 %cmp403, label %while.body405, label %while.end416, !dbg !5317

while.body405:                                    ; preds = %while.cond401
  %222 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5318
  %call406 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %222, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.467, i32 0, i32 0)), !dbg !5320
  %223 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5321
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %223), !dbg !5322
  %224 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !5323
  %225 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !5324
  %call407 = call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %224, i8* %225), !dbg !5325
  store %struct.SRP_user_pwd_st* %call407, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5326
  %226 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5327
  %tobool408 = icmp ne %struct.SRP_user_pwd_st* %226, null, !dbg !5329
  br i1 %tobool408, label %if.then409, label %if.else411, !dbg !5330

if.then409:                                       ; preds = %while.body405
  %227 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5331
  %228 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5332
  %info = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %228, i32 0, i32 5, !dbg !5333
  %229 = load i8*, i8** %info, align 8, !dbg !5333
  %call410 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %227, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i32 0, i32 0), i8* %229), !dbg !5334
  br label %if.end413, !dbg !5334

if.else411:                                       ; preds = %while.body405
  %230 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5335
  %call412 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %230, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0)), !dbg !5336
  br label %if.end413

if.end413:                                        ; preds = %if.else411, %if.then409
  %231 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5337
  %232 = load i64, i64* %l, align 8, !dbg !5338
  %233 = load i8*, i8** %buf, align 8, !dbg !5339
  %arrayidx414 = getelementptr inbounds i8, i8* %233, i64 %232, !dbg !5339
  %234 = load i32, i32* %i, align 4, !dbg !5340
  %call415 = call i32 @SSL_write(%struct.ssl_st* %231, i8* %arrayidx414, i32 %234), !dbg !5341
  store i32 %call415, i32* %k, align 4, !dbg !5342
  br label %while.cond401, !dbg !5343, !llvm.loop !5345

while.end416:                                     ; preds = %while.cond401
  %235 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5346
  %236 = load i32, i32* %k, align 4, !dbg !5347
  %call417 = call i32 @SSL_get_error(%struct.ssl_st* %235, i32 %236), !dbg !5348
  switch i32 %call417, label %sw.epilog [
    i32 0, label %sw.bb418
    i32 9, label %sw.bb419
    i32 3, label %sw.bb423
    i32 2, label %sw.bb423
    i32 4, label %sw.bb423
    i32 10, label %sw.bb427
    i32 5, label %sw.bb427
    i32 1, label %sw.bb427
    i32 6, label %sw.bb431
  ], !dbg !5349

sw.bb418:                                         ; preds = %while.end416
  br label %sw.epilog, !dbg !5350

sw.bb419:                                         ; preds = %while.end416
  %237 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5352
  %call420 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %237, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.470, i32 0, i32 0)), !dbg !5353
  %238 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5354
  %call421 = call i64 @BIO_ctrl(%struct.bio_st* %238, i32 11, i64 0, i8* null), !dbg !5355
  %conv422 = trunc i64 %call421 to i32, !dbg !5356
  %239 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5357
  call void @wait_for_async(%struct.ssl_st* %239), !dbg !5358
  br label %sw.epilog, !dbg !5359

sw.bb423:                                         ; preds = %while.end416, %while.end416, %while.end416
  %240 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5360
  %call424 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %240, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.471, i32 0, i32 0)), !dbg !5361
  %241 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5362
  %call425 = call i64 @BIO_ctrl(%struct.bio_st* %241, i32 11, i64 0, i8* null), !dbg !5363
  %conv426 = trunc i64 %call425 to i32, !dbg !5364
  br label %sw.epilog, !dbg !5365

sw.bb427:                                         ; preds = %while.end416, %while.end416, %while.end416
  %242 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5366
  %call428 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %242, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.472, i32 0, i32 0)), !dbg !5367
  %243 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5368
  %call429 = call i64 @BIO_ctrl(%struct.bio_st* %243, i32 11, i64 0, i8* null), !dbg !5369
  %conv430 = trunc i64 %call429 to i32, !dbg !5370
  %244 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5371
  call void @ERR_print_errors(%struct.bio_st* %244), !dbg !5372
  store i32 1, i32* %ret, align 4, !dbg !5373
  br label %err, !dbg !5374

sw.bb431:                                         ; preds = %while.end416
  %245 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5375
  %call432 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %245, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.463, i32 0, i32 0)), !dbg !5376
  %246 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5377
  %call433 = call i64 @BIO_ctrl(%struct.bio_st* %246, i32 11, i64 0, i8* null), !dbg !5378
  %conv434 = trunc i64 %call433 to i32, !dbg !5379
  store i32 1, i32* %ret, align 4, !dbg !5380
  br label %err, !dbg !5381

sw.epilog:                                        ; preds = %while.end416, %sw.bb423, %sw.bb419, %sw.bb418
  %247 = load i32, i32* %k, align 4, !dbg !5382
  %cmp435 = icmp sgt i32 %247, 0, !dbg !5384
  br i1 %cmp435, label %if.then437, label %if.end441, !dbg !5385

if.then437:                                       ; preds = %sw.epilog
  %248 = load i32, i32* %k, align 4, !dbg !5386
  %conv438 = sext i32 %248 to i64, !dbg !5386
  %249 = load i64, i64* %l, align 8, !dbg !5388
  %add439 = add i64 %249, %conv438, !dbg !5388
  store i64 %add439, i64* %l, align 8, !dbg !5388
  %250 = load i32, i32* %k, align 4, !dbg !5389
  %251 = load i32, i32* %i, align 4, !dbg !5390
  %sub440 = sub nsw i32 %251, %250, !dbg !5390
  store i32 %sub440, i32* %i, align 4, !dbg !5390
  br label %if.end441, !dbg !5391

if.end441:                                        ; preds = %if.then437, %sw.epilog
  %252 = load i32, i32* %i, align 4, !dbg !5392
  %cmp442 = icmp sle i32 %252, 0, !dbg !5394
  br i1 %cmp442, label %if.then444, label %if.end445, !dbg !5395

if.then444:                                       ; preds = %if.end441
  br label %for.end446, !dbg !5396

if.end445:                                        ; preds = %if.end441
  br label %for.cond398, !dbg !5397, !llvm.loop !5399

for.end446:                                       ; preds = %if.then444
  br label %if.end447, !dbg !5400

if.end447:                                        ; preds = %for.end446, %if.end210
  %253 = load i32, i32* %read_from_sslcon, align 4, !dbg !5401
  %tobool448 = icmp ne i32 %253, 0, !dbg !5401
  br i1 %tobool448, label %if.then449, label %if.end513, !dbg !5403

if.then449:                                       ; preds = %if.end447
  %254 = load i32, i32* @async, align 4, !dbg !5404
  %tobool450 = icmp ne i32 %254, 0, !dbg !5404
  br i1 %tobool450, label %lor.lhs.false451, label %land.lhs.true454, !dbg !5407

lor.lhs.false451:                                 ; preds = %if.then449
  %255 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5408
  %call452 = call i32 @SSL_waiting_for_async(%struct.ssl_st* %255), !dbg !5410
  %tobool453 = icmp ne i32 %call452, 0, !dbg !5410
  br i1 %tobool453, label %if.else468, label %land.lhs.true454, !dbg !5411

land.lhs.true454:                                 ; preds = %lor.lhs.false451, %if.then449
  %256 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5412
  %call455 = call i32 @SSL_is_init_finished(%struct.ssl_st* %256), !dbg !5413
  %tobool456 = icmp ne i32 %call455, 0, !dbg !5413
  br i1 %tobool456, label %if.else468, label %if.then457, !dbg !5414

if.then457:                                       ; preds = %land.lhs.true454
  %257 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5416
  %call458 = call i32 @init_ssl_connection(%struct.ssl_st* %257), !dbg !5418
  store i32 %call458, i32* %i, align 4, !dbg !5419
  %258 = load i32, i32* %i, align 4, !dbg !5420
  %cmp459 = icmp slt i32 %258, 0, !dbg !5422
  br i1 %cmp459, label %if.then461, label %if.else462, !dbg !5423

if.then461:                                       ; preds = %if.then457
  store i32 0, i32* %ret, align 4, !dbg !5424
  br label %err, !dbg !5426

if.else462:                                       ; preds = %if.then457
  %259 = load i32, i32* %i, align 4, !dbg !5427
  %cmp463 = icmp eq i32 %259, 0, !dbg !5429
  br i1 %cmp463, label %if.then465, label %if.end466, !dbg !5430

if.then465:                                       ; preds = %if.else462
  store i32 1, i32* %ret, align 4, !dbg !5431
  br label %err, !dbg !5433

if.end466:                                        ; preds = %if.else462
  br label %if.end467

if.end467:                                        ; preds = %if.end466
  br label %if.end512, !dbg !5434

if.else468:                                       ; preds = %land.lhs.true454, %lor.lhs.false451
  br label %again, !dbg !5435

again:                                            ; preds = %if.then493, %if.else468
  %260 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5436
  %261 = load i8*, i8** %buf, align 8, !dbg !5438
  %call469 = call i32 @SSL_read(%struct.ssl_st* %260, i8* %261, i32 16384), !dbg !5439
  store i32 %call469, i32* %i, align 4, !dbg !5440
  br label %while.cond470, !dbg !5441

while.cond470:                                    ; preds = %if.end483, %again
  %262 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5442
  %263 = load i32, i32* %i, align 4, !dbg !5444
  %call471 = call i32 @SSL_get_error(%struct.ssl_st* %262, i32 %263), !dbg !5445
  %cmp472 = icmp eq i32 %call471, 4, !dbg !5446
  br i1 %cmp472, label %while.body474, label %while.end485, !dbg !5447

while.body474:                                    ; preds = %while.cond470
  %264 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5448
  %call475 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %264, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.473, i32 0, i32 0)), !dbg !5450
  %265 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5451
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %265), !dbg !5452
  %266 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !5453
  %267 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !5454
  %call476 = call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %266, i8* %267), !dbg !5455
  store %struct.SRP_user_pwd_st* %call476, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5456
  %268 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5457
  %tobool477 = icmp ne %struct.SRP_user_pwd_st* %268, null, !dbg !5459
  br i1 %tobool477, label %if.then478, label %if.else481, !dbg !5460

if.then478:                                       ; preds = %while.body474
  %269 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5461
  %270 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !5462
  %info479 = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %270, i32 0, i32 5, !dbg !5463
  %271 = load i8*, i8** %info479, align 8, !dbg !5463
  %call480 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %269, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i32 0, i32 0), i8* %271), !dbg !5464
  br label %if.end483, !dbg !5464

if.else481:                                       ; preds = %while.body474
  %272 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5465
  %call482 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %272, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0)), !dbg !5466
  br label %if.end483

if.end483:                                        ; preds = %if.else481, %if.then478
  %273 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5467
  %274 = load i8*, i8** %buf, align 8, !dbg !5468
  %call484 = call i32 @SSL_read(%struct.ssl_st* %273, i8* %274, i32 16384), !dbg !5469
  store i32 %call484, i32* %i, align 4, !dbg !5470
  br label %while.cond470, !dbg !5471, !llvm.loop !5473

while.end485:                                     ; preds = %while.cond470
  %275 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5474
  %276 = load i32, i32* %i, align 4, !dbg !5475
  %call486 = call i32 @SSL_get_error(%struct.ssl_st* %275, i32 %276), !dbg !5476
  switch i32 %call486, label %sw.epilog511 [
    i32 0, label %sw.bb487
    i32 9, label %sw.bb495
    i32 3, label %sw.bb499
    i32 2, label %sw.bb499
    i32 10, label %sw.bb503
    i32 5, label %sw.bb503
    i32 1, label %sw.bb503
    i32 6, label %sw.bb507
  ], !dbg !5477

sw.bb487:                                         ; preds = %while.end485
  %277 = load i8*, i8** %buf, align 8, !dbg !5478
  %278 = load i32, i32* %i, align 4, !dbg !5480
  %call488 = call i32 @raw_write_stdout(i8* %277, i32 %278), !dbg !5481
  %279 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5482
  %call489 = call i64 @BIO_ctrl(%struct.bio_st* %279, i32 11, i64 0, i8* null), !dbg !5483
  %conv490 = trunc i64 %call489 to i32, !dbg !5484
  %280 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5485
  %call491 = call i32 @SSL_has_pending(%struct.ssl_st* %280), !dbg !5487
  %tobool492 = icmp ne i32 %call491, 0, !dbg !5487
  br i1 %tobool492, label %if.then493, label %if.end494, !dbg !5488

if.then493:                                       ; preds = %sw.bb487
  br label %again, !dbg !5489

if.end494:                                        ; preds = %sw.bb487
  br label %sw.epilog511, !dbg !5490

sw.bb495:                                         ; preds = %while.end485
  %281 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5491
  %call496 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %281, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.474, i32 0, i32 0)), !dbg !5492
  %282 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5493
  %call497 = call i64 @BIO_ctrl(%struct.bio_st* %282, i32 11, i64 0, i8* null), !dbg !5494
  %conv498 = trunc i64 %call497 to i32, !dbg !5495
  %283 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5496
  call void @wait_for_async(%struct.ssl_st* %283), !dbg !5497
  br label %sw.epilog511, !dbg !5498

sw.bb499:                                         ; preds = %while.end485, %while.end485
  %284 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5499
  %call500 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %284, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.475, i32 0, i32 0)), !dbg !5500
  %285 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5501
  %call501 = call i64 @BIO_ctrl(%struct.bio_st* %285, i32 11, i64 0, i8* null), !dbg !5502
  %conv502 = trunc i64 %call501 to i32, !dbg !5503
  br label %sw.epilog511, !dbg !5504

sw.bb503:                                         ; preds = %while.end485, %while.end485, %while.end485
  %286 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5505
  %call504 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %286, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.472, i32 0, i32 0)), !dbg !5506
  %287 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5507
  %call505 = call i64 @BIO_ctrl(%struct.bio_st* %287, i32 11, i64 0, i8* null), !dbg !5508
  %conv506 = trunc i64 %call505 to i32, !dbg !5509
  %288 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5510
  call void @ERR_print_errors(%struct.bio_st* %288), !dbg !5511
  store i32 1, i32* %ret, align 4, !dbg !5512
  br label %err, !dbg !5513

sw.bb507:                                         ; preds = %while.end485
  %289 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5514
  %call508 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %289, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.463, i32 0, i32 0)), !dbg !5515
  %290 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5516
  %call509 = call i64 @BIO_ctrl(%struct.bio_st* %290, i32 11, i64 0, i8* null), !dbg !5517
  %conv510 = trunc i64 %call509 to i32, !dbg !5518
  store i32 1, i32* %ret, align 4, !dbg !5519
  br label %err, !dbg !5520

sw.epilog511:                                     ; preds = %while.end485, %sw.bb499, %sw.bb495, %if.end494
  br label %if.end512

if.end512:                                        ; preds = %sw.epilog511, %if.end467
  br label %if.end513, !dbg !5521

if.end513:                                        ; preds = %if.end512, %if.end447
  br label %for.cond142, !dbg !5522, !llvm.loop !5009

err:                                              ; preds = %sw.bb507, %sw.bb503, %if.then465, %if.then461, %sw.bb431, %sw.bb427, %if.end286, %if.then264, %sw.default, %if.then69, %if.then56, %if.then48, %if.then30, %if.then25, %if.then12
  %291 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5524
  %cmp514 = icmp ne %struct.ssl_st* %291, null, !dbg !5526
  br i1 %cmp514, label %if.then516, label %if.end518, !dbg !5527

if.then516:                                       ; preds = %err
  %292 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5528
  %call517 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %292, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.476, i32 0, i32 0)), !dbg !5530
  %293 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5531
  call void @SSL_set_shutdown(%struct.ssl_st* %293, i32 3), !dbg !5532
  %294 = load %struct.ssl_st*, %struct.ssl_st** %con, align 8, !dbg !5533
  call void @SSL_free(%struct.ssl_st* %294), !dbg !5534
  br label %if.end518, !dbg !5535

if.end518:                                        ; preds = %if.then516, %err
  %295 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5536
  %call519 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %295, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.477, i32 0, i32 0)), !dbg !5537
  %296 = load i8*, i8** %buf, align 8, !dbg !5538
  call void @CRYPTO_clear_free(i8* %296, i64 16384, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2717), !dbg !5539
  %297 = load i32, i32* %ret, align 4, !dbg !5540
  ret i32 %297, !dbg !5541
}

; Function Attrs: nounwind
declare i32 @unlink(i8*) #7

declare i32 @do_server(i32*, i8*, i8*, i32, i32, i32, i32 (i32, i32, i32, i8*)*, i8*, i32, %struct.bio_st*) #2

; Function Attrs: nounwind uwtable
define internal void @print_stats(%struct.bio_st* %bio, %struct.ssl_ctx_st* %ssl_ctx) #0 !dbg !5542 {
entry:
  %bio.addr = alloca %struct.bio_st*, align 8
  %ssl_ctx.addr = alloca %struct.ssl_ctx_st*, align 8
  store %struct.bio_st* %bio, %struct.bio_st** %bio.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_st** %bio.addr, metadata !5545, metadata !431), !dbg !5546
  store %struct.ssl_ctx_st* %ssl_ctx, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %ssl_ctx.addr, metadata !5547, metadata !431), !dbg !5548
  %0 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5549
  %1 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5550
  %call = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %1, i32 20, i64 0, i8* null), !dbg !5551
  %call1 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.438, i32 0, i32 0), i64 %call), !dbg !5552
  %2 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5553
  %3 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5554
  %call2 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %3, i32 21, i64 0, i8* null), !dbg !5555
  %call3 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %2, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.439, i32 0, i32 0), i64 %call2), !dbg !5556
  %4 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5557
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5558
  %call4 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %5, i32 23, i64 0, i8* null), !dbg !5559
  %call5 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.440, i32 0, i32 0), i64 %call4), !dbg !5560
  %6 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5561
  %7 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5562
  %call6 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %7, i32 22, i64 0, i8* null), !dbg !5563
  %call7 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.441, i32 0, i32 0), i64 %call6), !dbg !5564
  %8 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5565
  %9 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5566
  %call8 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %9, i32 24, i64 0, i8* null), !dbg !5567
  %call9 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.442, i32 0, i32 0), i64 %call8), !dbg !5568
  %10 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5569
  %11 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5570
  %call10 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %11, i32 26, i64 0, i8* null), !dbg !5571
  %call11 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %10, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.443, i32 0, i32 0), i64 %call10), !dbg !5572
  %12 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5573
  %13 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5574
  %call12 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %13, i32 25, i64 0, i8* null), !dbg !5575
  %call13 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.444, i32 0, i32 0), i64 %call12), !dbg !5576
  %14 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5577
  %15 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5578
  %call14 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %15, i32 27, i64 0, i8* null), !dbg !5579
  %call15 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %14, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.445, i32 0, i32 0), i64 %call14), !dbg !5580
  %16 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5582
  %17 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5583
  %call16 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %17, i32 29, i64 0, i8* null), !dbg !5584
  %call17 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.446, i32 0, i32 0), i64 %call16), !dbg !5585
  %18 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5586
  %19 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5587
  %call18 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %19, i32 30, i64 0, i8* null), !dbg !5588
  %call19 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.447, i32 0, i32 0), i64 %call18), !dbg !5589
  %20 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5590
  %21 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5591
  %call20 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %21, i32 28, i64 0, i8* null), !dbg !5592
  %call21 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %20, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.448, i32 0, i32 0), i64 %call20), !dbg !5593
  %22 = load %struct.bio_st*, %struct.bio_st** %bio.addr, align 8, !dbg !5594
  %23 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5595
  %call22 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %23, i32 31, i64 0, i8* null), !dbg !5596
  %24 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %ssl_ctx.addr, align 8, !dbg !5597
  %call23 = call i64 @SSL_CTX_ctrl(%struct.ssl_ctx_st* %24, i32 43, i64 0, i8* null), !dbg !5598
  %call24 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %22, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.449, i32 0, i32 0), i64 %call22, i64 %call23), !dbg !5599
  ret void, !dbg !5600
}

declare void @SSL_CTX_free(%struct.ssl_ctx_st*) #2

declare void @SSL_SESSION_free(%struct.ssl_session_st*) #2

declare void @X509_free(%struct.x509_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_X509_CRL_pop_free(%struct.stack_st_X509_CRL* %sk, void (%struct.X509_crl_st*)* %freefunc) #5 !dbg !5601 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_CRL*, align 8
  %freefunc.addr = alloca void (%struct.X509_crl_st*)*, align 8
  store %struct.stack_st_X509_CRL* %sk, %struct.stack_st_X509_CRL** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_CRL** %sk.addr, metadata !5608, metadata !431), !dbg !5609
  store void (%struct.X509_crl_st*)* %freefunc, void (%struct.X509_crl_st*)** %freefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.X509_crl_st*)** %freefunc.addr, metadata !5610, metadata !431), !dbg !5611
  %0 = load %struct.stack_st_X509_CRL*, %struct.stack_st_X509_CRL** %sk.addr, align 8, !dbg !5612
  %1 = bitcast %struct.stack_st_X509_CRL* %0 to %struct.stack_st*, !dbg !5613
  %2 = load void (%struct.X509_crl_st*)*, void (%struct.X509_crl_st*)** %freefunc.addr, align 8, !dbg !5614
  %3 = bitcast void (%struct.X509_crl_st*)* %2 to void (i8*)*, !dbg !5615
  call void @OPENSSL_sk_pop_free(%struct.stack_st* %1, void (i8*)* %3), !dbg !5616
  ret void, !dbg !5617
}

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_X509_pop_free(%struct.stack_st_X509* %sk, void (%struct.x509_st*)* %freefunc) #5 !dbg !5618 {
entry:
  %sk.addr = alloca %struct.stack_st_X509*, align 8
  %freefunc.addr = alloca void (%struct.x509_st*)*, align 8
  store %struct.stack_st_X509* %sk, %struct.stack_st_X509** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509** %sk.addr, metadata !5625, metadata !431), !dbg !5626
  store void (%struct.x509_st*)* %freefunc, void (%struct.x509_st*)** %freefunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.x509_st*)** %freefunc.addr, metadata !5627, metadata !431), !dbg !5628
  %0 = load %struct.stack_st_X509*, %struct.stack_st_X509** %sk.addr, align 8, !dbg !5629
  %1 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*, !dbg !5630
  %2 = load void (%struct.x509_st*)*, void (%struct.x509_st*)** %freefunc.addr, align 8, !dbg !5631
  %3 = bitcast void (%struct.x509_st*)* %2 to void (i8*)*, !dbg !5632
  call void @OPENSSL_sk_pop_free(%struct.stack_st* %1, void (i8*)* %3), !dbg !5633
  ret void, !dbg !5634
}

declare void @X509_VERIFY_PARAM_free(%struct.X509_VERIFY_PARAM_st*) #2

; Function Attrs: nounwind uwtable
define internal void @free_sessions() #0 !dbg !5635 {
entry:
  %sess = alloca %struct.simple_ssl_session_st*, align 8
  %tsess = alloca %struct.simple_ssl_session_st*, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_ssl_session_st** %sess, metadata !5636, metadata !431), !dbg !5637
  call void @llvm.dbg.declare(metadata %struct.simple_ssl_session_st** %tsess, metadata !5638, metadata !431), !dbg !5639
  %0 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** @first, align 8, !dbg !5640
  store %struct.simple_ssl_session_st* %0, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5642
  br label %for.cond, !dbg !5643

for.cond:                                         ; preds = %for.body, %entry
  %1 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5644
  %tobool = icmp ne %struct.simple_ssl_session_st* %1, null, !dbg !5647
  br i1 %tobool, label %for.body, label %for.end, !dbg !5647

for.body:                                         ; preds = %for.cond
  %2 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5648
  %id = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %2, i32 0, i32 0, !dbg !5650
  %3 = load i8*, i8** %id, align 8, !dbg !5650
  call void @CRYPTO_free(i8* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3627), !dbg !5651
  %4 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5652
  %der = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %4, i32 0, i32 2, !dbg !5653
  %5 = load i8*, i8** %der, align 8, !dbg !5653
  call void @CRYPTO_free(i8* %5, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3628), !dbg !5654
  %6 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5655
  store %struct.simple_ssl_session_st* %6, %struct.simple_ssl_session_st** %tsess, align 8, !dbg !5656
  %7 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5657
  %next = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %7, i32 0, i32 4, !dbg !5658
  %8 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %next, align 8, !dbg !5658
  store %struct.simple_ssl_session_st* %8, %struct.simple_ssl_session_st** %sess, align 8, !dbg !5659
  %9 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %tsess, align 8, !dbg !5660
  %10 = bitcast %struct.simple_ssl_session_st* %9 to i8*, !dbg !5660
  call void @CRYPTO_free(i8* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3631), !dbg !5661
  br label %for.cond, !dbg !5662, !llvm.loop !5664

for.end:                                          ; preds = %for.cond
  store %struct.simple_ssl_session_st* null, %struct.simple_ssl_session_st** @first, align 8, !dbg !5666
  ret void, !dbg !5667
}

declare void @ssl_excert_free(%struct.ssl_excert_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sk_OPENSSL_STRING_free(%struct.stack_st_OPENSSL_STRING* %sk) #5 !dbg !5668 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !5671, metadata !431), !dbg !5672
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !5673
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !5674
  call void @OPENSSL_sk_free(%struct.stack_st* %1), !dbg !5675
  ret void, !dbg !5676
}

declare void @SSL_CONF_CTX_free(%struct.ssl_conf_ctx_st*) #2

declare void @release_engine(%struct.engine_st*) #2

declare %struct.stack_st* @OPENSSL_sk_new_null() #2

declare i32 @OPENSSL_sk_push(%struct.stack_st*, i8*) #2

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) #2

declare i32 @SSL_select_next_proto(i8**, i8*, i8*, i32, i8*, i32) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

declare i8* @OPENSSL_hexstr2buf(i8*, i64*) #2

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #4

declare i32 @SSL_SESSION_up_ref(%struct.ssl_session_st*) #2

declare %struct.ssl_cipher_st* @SSL_CIPHER_find(%struct.ssl_st*, i8*) #2

declare %struct.ssl_session_st* @SSL_SESSION_new() #2

declare i32 @SSL_SESSION_set1_master_key(%struct.ssl_session_st*, i8*, i64) #2

declare i32 @SSL_SESSION_set_cipher(%struct.ssl_session_st*, %struct.ssl_cipher_st*) #2

declare i32 @SSL_SESSION_set_protocol_version(%struct.ssl_session_st*, i32) #2

declare i32 @SSL_version(%struct.ssl_st*) #2

declare i8* @SSL_get_servername(%struct.ssl_st*, i32) #2

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #4

declare %struct.ssl_ctx_st* @SSL_set_SSL_CTX(%struct.ssl_st*, %struct.ssl_ctx_st*) #2

declare i8* @SSL_get_srp_username(%struct.ssl_st*) #2

declare i32 @SSL_set_srp_server_param(%struct.ssl_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i8*) #2

declare void @SRP_user_pwd_free(%struct.SRP_user_pwd_st*) #2

declare %struct.bio_st* @bio_open_default(i8*, i8 signext, i32) #2

declare i8* @ASN1_d2i_bio(i8* ()*, i8* (i8**, i8**, i64)*, %struct.bio_st*, i8**) #2

declare %struct.ocsp_response_st* @OCSP_RESPONSE_new() #2

declare %struct.ocsp_response_st* @d2i_OCSP_RESPONSE(%struct.ocsp_response_st**, i8**, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @get_ocsp_resp_from_responder(%struct.ssl_st* %s, %struct.tlsextstatusctx_st* %srctx, %struct.ocsp_response_st** %resp) #0 !dbg !5677 {
entry:
  %s.addr = alloca %struct.ssl_st*, align 8
  %srctx.addr = alloca %struct.tlsextstatusctx_st*, align 8
  %resp.addr = alloca %struct.ocsp_response_st**, align 8
  %host = alloca i8*, align 8
  %port = alloca i8*, align 8
  %path = alloca i8*, align 8
  %use_ssl = alloca i32, align 4
  %aia = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %x = alloca %struct.x509_st*, align 8
  %inctx = alloca %struct.x509_store_ctx_st*, align 8
  %obj = alloca %struct.x509_object_st*, align 8
  %req = alloca %struct.ocsp_request_st*, align 8
  %id = alloca %struct.ocsp_cert_id_st*, align 8
  %exts = alloca %struct.stack_st_X509_EXTENSION*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %ext = alloca %struct.X509_extension_st*, align 8
  store %struct.ssl_st* %s, %struct.ssl_st** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %s.addr, metadata !5681, metadata !431), !dbg !5682
  store %struct.tlsextstatusctx_st* %srctx, %struct.tlsextstatusctx_st** %srctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tlsextstatusctx_st** %srctx.addr, metadata !5683, metadata !431), !dbg !5684
  store %struct.ocsp_response_st** %resp, %struct.ocsp_response_st*** %resp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ocsp_response_st*** %resp.addr, metadata !5685, metadata !431), !dbg !5686
  call void @llvm.dbg.declare(metadata i8** %host, metadata !5687, metadata !431), !dbg !5688
  store i8* null, i8** %host, align 8, !dbg !5688
  call void @llvm.dbg.declare(metadata i8** %port, metadata !5689, metadata !431), !dbg !5690
  store i8* null, i8** %port, align 8, !dbg !5690
  call void @llvm.dbg.declare(metadata i8** %path, metadata !5691, metadata !431), !dbg !5692
  store i8* null, i8** %path, align 8, !dbg !5692
  call void @llvm.dbg.declare(metadata i32* %use_ssl, metadata !5693, metadata !431), !dbg !5694
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %aia, metadata !5695, metadata !431), !dbg !5696
  store %struct.stack_st_OPENSSL_STRING* null, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5696
  call void @llvm.dbg.declare(metadata %struct.x509_st** %x, metadata !5697, metadata !431), !dbg !5698
  store %struct.x509_st* null, %struct.x509_st** %x, align 8, !dbg !5698
  call void @llvm.dbg.declare(metadata %struct.x509_store_ctx_st** %inctx, metadata !5699, metadata !431), !dbg !5703
  store %struct.x509_store_ctx_st* null, %struct.x509_store_ctx_st** %inctx, align 8, !dbg !5703
  call void @llvm.dbg.declare(metadata %struct.x509_object_st** %obj, metadata !5704, metadata !431), !dbg !5708
  call void @llvm.dbg.declare(metadata %struct.ocsp_request_st** %req, metadata !5709, metadata !431), !dbg !5714
  store %struct.ocsp_request_st* null, %struct.ocsp_request_st** %req, align 8, !dbg !5714
  call void @llvm.dbg.declare(metadata %struct.ocsp_cert_id_st** %id, metadata !5715, metadata !431), !dbg !5719
  store %struct.ocsp_cert_id_st* null, %struct.ocsp_cert_id_st** %id, align 8, !dbg !5719
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_EXTENSION** %exts, metadata !5720, metadata !431), !dbg !5723
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5724, metadata !431), !dbg !5725
  store i32 3, i32* %ret, align 4, !dbg !5725
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5726, metadata !431), !dbg !5727
  %0 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5728
  %call = call %struct.x509_st* @SSL_get_certificate(%struct.ssl_st* %0), !dbg !5729
  store %struct.x509_st* %call, %struct.x509_st** %x, align 8, !dbg !5730
  %1 = load %struct.x509_st*, %struct.x509_st** %x, align 8, !dbg !5731
  %call1 = call %struct.stack_st_OPENSSL_STRING* @X509_get1_ocsp(%struct.x509_st* %1), !dbg !5732
  store %struct.stack_st_OPENSSL_STRING* %call1, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5733
  %2 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5734
  %cmp = icmp ne %struct.stack_st_OPENSSL_STRING* %2, null, !dbg !5736
  br i1 %cmp, label %if.then, label %if.else, !dbg !5737

if.then:                                          ; preds = %entry
  %3 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5738
  %call2 = call i8* @sk_OPENSSL_STRING_value(%struct.stack_st_OPENSSL_STRING* %3, i32 0), !dbg !5741
  %call3 = call i32 @OCSP_parse_url(i8* %call2, i8** %host, i8** %port, i8** %path, i32* %use_ssl), !dbg !5742
  %tobool = icmp ne i32 %call3, 0, !dbg !5744
  br i1 %tobool, label %if.end, label %if.then4, !dbg !5745

if.then4:                                         ; preds = %if.then
  %4 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5746
  %call5 = call i32 @BIO_puts(%struct.bio_st* %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.433, i32 0, i32 0)), !dbg !5748
  br label %err, !dbg !5749

if.end:                                           ; preds = %if.then
  %5 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5750
  %verbose = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %5, i32 0, i32 6, !dbg !5752
  %6 = load i32, i32* %verbose, align 4, !dbg !5752
  %tobool6 = icmp ne i32 %6, 0, !dbg !5750
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !5753

if.then7:                                         ; preds = %if.end
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5754
  %8 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5755
  %call8 = call i8* @sk_OPENSSL_STRING_value(%struct.stack_st_OPENSSL_STRING* %8, i32 0), !dbg !5756
  %call9 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.434, i32 0, i32 0), i8* %call8), !dbg !5757
  br label %if.end10, !dbg !5757

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end20, !dbg !5758

if.else:                                          ; preds = %entry
  %9 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5759
  %host11 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %9, i32 0, i32 2, !dbg !5762
  %10 = load i8*, i8** %host11, align 8, !dbg !5762
  %cmp12 = icmp eq i8* %10, null, !dbg !5763
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !5764

if.then13:                                        ; preds = %if.else
  %11 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5765
  %call14 = call i32 @BIO_puts(%struct.bio_st* %11, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.435, i32 0, i32 0)), !dbg !5767
  br label %done, !dbg !5768

if.end15:                                         ; preds = %if.else
  %12 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5769
  %host16 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %12, i32 0, i32 2, !dbg !5770
  %13 = load i8*, i8** %host16, align 8, !dbg !5770
  store i8* %13, i8** %host, align 8, !dbg !5771
  %14 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5772
  %path17 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %14, i32 0, i32 3, !dbg !5773
  %15 = load i8*, i8** %path17, align 8, !dbg !5773
  store i8* %15, i8** %path, align 8, !dbg !5774
  %16 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5775
  %port18 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %16, i32 0, i32 4, !dbg !5776
  %17 = load i8*, i8** %port18, align 8, !dbg !5776
  store i8* %17, i8** %port, align 8, !dbg !5777
  %18 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5778
  %use_ssl19 = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %18, i32 0, i32 5, !dbg !5779
  %19 = load i32, i32* %use_ssl19, align 8, !dbg !5779
  store i32 %19, i32* %use_ssl, align 4, !dbg !5780
  br label %if.end20

if.end20:                                         ; preds = %if.end15, %if.end10
  %call21 = call %struct.x509_store_ctx_st* @X509_STORE_CTX_new(), !dbg !5781
  store %struct.x509_store_ctx_st* %call21, %struct.x509_store_ctx_st** %inctx, align 8, !dbg !5782
  %20 = load %struct.x509_store_ctx_st*, %struct.x509_store_ctx_st** %inctx, align 8, !dbg !5783
  %cmp22 = icmp eq %struct.x509_store_ctx_st* %20, null, !dbg !5785
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !5786

if.then23:                                        ; preds = %if.end20
  br label %err, !dbg !5787

if.end24:                                         ; preds = %if.end20
  %21 = load %struct.x509_store_ctx_st*, %struct.x509_store_ctx_st** %inctx, align 8, !dbg !5788
  %22 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5790
  %call25 = call %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st* %22), !dbg !5791
  %call26 = call %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st* %call25), !dbg !5792
  %call27 = call i32 @X509_STORE_CTX_init(%struct.x509_store_ctx_st* %21, %struct.x509_store_st* %call26, %struct.x509_st* null, %struct.stack_st_X509* null), !dbg !5794
  %tobool28 = icmp ne i32 %call27, 0, !dbg !5794
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !5795

if.then29:                                        ; preds = %if.end24
  br label %err, !dbg !5796

if.end30:                                         ; preds = %if.end24
  %23 = load %struct.x509_store_ctx_st*, %struct.x509_store_ctx_st** %inctx, align 8, !dbg !5797
  %24 = load %struct.x509_st*, %struct.x509_st** %x, align 8, !dbg !5798
  %call31 = call %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* %24), !dbg !5799
  %call32 = call %struct.x509_object_st* @X509_STORE_CTX_get_obj_by_subject(%struct.x509_store_ctx_st* %23, i32 1, %struct.X509_name_st* %call31), !dbg !5800
  store %struct.x509_object_st* %call32, %struct.x509_object_st** %obj, align 8, !dbg !5801
  %25 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !5802
  %cmp33 = icmp eq %struct.x509_object_st* %25, null, !dbg !5804
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !5805

if.then34:                                        ; preds = %if.end30
  %26 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5806
  %call35 = call i32 @BIO_puts(%struct.bio_st* %26, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.436, i32 0, i32 0)), !dbg !5808
  br label %done, !dbg !5809

if.end36:                                         ; preds = %if.end30
  %27 = load %struct.x509_st*, %struct.x509_st** %x, align 8, !dbg !5810
  %28 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !5811
  %call37 = call %struct.x509_st* @X509_OBJECT_get0_X509(%struct.x509_object_st* %28), !dbg !5812
  %call38 = call %struct.ocsp_cert_id_st* @OCSP_cert_to_id(%struct.evp_md_st* null, %struct.x509_st* %27, %struct.x509_st* %call37), !dbg !5813
  store %struct.ocsp_cert_id_st* %call38, %struct.ocsp_cert_id_st** %id, align 8, !dbg !5815
  %29 = load %struct.x509_object_st*, %struct.x509_object_st** %obj, align 8, !dbg !5816
  call void @X509_OBJECT_free(%struct.x509_object_st* %29), !dbg !5817
  %30 = load %struct.ocsp_cert_id_st*, %struct.ocsp_cert_id_st** %id, align 8, !dbg !5818
  %cmp39 = icmp eq %struct.ocsp_cert_id_st* %30, null, !dbg !5820
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !5821

if.then40:                                        ; preds = %if.end36
  br label %err, !dbg !5822

if.end41:                                         ; preds = %if.end36
  %call42 = call %struct.ocsp_request_st* @OCSP_REQUEST_new(), !dbg !5823
  store %struct.ocsp_request_st* %call42, %struct.ocsp_request_st** %req, align 8, !dbg !5824
  %31 = load %struct.ocsp_request_st*, %struct.ocsp_request_st** %req, align 8, !dbg !5825
  %cmp43 = icmp eq %struct.ocsp_request_st* %31, null, !dbg !5827
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !5828

if.then44:                                        ; preds = %if.end41
  br label %err, !dbg !5829

if.end45:                                         ; preds = %if.end41
  %32 = load %struct.ocsp_request_st*, %struct.ocsp_request_st** %req, align 8, !dbg !5830
  %33 = load %struct.ocsp_cert_id_st*, %struct.ocsp_cert_id_st** %id, align 8, !dbg !5832
  %call46 = call %struct.ocsp_one_request_st* @OCSP_request_add0_id(%struct.ocsp_request_st* %32, %struct.ocsp_cert_id_st* %33), !dbg !5833
  %tobool47 = icmp ne %struct.ocsp_one_request_st* %call46, null, !dbg !5833
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !5834

if.then48:                                        ; preds = %if.end45
  br label %err, !dbg !5835

if.end49:                                         ; preds = %if.end45
  store %struct.ocsp_cert_id_st* null, %struct.ocsp_cert_id_st** %id, align 8, !dbg !5836
  %34 = load %struct.ssl_st*, %struct.ssl_st** %s.addr, align 8, !dbg !5837
  %35 = bitcast %struct.stack_st_X509_EXTENSION** %exts to i8*, !dbg !5838
  %call50 = call i64 @SSL_ctrl(%struct.ssl_st* %34, i32 66, i64 0, i8* %35), !dbg !5839
  store i32 0, i32* %i, align 4, !dbg !5840
  br label %for.cond, !dbg !5842

for.cond:                                         ; preds = %for.inc, %if.end49
  %36 = load i32, i32* %i, align 4, !dbg !5843
  %37 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %exts, align 8, !dbg !5846
  %call51 = call i32 @sk_X509_EXTENSION_num(%struct.stack_st_X509_EXTENSION* %37), !dbg !5847
  %cmp52 = icmp slt i32 %36, %call51, !dbg !5848
  br i1 %cmp52, label %for.body, label %for.end, !dbg !5849

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.X509_extension_st** %ext, metadata !5850, metadata !431), !dbg !5852
  %38 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %exts, align 8, !dbg !5853
  %39 = load i32, i32* %i, align 4, !dbg !5854
  %call53 = call %struct.X509_extension_st* @sk_X509_EXTENSION_value(%struct.stack_st_X509_EXTENSION* %38, i32 %39), !dbg !5855
  store %struct.X509_extension_st* %call53, %struct.X509_extension_st** %ext, align 8, !dbg !5852
  %40 = load %struct.ocsp_request_st*, %struct.ocsp_request_st** %req, align 8, !dbg !5856
  %41 = load %struct.X509_extension_st*, %struct.X509_extension_st** %ext, align 8, !dbg !5858
  %call54 = call i32 @OCSP_REQUEST_add_ext(%struct.ocsp_request_st* %40, %struct.X509_extension_st* %41, i32 -1), !dbg !5859
  %tobool55 = icmp ne i32 %call54, 0, !dbg !5859
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !5860

if.then56:                                        ; preds = %for.body
  br label %err, !dbg !5861

if.end57:                                         ; preds = %for.body
  br label %for.inc, !dbg !5862

for.inc:                                          ; preds = %if.end57
  %42 = load i32, i32* %i, align 4, !dbg !5863
  %inc = add nsw i32 %42, 1, !dbg !5863
  store i32 %inc, i32* %i, align 4, !dbg !5863
  br label %for.cond, !dbg !5865, !llvm.loop !5866

for.end:                                          ; preds = %for.cond
  %43 = load %struct.ocsp_request_st*, %struct.ocsp_request_st** %req, align 8, !dbg !5868
  %44 = load i8*, i8** %host, align 8, !dbg !5869
  %45 = load i8*, i8** %path, align 8, !dbg !5870
  %46 = load i8*, i8** %port, align 8, !dbg !5871
  %47 = load i32, i32* %use_ssl, align 4, !dbg !5872
  %48 = load %struct.tlsextstatusctx_st*, %struct.tlsextstatusctx_st** %srctx.addr, align 8, !dbg !5873
  %timeout = getelementptr inbounds %struct.tlsextstatusctx_st, %struct.tlsextstatusctx_st* %48, i32 0, i32 0, !dbg !5874
  %49 = load i32, i32* %timeout, align 8, !dbg !5874
  %call58 = call %struct.ocsp_response_st* @process_responder(%struct.ocsp_request_st* %43, i8* %44, i8* %45, i8* %46, i32 %47, %struct.stack_st_CONF_VALUE* null, i32 %49), !dbg !5875
  %50 = load %struct.ocsp_response_st**, %struct.ocsp_response_st*** %resp.addr, align 8, !dbg !5876
  store %struct.ocsp_response_st* %call58, %struct.ocsp_response_st** %50, align 8, !dbg !5877
  %51 = load %struct.ocsp_response_st**, %struct.ocsp_response_st*** %resp.addr, align 8, !dbg !5878
  %52 = load %struct.ocsp_response_st*, %struct.ocsp_response_st** %51, align 8, !dbg !5880
  %cmp59 = icmp eq %struct.ocsp_response_st* %52, null, !dbg !5881
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !5882

if.then60:                                        ; preds = %for.end
  %53 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !5883
  %call61 = call i32 @BIO_puts(%struct.bio_st* %53, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.437, i32 0, i32 0)), !dbg !5885
  br label %done, !dbg !5886

if.end62:                                         ; preds = %for.end
  store i32 0, i32* %ret, align 4, !dbg !5887
  br label %done, !dbg !5888

err:                                              ; preds = %if.then56, %if.then48, %if.then44, %if.then40, %if.then29, %if.then23, %if.then4
  store i32 2, i32* %ret, align 4, !dbg !5889
  br label %done, !dbg !5890

done:                                             ; preds = %err, %if.end62, %if.then60, %if.then34, %if.then13
  %54 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5891
  %cmp63 = icmp ne %struct.stack_st_OPENSSL_STRING* %54, null, !dbg !5893
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !5894

if.then64:                                        ; preds = %done
  %55 = load i8*, i8** %host, align 8, !dbg !5895
  call void @CRYPTO_free(i8* %55, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 598), !dbg !5897
  %56 = load i8*, i8** %path, align 8, !dbg !5898
  call void @CRYPTO_free(i8* %56, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 599), !dbg !5899
  %57 = load i8*, i8** %port, align 8, !dbg !5900
  call void @CRYPTO_free(i8* %57, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 600), !dbg !5901
  %58 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %aia, align 8, !dbg !5902
  call void @X509_email_free(%struct.stack_st_OPENSSL_STRING* %58), !dbg !5903
  br label %if.end65, !dbg !5904

if.end65:                                         ; preds = %if.then64, %done
  %59 = load %struct.ocsp_cert_id_st*, %struct.ocsp_cert_id_st** %id, align 8, !dbg !5905
  call void @OCSP_CERTID_free(%struct.ocsp_cert_id_st* %59), !dbg !5906
  %60 = load %struct.ocsp_request_st*, %struct.ocsp_request_st** %req, align 8, !dbg !5907
  call void @OCSP_REQUEST_free(%struct.ocsp_request_st* %60), !dbg !5908
  %61 = load %struct.x509_store_ctx_st*, %struct.x509_store_ctx_st** %inctx, align 8, !dbg !5909
  call void @X509_STORE_CTX_free(%struct.x509_store_ctx_st* %61), !dbg !5910
  %62 = load i32, i32* %ret, align 4, !dbg !5911
  ret i32 %62, !dbg !5912
}

declare i32 @i2d_OCSP_RESPONSE(%struct.ocsp_response_st*, i8**) #2

declare i64 @SSL_ctrl(%struct.ssl_st*, i32, i64, i8*) #2

declare i32 @OCSP_RESPONSE_print(%struct.bio_st*, %struct.ocsp_response_st*, i64) #2

declare void @OCSP_RESPONSE_free(%struct.ocsp_response_st*) #2

declare %struct.x509_st* @SSL_get_certificate(%struct.ssl_st*) #2

declare %struct.stack_st_OPENSSL_STRING* @X509_get1_ocsp(%struct.x509_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @sk_OPENSSL_STRING_value(%struct.stack_st_OPENSSL_STRING* %sk, i32 %idx) #5 !dbg !5913 {
entry:
  %sk.addr = alloca %struct.stack_st_OPENSSL_STRING*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.stack_st_OPENSSL_STRING* %sk, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_OPENSSL_STRING** %sk.addr, metadata !5918, metadata !431), !dbg !5919
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !5920, metadata !431), !dbg !5921
  %0 = load %struct.stack_st_OPENSSL_STRING*, %struct.stack_st_OPENSSL_STRING** %sk.addr, align 8, !dbg !5922
  %1 = bitcast %struct.stack_st_OPENSSL_STRING* %0 to %struct.stack_st*, !dbg !5923
  %2 = load i32, i32* %idx.addr, align 4, !dbg !5924
  %call = call i8* @OPENSSL_sk_value(%struct.stack_st* %1, i32 %2), !dbg !5925
  ret i8* %call, !dbg !5926
}

declare %struct.x509_store_ctx_st* @X509_STORE_CTX_new() #2

declare i32 @X509_STORE_CTX_init(%struct.x509_store_ctx_st*, %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*) #2

declare %struct.x509_store_st* @SSL_CTX_get_cert_store(%struct.ssl_ctx_st*) #2

declare %struct.ssl_ctx_st* @SSL_get_SSL_CTX(%struct.ssl_st*) #2

declare %struct.x509_object_st* @X509_STORE_CTX_get_obj_by_subject(%struct.x509_store_ctx_st*, i32, %struct.X509_name_st*) #2

declare %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st*) #2

declare %struct.ocsp_cert_id_st* @OCSP_cert_to_id(%struct.evp_md_st*, %struct.x509_st*, %struct.x509_st*) #2

declare %struct.x509_st* @X509_OBJECT_get0_X509(%struct.x509_object_st*) #2

declare void @X509_OBJECT_free(%struct.x509_object_st*) #2

declare %struct.ocsp_request_st* @OCSP_REQUEST_new() #2

declare %struct.ocsp_one_request_st* @OCSP_request_add0_id(%struct.ocsp_request_st*, %struct.ocsp_cert_id_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_X509_EXTENSION_num(%struct.stack_st_X509_EXTENSION* %sk) #5 !dbg !5927 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_EXTENSION*, align 8
  store %struct.stack_st_X509_EXTENSION* %sk, %struct.stack_st_X509_EXTENSION** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_EXTENSION** %sk.addr, metadata !5932, metadata !431), !dbg !5933
  %0 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %sk.addr, align 8, !dbg !5934
  %1 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*, !dbg !5935
  %call = call i32 @OPENSSL_sk_num(%struct.stack_st* %1), !dbg !5936
  ret i32 %call, !dbg !5937
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.X509_extension_st* @sk_X509_EXTENSION_value(%struct.stack_st_X509_EXTENSION* %sk, i32 %idx) #5 !dbg !5938 {
entry:
  %sk.addr = alloca %struct.stack_st_X509_EXTENSION*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.stack_st_X509_EXTENSION* %sk, %struct.stack_st_X509_EXTENSION** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_X509_EXTENSION** %sk.addr, metadata !5941, metadata !431), !dbg !5942
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !5943, metadata !431), !dbg !5944
  %0 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %sk.addr, align 8, !dbg !5945
  %1 = bitcast %struct.stack_st_X509_EXTENSION* %0 to %struct.stack_st*, !dbg !5946
  %2 = load i32, i32* %idx.addr, align 4, !dbg !5947
  %call = call i8* @OPENSSL_sk_value(%struct.stack_st* %1, i32 %2), !dbg !5948
  %3 = bitcast i8* %call to %struct.X509_extension_st*, !dbg !5949
  ret %struct.X509_extension_st* %3, !dbg !5950
}

declare i32 @OCSP_REQUEST_add_ext(%struct.ocsp_request_st*, %struct.X509_extension_st*, i32) #2

declare %struct.ocsp_response_st* @process_responder(%struct.ocsp_request_st*, i8*, i8*, i8*, i32, %struct.stack_st_CONF_VALUE*, i32) #2

declare void @X509_email_free(%struct.stack_st_OPENSSL_STRING*) #2

declare void @OCSP_CERTID_free(%struct.ocsp_cert_id_st*) #2

declare void @OCSP_REQUEST_free(%struct.ocsp_request_st*) #2

declare void @X509_STORE_CTX_free(%struct.x509_store_ctx_st*) #2

declare i8* @OPENSSL_sk_value(%struct.stack_st*, i32) #2

declare i32 @OPENSSL_sk_num(%struct.stack_st*) #2

declare void @OPENSSL_sk_pop_free(%struct.stack_st*, void (i8*)*) #2

declare void @OPENSSL_sk_free(%struct.stack_st*) #2

declare i8* @app_malloc(i32, i8*) #2

declare i32 @BIO_socket_nbio(i32, i32) #2

declare %struct.ssl_st* @SSL_new(%struct.ssl_ctx_st*) #2

declare i64 @SSL_callback_ctrl(%struct.ssl_st*, i32, void ()*) #2

declare void @tlsext_cb(%struct.ssl_st*, i32, i32, i8*, i32, i8*) #2

declare i32 @SSL_set_session_id_context(%struct.ssl_st*, i8*, i32) #2

declare i32 @SSL_clear(%struct.ssl_st*) #2

declare %struct.bio_st* @BIO_new_dgram(i32, i32) #2

declare i64 @SSL_set_options(%struct.ssl_st*, i64) #2

declare %struct.bio_st* @BIO_new_socket(i32, i32) #2

declare %struct.bio_method_st* @BIO_f_nbio_test() #2

declare %struct.bio_st* @BIO_push(%struct.bio_st*, %struct.bio_st*) #2

declare void @SSL_set_bio(%struct.ssl_st*, %struct.bio_st*, %struct.bio_st*) #2

declare void @SSL_set_accept_state(%struct.ssl_st*) #2

declare void @BIO_set_callback(%struct.bio_st*, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*) #2

declare %struct.bio_st* @SSL_get_rbio(%struct.ssl_st*) #2

declare i64 @bio_dump_callback(%struct.bio_st*, i32, i8*, i32, i64, i64) #2

declare void @BIO_set_callback_arg(%struct.bio_st*, i8*) #2

declare void @SSL_set_msg_callback(%struct.ssl_st*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*) #2

declare void @msg_cb(i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*) #2

declare i32 @SSL_read_early_data(%struct.ssl_st*, i8*, i64, i64*) #2

declare i32 @SSL_get_error(%struct.ssl_st*, i32) #2

declare i32 @raw_write_stdout(i8*, i32) #2

declare i32 @SSL_get_early_data_status(%struct.ssl_st*) #2

declare i32 @SSL_is_init_finished(%struct.ssl_st*) #2

; Function Attrs: nounwind uwtable
define internal void @print_connection_info(%struct.ssl_st* %con) #0 !dbg !5951 {
entry:
  %con.addr = alloca %struct.ssl_st*, align 8
  %str = alloca i8*, align 8
  %peer = alloca %struct.x509_st*, align 8
  %buf = alloca [8192 x i8], align 16
  %next_proto_neg = alloca i8*, align 8
  %next_proto_neg_len = alloca i32, align 4
  %exportedkeymat = alloca i8*, align 8
  %i = alloca i32, align 4
  %srtp_profile = alloca %struct.srtp_protection_profile_st*, align 8
  store %struct.ssl_st* %con, %struct.ssl_st** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con.addr, metadata !5954, metadata !431), !dbg !5955
  call void @llvm.dbg.declare(metadata i8** %str, metadata !5956, metadata !431), !dbg !5957
  call void @llvm.dbg.declare(metadata %struct.x509_st** %peer, metadata !5958, metadata !431), !dbg !5959
  call void @llvm.dbg.declare(metadata [8192 x i8]* %buf, metadata !5960, metadata !431), !dbg !5964
  call void @llvm.dbg.declare(metadata i8** %next_proto_neg, metadata !5965, metadata !431), !dbg !5966
  call void @llvm.dbg.declare(metadata i32* %next_proto_neg_len, metadata !5967, metadata !431), !dbg !5968
  call void @llvm.dbg.declare(metadata i8** %exportedkeymat, metadata !5969, metadata !431), !dbg !5970
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5971, metadata !431), !dbg !5972
  %0 = load i32, i32* @s_brief, align 4, !dbg !5973
  %tobool = icmp ne i32 %0, 0, !dbg !5973
  br i1 %tobool, label %if.then, label %if.end, !dbg !5975

if.then:                                          ; preds = %entry
  %1 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !5976
  call void @print_ssl_summary(%struct.ssl_st* %1), !dbg !5977
  br label %if.end, !dbg !5977

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5978
  %3 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !5979
  %call = call %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st* %3), !dbg !5980
  %call1 = call i32 @PEM_write_bio_SSL_SESSION(%struct.bio_st* %2, %struct.ssl_session_st* %call), !dbg !5981
  %4 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !5983
  %call2 = call %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st* %4), !dbg !5984
  store %struct.x509_st* %call2, %struct.x509_st** %peer, align 8, !dbg !5985
  %5 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5986
  %cmp = icmp ne %struct.x509_st* %5, null, !dbg !5988
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !5989

if.then3:                                         ; preds = %if.end
  %6 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5990
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.478, i32 0, i32 0)), !dbg !5992
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5993
  %8 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5994
  %call5 = call i32 @PEM_write_bio_X509(%struct.bio_st* %7, %struct.x509_st* %8), !dbg !5995
  %9 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !5996
  %10 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5997
  %call6 = call i32 @dump_cert_text(%struct.bio_st* %9, %struct.x509_st* %10), !dbg !5998
  %11 = load %struct.x509_st*, %struct.x509_st** %peer, align 8, !dbg !5999
  call void @X509_free(%struct.x509_st* %11), !dbg !6000
  store %struct.x509_st* null, %struct.x509_st** %peer, align 8, !dbg !6001
  br label %if.end7, !dbg !6002

if.end7:                                          ; preds = %if.then3, %if.end
  %12 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6003
  %arraydecay = getelementptr inbounds [8192 x i8], [8192 x i8]* %buf, i32 0, i32 0, !dbg !6005
  %call8 = call i8* @SSL_get_shared_ciphers(%struct.ssl_st* %12, i8* %arraydecay, i32 8192), !dbg !6006
  %cmp9 = icmp ne i8* %call8, null, !dbg !6007
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !6008

if.then10:                                        ; preds = %if.end7
  %13 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6009
  %arraydecay11 = getelementptr inbounds [8192 x i8], [8192 x i8]* %buf, i32 0, i32 0, !dbg !6010
  %call12 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.479, i32 0, i32 0), i8* %arraydecay11), !dbg !6011
  br label %if.end13, !dbg !6011

if.end13:                                         ; preds = %if.then10, %if.end7
  %14 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6012
  %call14 = call %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st* %14), !dbg !6013
  %call15 = call i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st* %call14), !dbg !6014
  store i8* %call15, i8** %str, align 8, !dbg !6015
  %15 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6016
  %16 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6017
  %call16 = call i32 @ssl_print_sigalgs(%struct.bio_st* %15, %struct.ssl_st* %16), !dbg !6018
  %17 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6019
  %18 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6020
  %call17 = call i32 @ssl_print_point_formats(%struct.bio_st* %17, %struct.ssl_st* %18), !dbg !6021
  %19 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6022
  %20 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6023
  %call18 = call i32 @ssl_print_groups(%struct.bio_st* %19, %struct.ssl_st* %20, i32 0), !dbg !6024
  %21 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6025
  %22 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6026
  call void @print_ca_names(%struct.bio_st* %21, %struct.ssl_st* %22), !dbg !6027
  %23 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6028
  %24 = load i8*, i8** %str, align 8, !dbg !6029
  %cmp19 = icmp ne i8* %24, null, !dbg !6030
  br i1 %cmp19, label %cond.true, label %cond.false, !dbg !6031

cond.true:                                        ; preds = %if.end13
  %25 = load i8*, i8** %str, align 8, !dbg !6032
  br label %cond.end, !dbg !6033

cond.false:                                       ; preds = %if.end13
  br label %cond.end, !dbg !6034

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %25, %cond.true ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.481, i32 0, i32 0), %cond.false ], !dbg !6036
  %call20 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.480, i32 0, i32 0), i8* %cond), !dbg !6038
  %26 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6039
  call void @SSL_get0_next_proto_negotiated(%struct.ssl_st* %26, i8** %next_proto_neg, i32* %next_proto_neg_len), !dbg !6040
  %27 = load i8*, i8** %next_proto_neg, align 8, !dbg !6041
  %tobool21 = icmp ne i8* %27, null, !dbg !6041
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !6043

if.then22:                                        ; preds = %cond.end
  %28 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6044
  %call23 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.482, i32 0, i32 0)), !dbg !6046
  %29 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6047
  %30 = load i8*, i8** %next_proto_neg, align 8, !dbg !6048
  %31 = load i32, i32* %next_proto_neg_len, align 4, !dbg !6049
  %call24 = call i32 @BIO_write(%struct.bio_st* %29, i8* %30, i32 %31), !dbg !6050
  %32 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6051
  %call25 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !6052
  br label %if.end26, !dbg !6053

if.end26:                                         ; preds = %if.then22, %cond.end
  call void @llvm.dbg.declare(metadata %struct.srtp_protection_profile_st** %srtp_profile, metadata !6054, metadata !431), !dbg !6062
  %33 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6063
  %call27 = call %struct.srtp_protection_profile_st* @SSL_get_selected_srtp_profile(%struct.ssl_st* %33), !dbg !6064
  store %struct.srtp_protection_profile_st* %call27, %struct.srtp_protection_profile_st** %srtp_profile, align 8, !dbg !6062
  %34 = load %struct.srtp_protection_profile_st*, %struct.srtp_protection_profile_st** %srtp_profile, align 8, !dbg !6065
  %tobool28 = icmp ne %struct.srtp_protection_profile_st* %34, null, !dbg !6065
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !6067

if.then29:                                        ; preds = %if.end26
  %35 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6068
  %36 = load %struct.srtp_protection_profile_st*, %struct.srtp_protection_profile_st** %srtp_profile, align 8, !dbg !6069
  %name = getelementptr inbounds %struct.srtp_protection_profile_st, %struct.srtp_protection_profile_st* %36, i32 0, i32 0, !dbg !6070
  %37 = load i8*, i8** %name, align 8, !dbg !6070
  %call30 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %35, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.483, i32 0, i32 0), i8* %37), !dbg !6071
  br label %if.end31, !dbg !6071

if.end31:                                         ; preds = %if.then29, %if.end26
  %38 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6072
  %call32 = call i32 @SSL_session_reused(%struct.ssl_st* %38), !dbg !6074
  %tobool33 = icmp ne i32 %call32, 0, !dbg !6074
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !6075

if.then34:                                        ; preds = %if.end31
  %39 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6076
  %call35 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %39, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.484, i32 0, i32 0)), !dbg !6077
  br label %if.end36, !dbg !6077

if.end36:                                         ; preds = %if.then34, %if.end31
  %40 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6078
  %41 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6079
  %call37 = call i64 @SSL_ctrl(%struct.ssl_st* %41, i32 76, i64 0, i8* null), !dbg !6080
  %tobool38 = icmp ne i64 %call37, 0, !dbg !6080
  %cond39 = select i1 %tobool38, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.486, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.487, i32 0, i32 0), !dbg !6080
  %call40 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %40, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.485, i32 0, i32 0), i8* %cond39), !dbg !6081
  %42 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6082
  %call41 = call i64 @SSL_get_options(%struct.ssl_st* %42), !dbg !6084
  %and = and i64 %call41, 1073741824, !dbg !6085
  %tobool42 = icmp ne i64 %and, 0, !dbg !6085
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !6086

if.then43:                                        ; preds = %if.end36
  %43 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6087
  %call44 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %43, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.488, i32 0, i32 0)), !dbg !6088
  br label %if.end45, !dbg !6088

if.end45:                                         ; preds = %if.then43, %if.end36
  %44 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6089
  %cmp46 = icmp ne i8* %44, null, !dbg !6091
  br i1 %cmp46, label %if.then47, label %if.end64, !dbg !6092

if.then47:                                        ; preds = %if.end45
  %45 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6093
  %call48 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %45, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.489, i32 0, i32 0)), !dbg !6095
  %46 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6096
  %47 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6097
  %call49 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.490, i32 0, i32 0), i8* %47), !dbg !6098
  %48 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6099
  %49 = load i32, i32* @keymatexportlen, align 4, !dbg !6100
  %call50 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %48, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.491, i32 0, i32 0), i32 %49), !dbg !6101
  %50 = load i32, i32* @keymatexportlen, align 4, !dbg !6102
  %call51 = call i8* @app_malloc(i32 %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.492, i32 0, i32 0)), !dbg !6103
  store i8* %call51, i8** %exportedkeymat, align 8, !dbg !6104
  %51 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6105
  %52 = load i8*, i8** %exportedkeymat, align 8, !dbg !6107
  %53 = load i32, i32* @keymatexportlen, align 4, !dbg !6108
  %conv = sext i32 %53 to i64, !dbg !6108
  %54 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6109
  %55 = load i8*, i8** @keymatexportlabel, align 8, !dbg !6110
  %call52 = call i64 @strlen(i8* %55) #8, !dbg !6111
  %call53 = call i32 @SSL_export_keying_material(%struct.ssl_st* %51, i8* %52, i64 %conv, i8* %54, i64 %call52, i8* null, i64 0, i32 0), !dbg !6112
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6112
  br i1 %tobool54, label %if.else, label %if.then55, !dbg !6113

if.then55:                                        ; preds = %if.then47
  %56 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6114
  %call56 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %56, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.493, i32 0, i32 0)), !dbg !6116
  br label %if.end63, !dbg !6117

if.else:                                          ; preds = %if.then47
  %57 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6118
  %call57 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %57, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.494, i32 0, i32 0)), !dbg !6120
  store i32 0, i32* %i, align 4, !dbg !6121
  br label %for.cond, !dbg !6123

for.cond:                                         ; preds = %for.inc, %if.else
  %58 = load i32, i32* %i, align 4, !dbg !6124
  %59 = load i32, i32* @keymatexportlen, align 4, !dbg !6127
  %cmp58 = icmp slt i32 %58, %59, !dbg !6128
  br i1 %cmp58, label %for.body, label %for.end, !dbg !6129

for.body:                                         ; preds = %for.cond
  %60 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6130
  %61 = load i32, i32* %i, align 4, !dbg !6131
  %idxprom = sext i32 %61 to i64, !dbg !6132
  %62 = load i8*, i8** %exportedkeymat, align 8, !dbg !6132
  %arrayidx = getelementptr inbounds i8, i8* %62, i64 %idxprom, !dbg !6132
  %63 = load i8, i8* %arrayidx, align 1, !dbg !6132
  %conv60 = zext i8 %63 to i32, !dbg !6132
  %call61 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.495, i32 0, i32 0), i32 %conv60), !dbg !6133
  br label %for.inc, !dbg !6133

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !6134
  %inc = add nsw i32 %64, 1, !dbg !6134
  store i32 %inc, i32* %i, align 4, !dbg !6134
  br label %for.cond, !dbg !6136, !llvm.loop !6137

for.end:                                          ; preds = %for.cond
  %65 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6139
  %call62 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %65, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.409, i32 0, i32 0)), !dbg !6140
  br label %if.end63

if.end63:                                         ; preds = %for.end, %if.then55
  %66 = load i8*, i8** %exportedkeymat, align 8, !dbg !6141
  call void @CRYPTO_free(i8* %66, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 2927), !dbg !6142
  br label %if.end64, !dbg !6143

if.end64:                                         ; preds = %if.end63, %if.end45
  %67 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6144
  %call65 = call i64 @BIO_ctrl(%struct.bio_st* %67, i32 11, i64 0, i8* null), !dbg !6145
  %conv66 = trunc i64 %call65 to i32, !dbg !6146
  ret void, !dbg !6147
}

declare i32 @fileno_stdin() #2

declare i32 @SSL_has_pending(%struct.ssl_st*) #2

declare i32 @SSL_waiting_for_async(%struct.ssl_st*) #2

declare i32 @SSL_is_dtls(%struct.ssl_st*) #2

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #2

declare i32 @raw_read_stdin(i8*, i32) #2

declare i32 @BIO_closesocket(i32) #2

; Function Attrs: nounwind uwtable
define internal void @close_accept_socket() #0 !dbg !6148 {
entry:
  %0 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6149
  %call = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.496, i32 0, i32 0)), !dbg !6150
  %1 = load i32, i32* @accept_socket, align 4, !dbg !6151
  %cmp = icmp sge i32 %1, 0, !dbg !6153
  br i1 %cmp, label %if.then, label %if.end, !dbg !6154

if.then:                                          ; preds = %entry
  %2 = load i32, i32* @accept_socket, align 4, !dbg !6155
  %call1 = call i32 @BIO_closesocket(i32 %2), !dbg !6157
  br label %if.end, !dbg !6158

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6159
}

declare i32 @SSL_renegotiate(%struct.ssl_st*) #2

declare i32 @SSL_do_handshake(%struct.ssl_st*) #2

declare i32 @printf(i8*, ...) #2

declare void @SSL_set_verify(%struct.ssl_st*, i32, i32 (i32, %struct.x509_store_ctx_st*)*) #2

declare i32 @SSL_key_update(%struct.ssl_st*, i32) #2

declare i32 @SSL_verify_client_post_handshake(%struct.ssl_st*) #2

declare %struct.bio_st* @SSL_get_wbio(%struct.ssl_st*) #2

declare i32 @SSL_write(%struct.ssl_st*, i8*, i32) #2

declare %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st*, i8*) #2

declare void @wait_for_async(%struct.ssl_st*) #2

; Function Attrs: nounwind uwtable
define internal i32 @init_ssl_connection(%struct.ssl_st* %con) #0 !dbg !6160 {
entry:
  %retval = alloca i32, align 4
  %con.addr = alloca %struct.ssl_st*, align 8
  %i = alloca i32, align 4
  %verify_err = alloca i64, align 8
  %retry = alloca i32, align 4
  %client = alloca %union.bio_addr_st*, align 8
  %wbio = alloca %struct.bio_st*, align 8
  %fd = alloca i32, align 4
  store %struct.ssl_st* %con, %struct.ssl_st** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con.addr, metadata !6163, metadata !431), !dbg !6164
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6165, metadata !431), !dbg !6166
  call void @llvm.dbg.declare(metadata i64* %verify_err, metadata !6167, metadata !431), !dbg !6168
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !6169, metadata !431), !dbg !6170
  store i32 0, i32* %retry, align 4, !dbg !6170
  %0 = load i32, i32* @dtlslisten, align 4, !dbg !6171
  %tobool = icmp ne i32 %0, 0, !dbg !6171
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6173

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @stateless, align 4, !dbg !6174
  %tobool1 = icmp ne i32 %1, 0, !dbg !6174
  br i1 %tobool1, label %if.then, label %if.else31, !dbg !6176

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata %union.bio_addr_st** %client, metadata !6177, metadata !431), !dbg !6182
  store %union.bio_addr_st* null, %union.bio_addr_st** %client, align 8, !dbg !6182
  %2 = load i32, i32* @dtlslisten, align 4, !dbg !6183
  %tobool2 = icmp ne i32 %2, 0, !dbg !6183
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !6185

if.then3:                                         ; preds = %if.then
  %call = call %union.bio_addr_st* @BIO_ADDR_new(), !dbg !6186
  store %union.bio_addr_st* %call, %union.bio_addr_st** %client, align 8, !dbg !6189
  %cmp = icmp eq %union.bio_addr_st* %call, null, !dbg !6190
  br i1 %cmp, label %if.then4, label %if.end, !dbg !6191

if.then4:                                         ; preds = %if.then3
  %3 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6192
  %call5 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.497, i32 0, i32 0)), !dbg !6194
  store i32 0, i32* %retval, align 4, !dbg !6195
  br label %return, !dbg !6195

if.end:                                           ; preds = %if.then3
  %4 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6196
  %5 = load %union.bio_addr_st*, %union.bio_addr_st** %client, align 8, !dbg !6197
  %call6 = call i32 @DTLSv1_listen(%struct.ssl_st* %4, %union.bio_addr_st* %5), !dbg !6198
  store i32 %call6, i32* %i, align 4, !dbg !6199
  br label %if.end8, !dbg !6200

if.else:                                          ; preds = %if.then
  %6 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6201
  %call7 = call i32 @SSL_stateless(%struct.ssl_st* %6), !dbg !6203
  store i32 %call7, i32* %i, align 4, !dbg !6204
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !6205
  %cmp9 = icmp sgt i32 %7, 0, !dbg !6207
  br i1 %cmp9, label %if.then10, label %if.else29, !dbg !6208

if.then10:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.bio_st** %wbio, metadata !6209, metadata !431), !dbg !6211
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !6212, metadata !431), !dbg !6213
  store i32 -1, i32* %fd, align 4, !dbg !6213
  %8 = load i32, i32* @dtlslisten, align 4, !dbg !6214
  %tobool11 = icmp ne i32 %8, 0, !dbg !6214
  br i1 %tobool11, label %if.then12, label %if.else26, !dbg !6216

if.then12:                                        ; preds = %if.then10
  %9 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6217
  %call13 = call %struct.bio_st* @SSL_get_wbio(%struct.ssl_st* %9), !dbg !6219
  store %struct.bio_st* %call13, %struct.bio_st** %wbio, align 8, !dbg !6220
  %10 = load %struct.bio_st*, %struct.bio_st** %wbio, align 8, !dbg !6221
  %tobool14 = icmp ne %struct.bio_st* %10, null, !dbg !6221
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !6223

if.then15:                                        ; preds = %if.then12
  %11 = load %struct.bio_st*, %struct.bio_st** %wbio, align 8, !dbg !6224
  %12 = bitcast i32* %fd to i8*, !dbg !6226
  %call16 = call i64 @BIO_ctrl(%struct.bio_st* %11, i32 105, i64 0, i8* %12), !dbg !6227
  br label %if.end17, !dbg !6228

if.end17:                                         ; preds = %if.then15, %if.then12
  %13 = load %struct.bio_st*, %struct.bio_st** %wbio, align 8, !dbg !6229
  %tobool18 = icmp ne %struct.bio_st* %13, null, !dbg !6229
  br i1 %tobool18, label %lor.lhs.false19, label %if.then22, !dbg !6231

lor.lhs.false19:                                  ; preds = %if.end17
  %14 = load i32, i32* %fd, align 4, !dbg !6232
  %15 = load %union.bio_addr_st*, %union.bio_addr_st** %client, align 8, !dbg !6234
  %call20 = call i32 @BIO_connect(i32 %14, %union.bio_addr_st* %15, i32 0), !dbg !6235
  %cmp21 = icmp eq i32 %call20, 0, !dbg !6236
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !6237

if.then22:                                        ; preds = %lor.lhs.false19, %if.end17
  %16 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6238
  %call23 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.498, i32 0, i32 0)), !dbg !6240
  %17 = load %union.bio_addr_st*, %union.bio_addr_st** %client, align 8, !dbg !6241
  call void @BIO_ADDR_free(%union.bio_addr_st* %17), !dbg !6242
  store i32 0, i32* %retval, align 4, !dbg !6243
  br label %return, !dbg !6243

if.end24:                                         ; preds = %lor.lhs.false19
  %18 = load %struct.bio_st*, %struct.bio_st** %wbio, align 8, !dbg !6244
  %19 = load %union.bio_addr_st*, %union.bio_addr_st** %client, align 8, !dbg !6245
  %20 = bitcast %union.bio_addr_st* %19 to i8*, !dbg !6246
  %call25 = call i64 @BIO_ctrl(%struct.bio_st* %18, i32 32, i64 0, i8* %20), !dbg !6247
  %conv = trunc i64 %call25 to i32, !dbg !6248
  %21 = load %union.bio_addr_st*, %union.bio_addr_st** %client, align 8, !dbg !6249
  call void @BIO_ADDR_free(%union.bio_addr_st* %21), !dbg !6250
  store i32 0, i32* @dtlslisten, align 4, !dbg !6251
  br label %if.end27, !dbg !6252

if.else26:                                        ; preds = %if.then10
  store i32 0, i32* @stateless, align 4, !dbg !6253
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.end24
  %22 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6255
  %call28 = call i32 @SSL_accept(%struct.ssl_st* %22), !dbg !6256
  store i32 %call28, i32* %i, align 4, !dbg !6257
  br label %if.end30, !dbg !6258

if.else29:                                        ; preds = %if.end8
  %23 = load %union.bio_addr_st*, %union.bio_addr_st** %client, align 8, !dbg !6259
  call void @BIO_ADDR_free(%union.bio_addr_st* %23), !dbg !6261
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end27
  br label %if.end63, !dbg !6262

if.else31:                                        ; preds = %lor.lhs.false
  br label %do.body, !dbg !6263, !llvm.loop !6265

do.body:                                          ; preds = %land.end62, %if.else31
  %24 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6266
  %call32 = call i32 @SSL_accept(%struct.ssl_st* %24), !dbg !6268
  store i32 %call32, i32* %i, align 4, !dbg !6269
  %25 = load i32, i32* %i, align 4, !dbg !6270
  %cmp33 = icmp sle i32 %25, 0, !dbg !6272
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !6273

if.then35:                                        ; preds = %do.body
  %26 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6274
  %27 = load i32, i32* %i, align 4, !dbg !6275
  %call36 = call i32 @is_retryable(%struct.ssl_st* %26, i32 %27), !dbg !6276
  store i32 %call36, i32* %retry, align 4, !dbg !6277
  br label %if.end37, !dbg !6278

if.end37:                                         ; preds = %if.then35, %do.body
  br label %while.cond, !dbg !6279

while.cond:                                       ; preds = %if.end56, %if.end37
  %28 = load i32, i32* %i, align 4, !dbg !6280
  %cmp38 = icmp sle i32 %28, 0, !dbg !6282
  br i1 %cmp38, label %land.rhs, label %land.end, !dbg !6283

land.rhs:                                         ; preds = %while.cond
  %29 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6284
  %30 = load i32, i32* %i, align 4, !dbg !6285
  %call40 = call i32 @SSL_get_error(%struct.ssl_st* %29, i32 %30), !dbg !6286
  %cmp41 = icmp eq i32 %call40, 4, !dbg !6287
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %31 = phi i1 [ false, %while.cond ], [ %cmp41, %land.rhs ]
  br i1 %31, label %while.body, label %while.end, !dbg !6288

while.body:                                       ; preds = %land.end
  %32 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6290
  %33 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !6292
  %call43 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.499, i32 0, i32 0), i8* %33), !dbg !6293
  %34 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !6294
  call void @SRP_user_pwd_free(%struct.SRP_user_pwd_st* %34), !dbg !6295
  %35 = load %struct.SRP_VBASE_st*, %struct.SRP_VBASE_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 1), align 8, !dbg !6296
  %36 = load i8*, i8** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 0), align 8, !dbg !6297
  %call44 = call %struct.SRP_user_pwd_st* @SRP_VBASE_get1_by_user(%struct.SRP_VBASE_st* %35, i8* %36), !dbg !6298
  store %struct.SRP_user_pwd_st* %call44, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !6299
  %37 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !6300
  %tobool45 = icmp ne %struct.SRP_user_pwd_st* %37, null, !dbg !6302
  br i1 %tobool45, label %if.then46, label %if.else48, !dbg !6303

if.then46:                                        ; preds = %while.body
  %38 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6304
  %39 = load %struct.SRP_user_pwd_st*, %struct.SRP_user_pwd_st** getelementptr inbounds (%struct.srpsrvparm_st, %struct.srpsrvparm_st* @srp_callback_parm, i32 0, i32 2), align 8, !dbg !6305
  %info = getelementptr inbounds %struct.SRP_user_pwd_st, %struct.SRP_user_pwd_st* %39, i32 0, i32 5, !dbg !6306
  %40 = load i8*, i8** %info, align 8, !dbg !6306
  %call47 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.468, i32 0, i32 0), i8* %40), !dbg !6307
  br label %if.end50, !dbg !6307

if.else48:                                        ; preds = %while.body
  %41 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6308
  %call49 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.469, i32 0, i32 0)), !dbg !6309
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.then46
  %42 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6310
  %call51 = call i32 @SSL_accept(%struct.ssl_st* %42), !dbg !6311
  store i32 %call51, i32* %i, align 4, !dbg !6312
  %43 = load i32, i32* %i, align 4, !dbg !6313
  %cmp52 = icmp sle i32 %43, 0, !dbg !6315
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !6316

if.then54:                                        ; preds = %if.end50
  %44 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6317
  %45 = load i32, i32* %i, align 4, !dbg !6318
  %call55 = call i32 @is_retryable(%struct.ssl_st* %44, i32 %45), !dbg !6319
  store i32 %call55, i32* %retry, align 4, !dbg !6320
  br label %if.end56, !dbg !6321

if.end56:                                         ; preds = %if.then54, %if.end50
  br label %while.cond, !dbg !6322, !llvm.loop !6324

while.end:                                        ; preds = %land.end
  br label %do.cond, !dbg !6325

do.cond:                                          ; preds = %while.end
  %46 = load i32, i32* %i, align 4, !dbg !6326
  %cmp57 = icmp slt i32 %46, 0, !dbg !6328
  br i1 %cmp57, label %land.rhs59, label %land.end62, !dbg !6329

land.rhs59:                                       ; preds = %do.cond
  %47 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6330
  %call60 = call i32 @SSL_waiting_for_async(%struct.ssl_st* %47), !dbg !6332
  %tobool61 = icmp ne i32 %call60, 0, !dbg !6333
  br label %land.end62

land.end62:                                       ; preds = %land.rhs59, %do.cond
  %48 = phi i1 [ false, %do.cond ], [ %tobool61, %land.rhs59 ]
  br i1 %48, label %do.body, label %do.end, !dbg !6334, !llvm.loop !6265

do.end:                                           ; preds = %land.end62
  br label %if.end63

if.end63:                                         ; preds = %do.end, %if.end30
  %49 = load i32, i32* %i, align 4, !dbg !6335
  %cmp64 = icmp sle i32 %49, 0, !dbg !6337
  br i1 %cmp64, label %if.then66, label %if.end89, !dbg !6338

if.then66:                                        ; preds = %if.end63
  %50 = load i32, i32* @dtlslisten, align 4, !dbg !6339
  %tobool67 = icmp ne i32 %50, 0, !dbg !6339
  br i1 %tobool67, label %land.lhs.true, label %lor.lhs.false68, !dbg !6342

lor.lhs.false68:                                  ; preds = %if.then66
  %51 = load i32, i32* @stateless, align 4, !dbg !6343
  %tobool69 = icmp ne i32 %51, 0, !dbg !6343
  br i1 %tobool69, label %land.lhs.true, label %lor.lhs.false72, !dbg !6345

land.lhs.true:                                    ; preds = %lor.lhs.false68, %if.then66
  %52 = load i32, i32* %i, align 4, !dbg !6346
  %cmp70 = icmp eq i32 %52, 0, !dbg !6348
  br i1 %cmp70, label %if.then78, label %lor.lhs.false72, !dbg !6349

lor.lhs.false72:                                  ; preds = %land.lhs.true, %lor.lhs.false68
  %53 = load i32, i32* @dtlslisten, align 4, !dbg !6350
  %tobool73 = icmp ne i32 %53, 0, !dbg !6350
  br i1 %tobool73, label %if.end80, label %land.lhs.true74, !dbg !6351

land.lhs.true74:                                  ; preds = %lor.lhs.false72
  %54 = load i32, i32* @stateless, align 4, !dbg !6352
  %tobool75 = icmp ne i32 %54, 0, !dbg !6352
  br i1 %tobool75, label %if.end80, label %land.lhs.true76, !dbg !6353

land.lhs.true76:                                  ; preds = %land.lhs.true74
  %55 = load i32, i32* %retry, align 4, !dbg !6354
  %tobool77 = icmp ne i32 %55, 0, !dbg !6354
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !6356

if.then78:                                        ; preds = %land.lhs.true76, %land.lhs.true
  %56 = load %struct.bio_st*, %struct.bio_st** @bio_s_out, align 8, !dbg !6358
  %call79 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.500, i32 0, i32 0)), !dbg !6360
  store i32 1, i32* %retval, align 4, !dbg !6361
  br label %return, !dbg !6361

if.end80:                                         ; preds = %land.lhs.true76, %land.lhs.true74, %lor.lhs.false72
  %57 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6362
  %call81 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.472, i32 0, i32 0)), !dbg !6363
  %58 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6364
  %call82 = call i64 @SSL_get_verify_result(%struct.ssl_st* %58), !dbg !6365
  store i64 %call82, i64* %verify_err, align 8, !dbg !6366
  %59 = load i64, i64* %verify_err, align 8, !dbg !6367
  %cmp83 = icmp ne i64 %59, 0, !dbg !6369
  br i1 %cmp83, label %if.then85, label %if.end88, !dbg !6370

if.then85:                                        ; preds = %if.end80
  %60 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6371
  %61 = load i64, i64* %verify_err, align 8, !dbg !6373
  %call86 = call i8* @X509_verify_cert_error_string(i64 %61), !dbg !6374
  %call87 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %60, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.501, i32 0, i32 0), i8* %call86), !dbg !6375
  br label %if.end88, !dbg !6376

if.end88:                                         ; preds = %if.then85, %if.end80
  %62 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6377
  call void @ERR_print_errors(%struct.bio_st* %62), !dbg !6378
  store i32 0, i32* %retval, align 4, !dbg !6379
  br label %return, !dbg !6379

if.end89:                                         ; preds = %if.end63
  %63 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6380
  call void @print_connection_info(%struct.ssl_st* %63), !dbg !6381
  store i32 1, i32* %retval, align 4, !dbg !6382
  br label %return, !dbg !6382

return:                                           ; preds = %if.end89, %if.end88, %if.then78, %if.then22, %if.then4
  %64 = load i32, i32* %retval, align 4, !dbg !6383
  ret i32 %64, !dbg !6383
}

declare i32 @SSL_read(%struct.ssl_st*, i8*, i32) #2

declare void @SSL_set_shutdown(%struct.ssl_st*, i32) #2

declare void @SSL_free(%struct.ssl_st*) #2

declare void @CRYPTO_clear_free(i8*, i64, i8*, i32) #2

declare void @print_ssl_summary(%struct.ssl_st*) #2

declare i32 @PEM_write_bio_SSL_SESSION(%struct.bio_st*, %struct.ssl_session_st*) #2

declare %struct.ssl_session_st* @SSL_get_session(%struct.ssl_st*) #2

declare %struct.x509_st* @SSL_get_peer_certificate(%struct.ssl_st*) #2

declare i32 @PEM_write_bio_X509(%struct.bio_st*, %struct.x509_st*) #2

declare i32 @dump_cert_text(%struct.bio_st*, %struct.x509_st*) #2

declare i8* @SSL_get_shared_ciphers(%struct.ssl_st*, i8*, i32) #2

declare i8* @SSL_CIPHER_get_name(%struct.ssl_cipher_st*) #2

declare %struct.ssl_cipher_st* @SSL_get_current_cipher(%struct.ssl_st*) #2

declare i32 @ssl_print_sigalgs(%struct.bio_st*, %struct.ssl_st*) #2

declare i32 @ssl_print_point_formats(%struct.bio_st*, %struct.ssl_st*) #2

declare i32 @ssl_print_groups(%struct.bio_st*, %struct.ssl_st*, i32) #2

declare void @print_ca_names(%struct.bio_st*, %struct.ssl_st*) #2

declare void @SSL_get0_next_proto_negotiated(%struct.ssl_st*, i8**, i32*) #2

declare %struct.srtp_protection_profile_st* @SSL_get_selected_srtp_profile(%struct.ssl_st*) #2

declare i32 @SSL_session_reused(%struct.ssl_st*) #2

declare i64 @SSL_get_options(%struct.ssl_st*) #2

declare i32 @SSL_export_keying_material(%struct.ssl_st*, i8*, i64, i8*, i64, i8*, i64, i32) #2

declare %union.bio_addr_st* @BIO_ADDR_new() #2

declare i32 @DTLSv1_listen(%struct.ssl_st*, %union.bio_addr_st*) #2

declare i32 @SSL_stateless(%struct.ssl_st*) #2

declare i32 @BIO_connect(i32, %union.bio_addr_st*, i32) #2

declare void @BIO_ADDR_free(%union.bio_addr_st*) #2

declare i32 @SSL_accept(%struct.ssl_st*) #2

; Function Attrs: nounwind uwtable
define internal i32 @is_retryable(%struct.ssl_st* %con, i32 %i) #0 !dbg !6384 {
entry:
  %con.addr = alloca %struct.ssl_st*, align 8
  %i.addr = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.ssl_st* %con, %struct.ssl_st** %con.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %con.addr, metadata !6385, metadata !431), !dbg !6386
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !6387, metadata !431), !dbg !6388
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6389, metadata !431), !dbg !6390
  %0 = load %struct.ssl_st*, %struct.ssl_st** %con.addr, align 8, !dbg !6391
  %1 = load i32, i32* %i.addr, align 4, !dbg !6392
  %call = call i32 @SSL_get_error(%struct.ssl_st* %0, i32 %1), !dbg !6393
  store i32 %call, i32* %err, align 4, !dbg !6390
  %2 = load i32, i32* %err, align 4, !dbg !6394
  %cmp = icmp ne i32 %2, 1, !dbg !6395
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !6396

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !6397
  %cmp1 = icmp ne i32 %3, 5, !dbg !6399
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !6400

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load i32, i32* %err, align 4, !dbg !6401
  %cmp2 = icmp ne i32 %4, 6, !dbg !6402
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp2, %land.rhs ]
  %land.ext = zext i1 %5 to i32, !dbg !6403
  ret i32 %land.ext, !dbg !6405
}

declare i64 @SSL_get_verify_result(%struct.ssl_st*) #2

declare i8* @X509_verify_cert_error_string(i64) #2

declare %struct.dh_st* @PEM_read_bio_DHparams(%struct.bio_st*, %struct.dh_st**, i32 (i8*, i32, i32, i8*)*, i8*) #2

declare %struct.bio_method_st* @BIO_f_buffer() #2

declare %struct.bio_method_st* @BIO_f_ssl() #2

declare i64 @BIO_int_ctrl(%struct.bio_st*, i32, i64, i32) #2

declare i32 @BIO_gets(%struct.bio_st*, i8*, i32) #2

declare i32 @BIO_test_flags(%struct.bio_st*, i32) #2

declare i32 @BIO_get_retry_reason(%struct.bio_st*) #2

declare i32 @sleep(i32) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

declare %struct.stack_st_SSL_CIPHER* @SSL_get_ciphers(%struct.ssl_st*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @sk_SSL_CIPHER_num(%struct.stack_st_SSL_CIPHER* %sk) #5 !dbg !6406 {
entry:
  %sk.addr = alloca %struct.stack_st_SSL_CIPHER*, align 8
  store %struct.stack_st_SSL_CIPHER* %sk, %struct.stack_st_SSL_CIPHER** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_SSL_CIPHER** %sk.addr, metadata !6411, metadata !431), !dbg !6412
  %0 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %sk.addr, align 8, !dbg !6413
  %1 = bitcast %struct.stack_st_SSL_CIPHER* %0 to %struct.stack_st*, !dbg !6414
  %call = call i32 @OPENSSL_sk_num(%struct.stack_st* %1), !dbg !6415
  ret i32 %call, !dbg !6416
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.ssl_cipher_st* @sk_SSL_CIPHER_value(%struct.stack_st_SSL_CIPHER* %sk, i32 %idx) #5 !dbg !6417 {
entry:
  %sk.addr = alloca %struct.stack_st_SSL_CIPHER*, align 8
  %idx.addr = alloca i32, align 4
  store %struct.stack_st_SSL_CIPHER* %sk, %struct.stack_st_SSL_CIPHER** %sk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stack_st_SSL_CIPHER** %sk.addr, metadata !6420, metadata !431), !dbg !6421
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !6422, metadata !431), !dbg !6423
  %0 = load %struct.stack_st_SSL_CIPHER*, %struct.stack_st_SSL_CIPHER** %sk.addr, align 8, !dbg !6424
  %1 = bitcast %struct.stack_st_SSL_CIPHER* %0 to %struct.stack_st*, !dbg !6425
  %2 = load i32, i32* %idx.addr, align 4, !dbg !6426
  %call = call i8* @OPENSSL_sk_value(%struct.stack_st* %1, i32 %2), !dbg !6427
  %3 = bitcast i8* %call to %struct.ssl_cipher_st*, !dbg !6428
  ret %struct.ssl_cipher_st* %3, !dbg !6429
}

declare i8* @SSL_CIPHER_get_version(%struct.ssl_cipher_st*) #2

declare i32 @SSL_SESSION_print(%struct.bio_st*, %struct.ssl_session_st*) #2

declare i32 @X509_print(%struct.bio_st*, %struct.x509_st*) #2

declare i32 @app_isdir(i8*) #2

declare i32 @BIO_read(%struct.bio_st*, i8*, i32) #2

declare void @BIO_free_all(%struct.bio_st*) #2

declare void @BUF_reverse(i8*, i8*, i64) #2

declare i32 @RAND_bytes(i8*, i32) #2

declare i32 @SSL_has_matching_session_id(%struct.ssl_st*, i8*, i32) #2

declare void @SSL_CTX_sess_set_new_cb(%struct.ssl_ctx_st*, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*) #2

; Function Attrs: nounwind uwtable
define internal i32 @add_session(%struct.ssl_st* %ssl, %struct.ssl_session_st* %session) #0 !dbg !6430 {
entry:
  %retval = alloca i32, align 4
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %session.addr = alloca %struct.ssl_session_st*, align 8
  %sess = alloca %struct.simple_ssl_session_st*, align 8
  %p = alloca i8*, align 8
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !6433, metadata !431), !dbg !6434
  store %struct.ssl_session_st* %session, %struct.ssl_session_st** %session.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st** %session.addr, metadata !6435, metadata !431), !dbg !6436
  call void @llvm.dbg.declare(metadata %struct.simple_ssl_session_st** %sess, metadata !6437, metadata !431), !dbg !6438
  %call = call i8* @app_malloc(i32 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.545, i32 0, i32 0)), !dbg !6439
  %0 = bitcast i8* %call to %struct.simple_ssl_session_st*, !dbg !6439
  store %struct.simple_ssl_session_st* %0, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6438
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6440, metadata !431), !dbg !6441
  %1 = load %struct.ssl_session_st*, %struct.ssl_session_st** %session.addr, align 8, !dbg !6442
  %2 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6443
  %idlen = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %2, i32 0, i32 1, !dbg !6444
  %call1 = call i8* @SSL_SESSION_get_id(%struct.ssl_session_st* %1, i32* %idlen), !dbg !6445
  %3 = load %struct.ssl_session_st*, %struct.ssl_session_st** %session.addr, align 8, !dbg !6446
  %call2 = call i32 @i2d_SSL_SESSION(%struct.ssl_session_st* %3, i8** null), !dbg !6447
  %4 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6448
  %derlen = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %4, i32 0, i32 3, !dbg !6449
  store i32 %call2, i32* %derlen, align 8, !dbg !6450
  %5 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6451
  %derlen3 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %5, i32 0, i32 3, !dbg !6453
  %6 = load i32, i32* %derlen3, align 8, !dbg !6453
  %cmp = icmp slt i32 %6, 0, !dbg !6454
  br i1 %cmp, label %if.then, label %if.end, !dbg !6455

if.then:                                          ; preds = %entry
  %7 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6456
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.546, i32 0, i32 0)), !dbg !6458
  %8 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6459
  %9 = bitcast %struct.simple_ssl_session_st* %8 to i8*, !dbg !6459
  call void @CRYPTO_free(i8* %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3546), !dbg !6460
  store i32 0, i32* %retval, align 4, !dbg !6461
  br label %return, !dbg !6461

if.end:                                           ; preds = %entry
  %10 = load %struct.ssl_session_st*, %struct.ssl_session_st** %session.addr, align 8, !dbg !6462
  %call5 = call i8* @SSL_SESSION_get_id(%struct.ssl_session_st* %10, i32* null), !dbg !6463
  %11 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6464
  %idlen6 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %11, i32 0, i32 1, !dbg !6465
  %12 = load i32, i32* %idlen6, align 8, !dbg !6465
  %conv = zext i32 %12 to i64, !dbg !6464
  %call7 = call i8* @CRYPTO_memdup(i8* %call5, i64 %conv, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3550), !dbg !6466
  %13 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6468
  %id = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %13, i32 0, i32 0, !dbg !6469
  store i8* %call7, i8** %id, align 8, !dbg !6470
  %14 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6471
  %derlen8 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %14, i32 0, i32 3, !dbg !6472
  %15 = load i32, i32* %derlen8, align 8, !dbg !6472
  %call9 = call i8* @app_malloc(i32 %15, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.547, i32 0, i32 0)), !dbg !6473
  %16 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6474
  %der = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %16, i32 0, i32 2, !dbg !6475
  store i8* %call9, i8** %der, align 8, !dbg !6476
  %17 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6477
  %id10 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %17, i32 0, i32 0, !dbg !6479
  %18 = load i8*, i8** %id10, align 8, !dbg !6479
  %tobool = icmp ne i8* %18, null, !dbg !6477
  br i1 %tobool, label %if.end15, label %if.then11, !dbg !6480

if.then11:                                        ; preds = %if.end
  %19 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6481
  %call12 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %19, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.548, i32 0, i32 0)), !dbg !6483
  %20 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6484
  %id13 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %20, i32 0, i32 0, !dbg !6485
  %21 = load i8*, i8** %id13, align 8, !dbg !6485
  call void @CRYPTO_free(i8* %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3554), !dbg !6486
  %22 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6487
  %der14 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %22, i32 0, i32 2, !dbg !6488
  %23 = load i8*, i8** %der14, align 8, !dbg !6488
  call void @CRYPTO_free(i8* %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3555), !dbg !6489
  %24 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6490
  %25 = bitcast %struct.simple_ssl_session_st* %24 to i8*, !dbg !6490
  call void @CRYPTO_free(i8* %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3556), !dbg !6491
  store i32 0, i32* %retval, align 4, !dbg !6492
  br label %return, !dbg !6492

if.end15:                                         ; preds = %if.end
  %26 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6493
  %der16 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %26, i32 0, i32 2, !dbg !6494
  %27 = load i8*, i8** %der16, align 8, !dbg !6494
  store i8* %27, i8** %p, align 8, !dbg !6495
  %28 = load %struct.ssl_session_st*, %struct.ssl_session_st** %session.addr, align 8, !dbg !6496
  %call17 = call i32 @i2d_SSL_SESSION(%struct.ssl_session_st* %28, i8** %p), !dbg !6498
  %29 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6499
  %derlen18 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %29, i32 0, i32 3, !dbg !6500
  %30 = load i32, i32* %derlen18, align 8, !dbg !6500
  %cmp19 = icmp ne i32 %call17, %30, !dbg !6501
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !6502

if.then21:                                        ; preds = %if.end15
  %31 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6503
  %call22 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %31, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.549, i32 0, i32 0)), !dbg !6505
  %32 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6506
  %id23 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %32, i32 0, i32 0, !dbg !6507
  %33 = load i8*, i8** %id23, align 8, !dbg !6507
  call void @CRYPTO_free(i8* %33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3564), !dbg !6508
  %34 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6509
  %der24 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %34, i32 0, i32 2, !dbg !6510
  %35 = load i8*, i8** %der24, align 8, !dbg !6510
  call void @CRYPTO_free(i8* %35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3565), !dbg !6511
  %36 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6512
  %37 = bitcast %struct.simple_ssl_session_st* %36 to i8*, !dbg !6512
  call void @CRYPTO_free(i8* %37, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3566), !dbg !6513
  store i32 0, i32* %retval, align 4, !dbg !6514
  br label %return, !dbg !6514

if.end25:                                         ; preds = %if.end15
  %38 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** @first, align 8, !dbg !6515
  %39 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6516
  %next = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %39, i32 0, i32 4, !dbg !6517
  store %struct.simple_ssl_session_st* %38, %struct.simple_ssl_session_st** %next, align 8, !dbg !6518
  %40 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6519
  store %struct.simple_ssl_session_st* %40, %struct.simple_ssl_session_st** @first, align 8, !dbg !6520
  %41 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6521
  %call26 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %41, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.550, i32 0, i32 0)), !dbg !6522
  store i32 0, i32* %retval, align 4, !dbg !6523
  br label %return, !dbg !6523

return:                                           ; preds = %if.end25, %if.then21, %if.then11, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !6524
  ret i32 %42, !dbg !6524
}

declare void @SSL_CTX_sess_set_get_cb(%struct.ssl_ctx_st*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*) #2

; Function Attrs: nounwind uwtable
define internal %struct.ssl_session_st* @get_session(%struct.ssl_st* %ssl, i8* %id, i32 %idlen, i32* %do_copy) #0 !dbg !6525 {
entry:
  %retval = alloca %struct.ssl_session_st*, align 8
  %ssl.addr = alloca %struct.ssl_st*, align 8
  %id.addr = alloca i8*, align 8
  %idlen.addr = alloca i32, align 4
  %do_copy.addr = alloca i32*, align 8
  %sess = alloca %struct.simple_ssl_session_st*, align 8
  %p = alloca i8*, align 8
  store %struct.ssl_st* %ssl, %struct.ssl_st** %ssl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_st** %ssl.addr, metadata !6528, metadata !431), !dbg !6529
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !6530, metadata !431), !dbg !6531
  store i32 %idlen, i32* %idlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idlen.addr, metadata !6532, metadata !431), !dbg !6533
  store i32* %do_copy, i32** %do_copy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %do_copy.addr, metadata !6534, metadata !431), !dbg !6535
  call void @llvm.dbg.declare(metadata %struct.simple_ssl_session_st** %sess, metadata !6536, metadata !431), !dbg !6537
  %0 = load i32*, i32** %do_copy.addr, align 8, !dbg !6538
  store i32 0, i32* %0, align 4, !dbg !6539
  %1 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** @first, align 8, !dbg !6540
  store %struct.simple_ssl_session_st* %1, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6542
  br label %for.cond, !dbg !6543

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6544
  %tobool = icmp ne %struct.simple_ssl_session_st* %2, null, !dbg !6547
  br i1 %tobool, label %for.body, label %for.end, !dbg !6547

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %idlen.addr, align 4, !dbg !6548
  %4 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6551
  %idlen1 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %4, i32 0, i32 1, !dbg !6552
  %5 = load i32, i32* %idlen1, align 8, !dbg !6552
  %cmp = icmp eq i32 %3, %5, !dbg !6553
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6554

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6555
  %id2 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %6, i32 0, i32 0, !dbg !6557
  %7 = load i8*, i8** %id2, align 8, !dbg !6557
  %8 = load i8*, i8** %id.addr, align 8, !dbg !6558
  %9 = load i32, i32* %idlen.addr, align 4, !dbg !6559
  %conv = sext i32 %9 to i64, !dbg !6559
  %call = call i32 @memcmp(i8* %7, i8* %8, i64 %conv) #8, !dbg !6560
  %tobool3 = icmp ne i32 %call, 0, !dbg !6560
  br i1 %tobool3, label %if.end, label %if.then, !dbg !6561

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6562, metadata !431), !dbg !6564
  %10 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6565
  %der = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %10, i32 0, i32 2, !dbg !6566
  %11 = load i8*, i8** %der, align 8, !dbg !6566
  store i8* %11, i8** %p, align 8, !dbg !6564
  %12 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6567
  %call4 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.551, i32 0, i32 0)), !dbg !6568
  %13 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6569
  %derlen = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %13, i32 0, i32 3, !dbg !6570
  %14 = load i32, i32* %derlen, align 8, !dbg !6570
  %conv5 = sext i32 %14 to i64, !dbg !6569
  %call6 = call %struct.ssl_session_st* @d2i_SSL_SESSION(%struct.ssl_session_st** null, i8** %p, i64 %conv5), !dbg !6571
  store %struct.ssl_session_st* %call6, %struct.ssl_session_st** %retval, align 8, !dbg !6572
  br label %return, !dbg !6572

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6573

for.inc:                                          ; preds = %if.end
  %15 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6574
  %next = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %15, i32 0, i32 4, !dbg !6576
  %16 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %next, align 8, !dbg !6576
  store %struct.simple_ssl_session_st* %16, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6577
  br label %for.cond, !dbg !6578, !llvm.loop !6579

for.end:                                          ; preds = %for.cond
  %17 = load %struct.bio_st*, %struct.bio_st** @bio_err, align 8, !dbg !6581
  %call7 = call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.552, i32 0, i32 0)), !dbg !6582
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %retval, align 8, !dbg !6583
  br label %return, !dbg !6583

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.ssl_session_st*, %struct.ssl_session_st** %retval, align 8, !dbg !6584
  ret %struct.ssl_session_st* %18, !dbg !6584
}

declare void @SSL_CTX_sess_set_remove_cb(%struct.ssl_ctx_st*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*) #2

; Function Attrs: nounwind uwtable
define internal void @del_session(%struct.ssl_ctx_st* %sctx, %struct.ssl_session_st* %session) #0 !dbg !6585 {
entry:
  %sctx.addr = alloca %struct.ssl_ctx_st*, align 8
  %session.addr = alloca %struct.ssl_session_st*, align 8
  %sess = alloca %struct.simple_ssl_session_st*, align 8
  %prev = alloca %struct.simple_ssl_session_st*, align 8
  %id = alloca i8*, align 8
  %idlen = alloca i32, align 4
  store %struct.ssl_ctx_st* %sctx, %struct.ssl_ctx_st** %sctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_ctx_st** %sctx.addr, metadata !6588, metadata !431), !dbg !6589
  store %struct.ssl_session_st* %session, %struct.ssl_session_st** %session.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ssl_session_st** %session.addr, metadata !6590, metadata !431), !dbg !6591
  call void @llvm.dbg.declare(metadata %struct.simple_ssl_session_st** %sess, metadata !6592, metadata !431), !dbg !6593
  call void @llvm.dbg.declare(metadata %struct.simple_ssl_session_st** %prev, metadata !6594, metadata !431), !dbg !6595
  store %struct.simple_ssl_session_st* null, %struct.simple_ssl_session_st** %prev, align 8, !dbg !6595
  call void @llvm.dbg.declare(metadata i8** %id, metadata !6596, metadata !431), !dbg !6597
  call void @llvm.dbg.declare(metadata i32* %idlen, metadata !6598, metadata !431), !dbg !6599
  %0 = load %struct.ssl_session_st*, %struct.ssl_session_st** %session.addr, align 8, !dbg !6600
  %call = call i8* @SSL_SESSION_get_id(%struct.ssl_session_st* %0, i32* %idlen), !dbg !6601
  store i8* %call, i8** %id, align 8, !dbg !6602
  %1 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** @first, align 8, !dbg !6603
  store %struct.simple_ssl_session_st* %1, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6605
  br label %for.cond, !dbg !6606

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6607
  %tobool = icmp ne %struct.simple_ssl_session_st* %2, null, !dbg !6610
  br i1 %tobool, label %for.body, label %for.end, !dbg !6610

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %idlen, align 4, !dbg !6611
  %4 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6614
  %idlen1 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %4, i32 0, i32 1, !dbg !6615
  %5 = load i32, i32* %idlen1, align 8, !dbg !6615
  %cmp = icmp eq i32 %3, %5, !dbg !6616
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !6617

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6618
  %id2 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %6, i32 0, i32 0, !dbg !6620
  %7 = load i8*, i8** %id2, align 8, !dbg !6620
  %8 = load i8*, i8** %id, align 8, !dbg !6621
  %9 = load i32, i32* %idlen, align 4, !dbg !6622
  %conv = zext i32 %9 to i64, !dbg !6622
  %call3 = call i32 @memcmp(i8* %7, i8* %8, i64 %conv) #8, !dbg !6623
  %tobool4 = icmp ne i32 %call3, 0, !dbg !6623
  br i1 %tobool4, label %if.end10, label %if.then, !dbg !6624

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %prev, align 8, !dbg !6625
  %tobool5 = icmp ne %struct.simple_ssl_session_st* %10, null, !dbg !6625
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !6628

if.then6:                                         ; preds = %if.then
  %11 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6629
  %next = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %11, i32 0, i32 4, !dbg !6630
  %12 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %next, align 8, !dbg !6630
  %13 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %prev, align 8, !dbg !6631
  %next7 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %13, i32 0, i32 4, !dbg !6632
  store %struct.simple_ssl_session_st* %12, %struct.simple_ssl_session_st** %next7, align 8, !dbg !6633
  br label %if.end, !dbg !6631

if.else:                                          ; preds = %if.then
  %14 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6634
  %next8 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %14, i32 0, i32 4, !dbg !6635
  %15 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %next8, align 8, !dbg !6635
  store %struct.simple_ssl_session_st* %15, %struct.simple_ssl_session_st** @first, align 8, !dbg !6636
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %16 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6637
  %id9 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %16, i32 0, i32 0, !dbg !6638
  %17 = load i8*, i8** %id9, align 8, !dbg !6638
  call void @CRYPTO_free(i8* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3604), !dbg !6639
  %18 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6640
  %der = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %18, i32 0, i32 2, !dbg !6641
  %19 = load i8*, i8** %der, align 8, !dbg !6641
  call void @CRYPTO_free(i8* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3605), !dbg !6642
  %20 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6643
  %21 = bitcast %struct.simple_ssl_session_st* %20 to i8*, !dbg !6643
  call void @CRYPTO_free(i8* %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.353, i32 0, i32 0), i32 3606), !dbg !6644
  br label %for.end, !dbg !6645

if.end10:                                         ; preds = %land.lhs.true, %for.body
  %22 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6646
  store %struct.simple_ssl_session_st* %22, %struct.simple_ssl_session_st** %prev, align 8, !dbg !6647
  br label %for.inc, !dbg !6648

for.inc:                                          ; preds = %if.end10
  %23 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6649
  %next11 = getelementptr inbounds %struct.simple_ssl_session_st, %struct.simple_ssl_session_st* %23, i32 0, i32 4, !dbg !6651
  %24 = load %struct.simple_ssl_session_st*, %struct.simple_ssl_session_st** %next11, align 8, !dbg !6651
  store %struct.simple_ssl_session_st* %24, %struct.simple_ssl_session_st** %sess, align 8, !dbg !6652
  br label %for.cond, !dbg !6653, !llvm.loop !6654

for.end:                                          ; preds = %if.end, %for.cond
  ret void, !dbg !6656
}

declare i8* @SSL_SESSION_get_id(%struct.ssl_session_st*, i32*) #2

declare i32 @i2d_SSL_SESSION(%struct.ssl_session_st*, i8**) #2

declare i8* @CRYPTO_memdup(i8*, i64, i8*, i32) #2

declare %struct.ssl_session_st* @d2i_SSL_SESSION(%struct.ssl_session_st**, i8**, i64) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!424, !425}
!llvm.ident = !{!426}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.9.0 (tags/RELEASE_390/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !235, globals: !339)
!1 = !DIFile(filename: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl/[inter]apps--openssl-bin-s_server.o.i", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!2 = !{!3, !15, !209, !214, !229}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !4, line: 24, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/socket_type.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14}
!6 = !DIEnumerator(name: "SOCK_STREAM", value: 1)
!7 = !DIEnumerator(name: "SOCK_DGRAM", value: 2)
!8 = !DIEnumerator(name: "SOCK_RAW", value: 3)
!9 = !DIEnumerator(name: "SOCK_RDM", value: 4)
!10 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5)
!11 = !DIEnumerator(name: "SOCK_DCCP", value: 6)
!12 = !DIEnumerator(name: "SOCK_PACKET", value: 10)
!13 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288)
!14 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "OPTION_choice", file: !16, line: 729, size: 32, align: 32, elements: !17)
!16 = !DIFile(filename: "apps/s_server.c", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208}
!18 = !DIEnumerator(name: "OPT_ERR", value: -1)
!19 = !DIEnumerator(name: "OPT_EOF", value: 0)
!20 = !DIEnumerator(name: "OPT_HELP", value: 1)
!21 = !DIEnumerator(name: "OPT_ENGINE", value: 2)
!22 = !DIEnumerator(name: "OPT_4", value: 3)
!23 = !DIEnumerator(name: "OPT_6", value: 4)
!24 = !DIEnumerator(name: "OPT_ACCEPT", value: 5)
!25 = !DIEnumerator(name: "OPT_PORT", value: 6)
!26 = !DIEnumerator(name: "OPT_UNIX", value: 7)
!27 = !DIEnumerator(name: "OPT_UNLINK", value: 8)
!28 = !DIEnumerator(name: "OPT_NACCEPT", value: 9)
!29 = !DIEnumerator(name: "OPT_VERIFY", value: 10)
!30 = !DIEnumerator(name: "OPT_NAMEOPT", value: 11)
!31 = !DIEnumerator(name: "OPT_UPPER_V_VERIFY", value: 12)
!32 = !DIEnumerator(name: "OPT_CONTEXT", value: 13)
!33 = !DIEnumerator(name: "OPT_CERT", value: 14)
!34 = !DIEnumerator(name: "OPT_CRL", value: 15)
!35 = !DIEnumerator(name: "OPT_CRL_DOWNLOAD", value: 16)
!36 = !DIEnumerator(name: "OPT_SERVERINFO", value: 17)
!37 = !DIEnumerator(name: "OPT_CERTFORM", value: 18)
!38 = !DIEnumerator(name: "OPT_KEY", value: 19)
!39 = !DIEnumerator(name: "OPT_KEYFORM", value: 20)
!40 = !DIEnumerator(name: "OPT_PASS", value: 21)
!41 = !DIEnumerator(name: "OPT_CERT_CHAIN", value: 22)
!42 = !DIEnumerator(name: "OPT_DHPARAM", value: 23)
!43 = !DIEnumerator(name: "OPT_DCERTFORM", value: 24)
!44 = !DIEnumerator(name: "OPT_DCERT", value: 25)
!45 = !DIEnumerator(name: "OPT_DKEYFORM", value: 26)
!46 = !DIEnumerator(name: "OPT_DPASS", value: 27)
!47 = !DIEnumerator(name: "OPT_DKEY", value: 28)
!48 = !DIEnumerator(name: "OPT_DCERT_CHAIN", value: 29)
!49 = !DIEnumerator(name: "OPT_NOCERT", value: 30)
!50 = !DIEnumerator(name: "OPT_CAPATH", value: 31)
!51 = !DIEnumerator(name: "OPT_NOCAPATH", value: 32)
!52 = !DIEnumerator(name: "OPT_CHAINCAPATH", value: 33)
!53 = !DIEnumerator(name: "OPT_VERIFYCAPATH", value: 34)
!54 = !DIEnumerator(name: "OPT_NO_CACHE", value: 35)
!55 = !DIEnumerator(name: "OPT_EXT_CACHE", value: 36)
!56 = !DIEnumerator(name: "OPT_CRLFORM", value: 37)
!57 = !DIEnumerator(name: "OPT_VERIFY_RET_ERROR", value: 38)
!58 = !DIEnumerator(name: "OPT_VERIFY_QUIET", value: 39)
!59 = !DIEnumerator(name: "OPT_BUILD_CHAIN", value: 40)
!60 = !DIEnumerator(name: "OPT_CAFILE", value: 41)
!61 = !DIEnumerator(name: "OPT_NOCAFILE", value: 42)
!62 = !DIEnumerator(name: "OPT_CHAINCAFILE", value: 43)
!63 = !DIEnumerator(name: "OPT_VERIFYCAFILE", value: 44)
!64 = !DIEnumerator(name: "OPT_NBIO", value: 45)
!65 = !DIEnumerator(name: "OPT_NBIO_TEST", value: 46)
!66 = !DIEnumerator(name: "OPT_IGN_EOF", value: 47)
!67 = !DIEnumerator(name: "OPT_NO_IGN_EOF", value: 48)
!68 = !DIEnumerator(name: "OPT_DEBUG", value: 49)
!69 = !DIEnumerator(name: "OPT_TLSEXTDEBUG", value: 50)
!70 = !DIEnumerator(name: "OPT_STATUS", value: 51)
!71 = !DIEnumerator(name: "OPT_STATUS_VERBOSE", value: 52)
!72 = !DIEnumerator(name: "OPT_STATUS_TIMEOUT", value: 53)
!73 = !DIEnumerator(name: "OPT_STATUS_URL", value: 54)
!74 = !DIEnumerator(name: "OPT_STATUS_FILE", value: 55)
!75 = !DIEnumerator(name: "OPT_MSG", value: 56)
!76 = !DIEnumerator(name: "OPT_MSGFILE", value: 57)
!77 = !DIEnumerator(name: "OPT_TRACE", value: 58)
!78 = !DIEnumerator(name: "OPT_SECURITY_DEBUG", value: 59)
!79 = !DIEnumerator(name: "OPT_SECURITY_DEBUG_VERBOSE", value: 60)
!80 = !DIEnumerator(name: "OPT_STATE", value: 61)
!81 = !DIEnumerator(name: "OPT_CRLF", value: 62)
!82 = !DIEnumerator(name: "OPT_QUIET", value: 63)
!83 = !DIEnumerator(name: "OPT_BRIEF", value: 64)
!84 = !DIEnumerator(name: "OPT_NO_DHE", value: 65)
!85 = !DIEnumerator(name: "OPT_NO_RESUME_EPHEMERAL", value: 66)
!86 = !DIEnumerator(name: "OPT_PSK_IDENTITY", value: 67)
!87 = !DIEnumerator(name: "OPT_PSK_HINT", value: 68)
!88 = !DIEnumerator(name: "OPT_PSK", value: 69)
!89 = !DIEnumerator(name: "OPT_PSK_SESS", value: 70)
!90 = !DIEnumerator(name: "OPT_SRPVFILE", value: 71)
!91 = !DIEnumerator(name: "OPT_SRPUSERSEED", value: 72)
!92 = !DIEnumerator(name: "OPT_REV", value: 73)
!93 = !DIEnumerator(name: "OPT_WWW", value: 74)
!94 = !DIEnumerator(name: "OPT_UPPER_WWW", value: 75)
!95 = !DIEnumerator(name: "OPT_HTTP", value: 76)
!96 = !DIEnumerator(name: "OPT_ASYNC", value: 77)
!97 = !DIEnumerator(name: "OPT_SSL_CONFIG", value: 78)
!98 = !DIEnumerator(name: "OPT_MAX_SEND_FRAG", value: 79)
!99 = !DIEnumerator(name: "OPT_SPLIT_SEND_FRAG", value: 80)
!100 = !DIEnumerator(name: "OPT_MAX_PIPELINES", value: 81)
!101 = !DIEnumerator(name: "OPT_READ_BUF", value: 82)
!102 = !DIEnumerator(name: "OPT_SSL3", value: 83)
!103 = !DIEnumerator(name: "OPT_TLS1_3", value: 84)
!104 = !DIEnumerator(name: "OPT_TLS1_2", value: 85)
!105 = !DIEnumerator(name: "OPT_TLS1_1", value: 86)
!106 = !DIEnumerator(name: "OPT_TLS1", value: 87)
!107 = !DIEnumerator(name: "OPT_DTLS", value: 88)
!108 = !DIEnumerator(name: "OPT_DTLS1", value: 89)
!109 = !DIEnumerator(name: "OPT_DTLS1_2", value: 90)
!110 = !DIEnumerator(name: "OPT_SCTP", value: 91)
!111 = !DIEnumerator(name: "OPT_TIMEOUT", value: 92)
!112 = !DIEnumerator(name: "OPT_MTU", value: 93)
!113 = !DIEnumerator(name: "OPT_LISTEN", value: 94)
!114 = !DIEnumerator(name: "OPT_STATELESS", value: 95)
!115 = !DIEnumerator(name: "OPT_ID_PREFIX", value: 96)
!116 = !DIEnumerator(name: "OPT_SERVERNAME", value: 97)
!117 = !DIEnumerator(name: "OPT_SERVERNAME_FATAL", value: 98)
!118 = !DIEnumerator(name: "OPT_CERT2", value: 99)
!119 = !DIEnumerator(name: "OPT_KEY2", value: 100)
!120 = !DIEnumerator(name: "OPT_NEXTPROTONEG", value: 101)
!121 = !DIEnumerator(name: "OPT_ALPN", value: 102)
!122 = !DIEnumerator(name: "OPT_SRTP_PROFILES", value: 103)
!123 = !DIEnumerator(name: "OPT_KEYMATEXPORT", value: 104)
!124 = !DIEnumerator(name: "OPT_KEYMATEXPORTLEN", value: 105)
!125 = !DIEnumerator(name: "OPT_KEYLOG_FILE", value: 106)
!126 = !DIEnumerator(name: "OPT_MAX_EARLY", value: 107)
!127 = !DIEnumerator(name: "OPT_RECV_MAX_EARLY", value: 108)
!128 = !DIEnumerator(name: "OPT_EARLY_DATA", value: 109)
!129 = !DIEnumerator(name: "OPT_S_NUM_TICKETS", value: 110)
!130 = !DIEnumerator(name: "OPT_ANTI_REPLAY", value: 111)
!131 = !DIEnumerator(name: "OPT_NO_ANTI_REPLAY", value: 112)
!132 = !DIEnumerator(name: "OPT_SCTP_LABEL_BUG", value: 113)
!133 = !DIEnumerator(name: "OPT_R__FIRST", value: 1500)
!134 = !DIEnumerator(name: "OPT_R_RAND", value: 1501)
!135 = !DIEnumerator(name: "OPT_R_WRITERAND", value: 1502)
!136 = !DIEnumerator(name: "OPT_R__LAST", value: 1503)
!137 = !DIEnumerator(name: "OPT_S__FIRST", value: 3000)
!138 = !DIEnumerator(name: "OPT_S_NOSSL3", value: 3001)
!139 = !DIEnumerator(name: "OPT_S_NOTLS1", value: 3002)
!140 = !DIEnumerator(name: "OPT_S_NOTLS1_1", value: 3003)
!141 = !DIEnumerator(name: "OPT_S_NOTLS1_2", value: 3004)
!142 = !DIEnumerator(name: "OPT_S_NOTLS1_3", value: 3005)
!143 = !DIEnumerator(name: "OPT_S_BUGS", value: 3006)
!144 = !DIEnumerator(name: "OPT_S_NO_COMP", value: 3007)
!145 = !DIEnumerator(name: "OPT_S_NOTICKET", value: 3008)
!146 = !DIEnumerator(name: "OPT_S_SERVERPREF", value: 3009)
!147 = !DIEnumerator(name: "OPT_S_LEGACYRENEG", value: 3010)
!148 = !DIEnumerator(name: "OPT_S_LEGACYCONN", value: 3011)
!149 = !DIEnumerator(name: "OPT_S_ONRESUMP", value: 3012)
!150 = !DIEnumerator(name: "OPT_S_NOLEGACYCONN", value: 3013)
!151 = !DIEnumerator(name: "OPT_S_ALLOW_NO_DHE_KEX", value: 3014)
!152 = !DIEnumerator(name: "OPT_S_PRIORITIZE_CHACHA", value: 3015)
!153 = !DIEnumerator(name: "OPT_S_STRICT", value: 3016)
!154 = !DIEnumerator(name: "OPT_S_SIGALGS", value: 3017)
!155 = !DIEnumerator(name: "OPT_S_CLIENTSIGALGS", value: 3018)
!156 = !DIEnumerator(name: "OPT_S_GROUPS", value: 3019)
!157 = !DIEnumerator(name: "OPT_S_CURVES", value: 3020)
!158 = !DIEnumerator(name: "OPT_S_NAMEDCURVE", value: 3021)
!159 = !DIEnumerator(name: "OPT_S_CIPHER", value: 3022)
!160 = !DIEnumerator(name: "OPT_S_CIPHERSUITES", value: 3023)
!161 = !DIEnumerator(name: "OPT_S_RECORD_PADDING", value: 3024)
!162 = !DIEnumerator(name: "OPT_S_DEBUGBROKE", value: 3025)
!163 = !DIEnumerator(name: "OPT_S_COMP", value: 3026)
!164 = !DIEnumerator(name: "OPT_S_MINPROTO", value: 3027)
!165 = !DIEnumerator(name: "OPT_S_MAXPROTO", value: 3028)
!166 = !DIEnumerator(name: "OPT_S_NO_RENEGOTIATION", value: 3029)
!167 = !DIEnumerator(name: "OPT_S_NO_MIDDLEBOX", value: 3030)
!168 = !DIEnumerator(name: "OPT_S__LAST", value: 3031)
!169 = !DIEnumerator(name: "OPT_V__FIRST", value: 2000)
!170 = !DIEnumerator(name: "OPT_V_POLICY", value: 2001)
!171 = !DIEnumerator(name: "OPT_V_PURPOSE", value: 2002)
!172 = !DIEnumerator(name: "OPT_V_VERIFY_NAME", value: 2003)
!173 = !DIEnumerator(name: "OPT_V_VERIFY_DEPTH", value: 2004)
!174 = !DIEnumerator(name: "OPT_V_ATTIME", value: 2005)
!175 = !DIEnumerator(name: "OPT_V_VERIFY_HOSTNAME", value: 2006)
!176 = !DIEnumerator(name: "OPT_V_VERIFY_EMAIL", value: 2007)
!177 = !DIEnumerator(name: "OPT_V_VERIFY_IP", value: 2008)
!178 = !DIEnumerator(name: "OPT_V_IGNORE_CRITICAL", value: 2009)
!179 = !DIEnumerator(name: "OPT_V_ISSUER_CHECKS", value: 2010)
!180 = !DIEnumerator(name: "OPT_V_CRL_CHECK", value: 2011)
!181 = !DIEnumerator(name: "OPT_V_CRL_CHECK_ALL", value: 2012)
!182 = !DIEnumerator(name: "OPT_V_POLICY_CHECK", value: 2013)
!183 = !DIEnumerator(name: "OPT_V_EXPLICIT_POLICY", value: 2014)
!184 = !DIEnumerator(name: "OPT_V_INHIBIT_ANY", value: 2015)
!185 = !DIEnumerator(name: "OPT_V_INHIBIT_MAP", value: 2016)
!186 = !DIEnumerator(name: "OPT_V_X509_STRICT", value: 2017)
!187 = !DIEnumerator(name: "OPT_V_EXTENDED_CRL", value: 2018)
!188 = !DIEnumerator(name: "OPT_V_USE_DELTAS", value: 2019)
!189 = !DIEnumerator(name: "OPT_V_POLICY_PRINT", value: 2020)
!190 = !DIEnumerator(name: "OPT_V_CHECK_SS_SIG", value: 2021)
!191 = !DIEnumerator(name: "OPT_V_TRUSTED_FIRST", value: 2022)
!192 = !DIEnumerator(name: "OPT_V_SUITEB_128_ONLY", value: 2023)
!193 = !DIEnumerator(name: "OPT_V_SUITEB_128", value: 2024)
!194 = !DIEnumerator(name: "OPT_V_SUITEB_192", value: 2025)
!195 = !DIEnumerator(name: "OPT_V_PARTIAL_CHAIN", value: 2026)
!196 = !DIEnumerator(name: "OPT_V_NO_ALT_CHAINS", value: 2027)
!197 = !DIEnumerator(name: "OPT_V_NO_CHECK_TIME", value: 2028)
!198 = !DIEnumerator(name: "OPT_V_VERIFY_AUTH_LEVEL", value: 2029)
!199 = !DIEnumerator(name: "OPT_V_ALLOW_PROXY_CERTS", value: 2030)
!200 = !DIEnumerator(name: "OPT_V__LAST", value: 2031)
!201 = !DIEnumerator(name: "OPT_X__FIRST", value: 1000)
!202 = !DIEnumerator(name: "OPT_X_KEY", value: 1001)
!203 = !DIEnumerator(name: "OPT_X_CERT", value: 1002)
!204 = !DIEnumerator(name: "OPT_X_CHAIN", value: 1003)
!205 = !DIEnumerator(name: "OPT_X_CHAIN_BUILD", value: 1004)
!206 = !DIEnumerator(name: "OPT_X_CERTFORM", value: 1005)
!207 = !DIEnumerator(name: "OPT_X_KEYFORM", value: 1006)
!208 = !DIEnumerator(name: "OPT_X__LAST", value: 1007)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BIO_hostserv_priorities", file: !210, line: 676, size: 32, align: 32, elements: !211)
!210 = !DIFile(filename: "include/openssl/bio.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!211 = !{!212, !213}
!212 = !DIEnumerator(name: "BIO_PARSE_PRIO_HOST", value: 0)
!213 = !DIEnumerator(name: "BIO_PARSE_PRIO_SERV", value: 1)
!214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !215, line: 46, size: 32, align: 32, elements: !216)
!215 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!216 = !{!217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228}
!217 = !DIEnumerator(name: "_ISupper", value: 256)
!218 = !DIEnumerator(name: "_ISlower", value: 512)
!219 = !DIEnumerator(name: "_ISalpha", value: 1024)
!220 = !DIEnumerator(name: "_ISdigit", value: 2048)
!221 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!222 = !DIEnumerator(name: "_ISspace", value: 8192)
!223 = !DIEnumerator(name: "_ISprint", value: 16384)
!224 = !DIEnumerator(name: "_ISgraph", value: 32768)
!225 = !DIEnumerator(name: "_ISblank", value: 1)
!226 = !DIEnumerator(name: "_IScntrl", value: 2)
!227 = !DIEnumerator(name: "_ISpunct", value: 4)
!228 = !DIEnumerator(name: "_ISalnum", value: 8)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !230, line: 47, size: 32, align: 32, elements: !231)
!230 = !DIFile(filename: "include/openssl/x509_vfy.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!231 = !{!232, !233, !234}
!232 = !DIEnumerator(name: "X509_LU_NONE", value: 0)
!233 = !DIEnumerator(name: "X509_LU_X509", value: 1)
!234 = !DIEnumerator(name: "X509_LU_CRL", value: 2)
!235 = !{!236, !237, !239, !238, !240, !241, !243, !246, !249, !253, !255, !258, !259, !270, !306, !309, !312, !317, !322, !324, !327, !331, !332, !334}
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64, align: 64)
!238 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!239 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!240 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 64, align: 64)
!242 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64, align: 64)
!244 = !DISubroutineType(types: !245)
!245 = !{null}
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64, align: 64)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_OPENSSL_STRING", file: !248, line: 159, flags: DIFlagFwdDecl)
!248 = !DIFile(filename: "include/openssl/safestack.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64, align: 64)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPENSSL_STACK", file: !251, line: 17, baseType: !252)
!251 = !DIFile(filename: "include/openssl/stack.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!252 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st", file: !251, line: 17, flags: DIFlagFwdDecl)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64, align: 64)
!254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_CRL", file: !257, line: 228, flags: DIFlagFwdDecl)
!257 = !DIFile(filename: "include/openssl/x509.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64, align: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64, align: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "tlsextctx", file: !16, line: 457, baseType: !261)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsextctx_st", file: !16, line: 453, size: 192, align: 64, elements: !262)
!262 = !{!263, !264, !269}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "servername", scope: !261, file: !16, line: 454, baseType: !241, size: 64, align: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "biodebug", scope: !261, file: !16, line: 455, baseType: !265, size: 64, align: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64, align: 64)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIO", file: !267, line: 79, baseType: !268)
!267 = !DIFile(filename: "include/openssl/ossl_typ.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_st", file: !267, line: 79, flags: DIFlagFwdDecl)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "extension_error", scope: !261, file: !16, line: 456, baseType: !239, size: 32, align: 32, offset: 128)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64, align: 64)
!271 = !DIDerivedType(tag: DW_TAG_typedef, name: "srpsrvparm", file: !16, line: 241, baseType: !272)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srpsrvparm_st", file: !16, line: 237, size: 192, align: 64, elements: !273)
!273 = !{!274, !275, !294}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "login", scope: !272, file: !16, line: 238, baseType: !241, size: 64, align: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "vb", scope: !272, file: !16, line: 239, baseType: !276, size: 64, align: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64, align: 64)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRP_VBASE", file: !278, line: 66, baseType: !279)
!278 = !DIFile(filename: "include/openssl/srp.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SRP_VBASE_st", file: !278, line: 59, size: 320, align: 64, elements: !280)
!280 = !{!281, !284, !287, !288, !293}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "users_pwd", scope: !279, file: !278, line: 60, baseType: !282, size: 64, align: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64, align: 64)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SRP_user_pwd", file: !278, line: 57, flags: DIFlagFwdDecl)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "gN_cache", scope: !279, file: !278, line: 61, baseType: !285, size: 64, align: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64, align: 64)
!286 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SRP_gN_cache", file: !278, line: 36, flags: DIFlagFwdDecl)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "seed_key", scope: !279, file: !278, line: 63, baseType: !241, size: 64, align: 64, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "default_g", scope: !279, file: !278, line: 64, baseType: !289, size: 64, align: 64, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64, align: 64)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIGNUM", file: !267, line: 80, baseType: !292)
!292 = !DICompositeType(tag: DW_TAG_structure_type, name: "bignum_st", file: !267, line: 80, flags: DIFlagFwdDecl)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "default_N", scope: !279, file: !278, line: 65, baseType: !289, size: 64, align: 64, offset: 256)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !272, file: !16, line: 240, baseType: !295, size: 64, align: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64, align: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRP_user_pwd", file: !278, line: 48, baseType: !297)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SRP_user_pwd_st", file: !278, line: 38, size: 384, align: 64, elements: !298)
!298 = !{!299, !300, !302, !303, !304, !305}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !297, file: !278, line: 40, baseType: !241, size: 64, align: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !297, file: !278, line: 41, baseType: !301, size: 64, align: 64, offset: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64, align: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !297, file: !278, line: 42, baseType: !301, size: 64, align: 64, offset: 128)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !297, file: !278, line: 44, baseType: !289, size: 64, align: 64, offset: 192)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "N", scope: !297, file: !278, line: 45, baseType: !289, size: 64, align: 64, offset: 256)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !297, file: !278, line: 47, baseType: !241, size: 64, align: 64, offset: 320)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64, align: 64)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "OCSP_RESPONSE", file: !267, line: 170, baseType: !308)
!308 = !DICompositeType(tag: DW_TAG_structure_type, name: "ocsp_response_st", file: !267, line: 170, flags: DIFlagFwdDecl)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64, align: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{!236}
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64, align: 64)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "d2i_of_void", file: !314, line: 277, baseType: !315)
!314 = !DIFile(filename: "include/openssl/asn1.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!315 = !DISubroutineType(types: !316)
!316 = !{!236, !317, !318, !321}
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64, align: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64, align: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64, align: 64)
!320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !238)
!321 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64, align: 64)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64, align: 64)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_EXTENSION", file: !257, line: 81, baseType: !326)
!326 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_extension_st", file: !257, line: 81, flags: DIFlagFwdDecl)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPENSSL_sk_freefunc", file: !251, line: 20, baseType: !328)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64, align: 64)
!329 = !DISubroutineType(types: !330)
!330 = !{null, !236}
!331 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fd_mask", file: !333, line: 54, baseType: !321)
!333 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/select.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64, align: 64)
!335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CIPHER", file: !337, line: 212, baseType: !338)
!337 = !DIFile(filename: "include/openssl/ssl.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!338 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_cipher_st", file: !337, line: 212, flags: DIFlagFwdDecl)
!339 = !{!340, !341, !356, !357, !358, !360, !361, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !402, !403, !405, !410, !412, !413}
!340 = distinct !DIGlobalVariable(name: "psk_key", scope: !0, file: !16, line: 124, type: !241, isLocal: false, isDefinition: true, variable: i8** @psk_key)
!341 = distinct !DIGlobalVariable(name: "s_server_options", scope: !0, file: !16, line: 761, type: !342, isLocal: false, isDefinition: true, variable: [178 x %struct.options_st]* @s_server_options)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 34176, align: 64, elements: !354)
!343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPTIONS", file: !345, line: 280, baseType: !346)
!345 = !DIFile(filename: "apps/include/opt.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "options_st", file: !345, line: 269, size: 192, align: 64, elements: !347)
!347 = !{!348, !351, !352, !353}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !346, file: !345, line: 270, baseType: !349, size: 64, align: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64, align: 64)
!350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !346, file: !345, line: 271, baseType: !239, size: 32, align: 32, offset: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "valtype", scope: !346, file: !345, line: 278, baseType: !239, size: 32, align: 32, offset: 96)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "helpstr", scope: !346, file: !345, line: 279, baseType: !349, size: 64, align: 64, offset: 128)
!354 = !{!355}
!355 = !DISubrange(count: 178)
!356 = distinct !DIGlobalVariable(name: "socket_mtu", scope: !0, file: !16, line: 110, type: !321, isLocal: true, isDefinition: true, variable: i64* @socket_mtu)
!357 = distinct !DIGlobalVariable(name: "srp_callback_parm", scope: !0, file: !16, line: 242, type: !271, isLocal: true, isDefinition: true, variable: %struct.srpsrvparm_st* @srp_callback_parm)
!358 = distinct !DIGlobalVariable(name: "local_argv", scope: !0, file: !16, line: 289, type: !359, isLocal: true, isDefinition: true, variable: i8*** @local_argv)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64, align: 64)
!360 = distinct !DIGlobalVariable(name: "local_argc", scope: !0, file: !16, line: 288, type: !239, isLocal: true, isDefinition: true, variable: i32* @local_argc)
!361 = distinct !DIGlobalVariable(name: "ctx2", scope: !0, file: !16, line: 89, type: !362, isLocal: true, isDefinition: true, variable: %struct.ssl_ctx_st** @ctx2)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64, align: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CTX", file: !267, line: 152, baseType: !364)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_ctx_st", file: !267, line: 152, flags: DIFlagFwdDecl)
!365 = distinct !DIGlobalVariable(name: "ctx", scope: !0, file: !16, line: 88, type: !362, isLocal: true, isDefinition: true, variable: %struct.ssl_ctx_st** @ctx)
!366 = distinct !DIGlobalVariable(name: "s_nbio_test", scope: !0, file: !16, line: 86, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_nbio_test)
!367 = distinct !DIGlobalVariable(name: "s_nbio", scope: !0, file: !16, line: 85, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_nbio)
!368 = distinct !DIGlobalVariable(name: "www", scope: !0, file: !16, line: 90, type: !239, isLocal: true, isDefinition: true, variable: i32* @www)
!369 = distinct !DIGlobalVariable(name: "bio_s_out", scope: !0, file: !16, line: 92, type: !265, isLocal: true, isDefinition: true, variable: %struct.bio_st** @bio_s_out)
!370 = distinct !DIGlobalVariable(name: "s_debug", scope: !0, file: !16, line: 94, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_debug)
!371 = distinct !DIGlobalVariable(name: "s_msg", scope: !0, file: !16, line: 96, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_msg)
!372 = distinct !DIGlobalVariable(name: "s_quiet", scope: !0, file: !16, line: 97, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_quiet)
!373 = distinct !DIGlobalVariable(name: "s_brief", scope: !0, file: !16, line: 99, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_brief)
!374 = distinct !DIGlobalVariable(name: "async", scope: !0, file: !16, line: 104, type: !239, isLocal: true, isDefinition: true, variable: i32* @async)
!375 = distinct !DIGlobalVariable(name: "s_ign_eof", scope: !0, file: !16, line: 98, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_ign_eof)
!376 = distinct !DIGlobalVariable(name: "s_tlsextdebug", scope: !0, file: !16, line: 95, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_tlsextdebug)
!377 = distinct !DIGlobalVariable(name: "tlscstatp", scope: !0, file: !16, line: 500, type: !378, isLocal: true, isDefinition: true, variable: %struct.tlsextstatusctx_st* @tlscstatp)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "tlsextstatusctx", file: !16, line: 498, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsextstatusctx_st", file: !16, line: 490, size: 384, align: 64, elements: !380)
!380 = !{!381, !382, !383, !384, !385, !386, !387}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !379, file: !16, line: 491, baseType: !239, size: 32, align: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "respin", scope: !379, file: !16, line: 493, baseType: !241, size: 64, align: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !379, file: !16, line: 495, baseType: !241, size: 64, align: 64, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !379, file: !16, line: 495, baseType: !241, size: 64, align: 64, offset: 192)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !379, file: !16, line: 495, baseType: !241, size: 64, align: 64, offset: 256)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "use_ssl", scope: !379, file: !16, line: 496, baseType: !239, size: 32, align: 32, offset: 320)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !379, file: !16, line: 497, baseType: !239, size: 32, align: 32, offset: 352)
!388 = distinct !DIGlobalVariable(name: "bio_s_msg", scope: !0, file: !16, line: 93, type: !265, isLocal: true, isDefinition: true, variable: %struct.bio_st** @bio_s_msg)
!389 = distinct !DIGlobalVariable(name: "s_crlf", scope: !0, file: !16, line: 87, type: !239, isLocal: true, isDefinition: true, variable: i32* @s_crlf)
!390 = distinct !DIGlobalVariable(name: "psk_identity", scope: !0, file: !16, line: 123, type: !241, isLocal: true, isDefinition: true, variable: i8** @psk_identity)
!391 = distinct !DIGlobalVariable(name: "enable_timeouts", scope: !0, file: !16, line: 109, type: !239, isLocal: true, isDefinition: true, variable: i32* @enable_timeouts)
!392 = distinct !DIGlobalVariable(name: "dtlslisten", scope: !0, file: !16, line: 117, type: !239, isLocal: true, isDefinition: true, variable: i32* @dtlslisten)
!393 = distinct !DIGlobalVariable(name: "stateless", scope: !0, file: !16, line: 118, type: !239, isLocal: true, isDefinition: true, variable: i32* @stateless)
!394 = distinct !DIGlobalVariable(name: "session_id_prefix", scope: !0, file: !16, line: 106, type: !349, isLocal: true, isDefinition: true, variable: i8** @session_id_prefix)
!395 = distinct !DIGlobalVariable(name: "keymatexportlabel", scope: !0, file: !16, line: 101, type: !241, isLocal: true, isDefinition: true, variable: i8** @keymatexportlabel)
!396 = distinct !DIGlobalVariable(name: "keymatexportlen", scope: !0, file: !16, line: 102, type: !239, isLocal: true, isDefinition: true, variable: i32* @keymatexportlen)
!397 = distinct !DIGlobalVariable(name: "early_data", scope: !0, file: !16, line: 120, type: !239, isLocal: true, isDefinition: true, variable: i32* @early_data)
!398 = distinct !DIGlobalVariable(name: "psksess", scope: !0, file: !16, line: 121, type: !399, isLocal: true, isDefinition: true, variable: %struct.ssl_session_st** @psksess)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64, align: 64)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_SESSION", file: !337, line: 213, baseType: !401)
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_session_st", file: !337, line: 213, flags: DIFlagFwdDecl)
!402 = distinct !DIGlobalVariable(name: "accept_socket", scope: !0, file: !16, line: 80, type: !239, isLocal: true, isDefinition: true, variable: i32* @accept_socket)
!403 = distinct !DIGlobalVariable(name: "bufsize", scope: !0, file: !16, line: 79, type: !404, isLocal: true, isDefinition: true, variable: i32 16384)
!404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!405 = distinct !DIGlobalVariable(name: "str", scope: !406, file: !16, line: 2559, type: !349, isLocal: true, isDefinition: true, variable: i8** @sv_body.str)
!406 = distinct !DISubprogram(name: "sv_body", scope: !16, file: !16, line: 2231, type: !407, isLocal: true, isDefinition: true, scopeLine: 2232, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!407 = !DISubroutineType(types: !408)
!408 = !{!239, !239, !239, !239, !237}
!409 = !{}
!410 = distinct !DIGlobalVariable(name: "space", scope: !411, file: !16, line: 3073, type: !349, isLocal: true, isDefinition: true, variable: i8** @www_body.space)
!411 = distinct !DISubprogram(name: "www_body", scope: !16, file: !16, line: 2952, type: !407, isLocal: true, isDefinition: true, scopeLine: 2953, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!412 = distinct !DIGlobalVariable(name: "text", scope: !411, file: !16, line: 3204, type: !349, isLocal: true, isDefinition: true, variable: i8** @www_body.text)
!413 = distinct !DIGlobalVariable(name: "first", scope: !0, file: !16, line: 3535, type: !414, isLocal: true, isDefinition: true, variable: %struct.simple_ssl_session_st** @first)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64, align: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "simple_ssl_session", file: !16, line: 3533, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_ssl_session_st", file: !16, line: 3527, size: 320, align: 64, elements: !417)
!417 = !{!418, !419, !420, !421, !422}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !416, file: !16, line: 3528, baseType: !237, size: 64, align: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "idlen", scope: !416, file: !16, line: 3529, baseType: !331, size: 32, align: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "der", scope: !416, file: !16, line: 3530, baseType: !237, size: 64, align: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "derlen", scope: !416, file: !16, line: 3531, baseType: !239, size: 32, align: 32, offset: 192)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !416, file: !16, line: 3532, baseType: !423, size: 64, align: 64, offset: 256)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64, align: 64)
!424 = !{i32 2, !"Dwarf Version", i32 4}
!425 = !{i32 2, !"Debug Info Version", i32 3}
!426 = !{!"clang version 3.9.0 (tags/RELEASE_390/final)"}
!427 = distinct !DISubprogram(name: "s_server_main", scope: !16, file: !16, line: 976, type: !428, isLocal: false, isDefinition: true, scopeLine: 977, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!428 = !DISubroutineType(types: !429)
!429 = !{!239, !239, !359}
!430 = !DILocalVariable(name: "argc", arg: 1, scope: !427, file: !16, line: 976, type: !239)
!431 = !DIExpression()
!432 = !DILocation(line: 976, column: 23, scope: !427)
!433 = !DILocalVariable(name: "argv", arg: 2, scope: !427, file: !16, line: 976, type: !359)
!434 = !DILocation(line: 976, column: 35, scope: !427)
!435 = !DILocalVariable(name: "engine", scope: !427, file: !16, line: 978, type: !436)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64, align: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "ENGINE", file: !267, line: 150, baseType: !438)
!438 = !DICompositeType(tag: DW_TAG_structure_type, name: "engine_st", file: !267, line: 150, flags: DIFlagFwdDecl)
!439 = !DILocation(line: 978, column: 13, scope: !427)
!440 = !DILocalVariable(name: "s_key", scope: !427, file: !16, line: 979, type: !441)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64, align: 64)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "EVP_PKEY", file: !267, line: 95, baseType: !443)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "evp_pkey_st", file: !267, line: 95, flags: DIFlagFwdDecl)
!444 = !DILocation(line: 979, column: 15, scope: !427)
!445 = !DILocalVariable(name: "s_dkey", scope: !427, file: !16, line: 979, type: !441)
!446 = !DILocation(line: 979, column: 29, scope: !427)
!447 = !DILocalVariable(name: "cctx", scope: !427, file: !16, line: 980, type: !448)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_CONF_CTX", file: !337, line: 215, baseType: !450)
!450 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_conf_ctx_st", file: !337, line: 215, flags: DIFlagFwdDecl)
!451 = !DILocation(line: 980, column: 19, scope: !427)
!452 = !DILocalVariable(name: "meth", scope: !427, file: !16, line: 981, type: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64, align: 64)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_METHOD", file: !337, line: 211, baseType: !456)
!456 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_method_st", file: !337, line: 211, flags: DIFlagFwdDecl)
!457 = !DILocation(line: 981, column: 23, scope: !427)
!458 = !DILocation(line: 981, column: 30, scope: !427)
!459 = !DILocalVariable(name: "exc", scope: !427, file: !16, line: 982, type: !460)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64, align: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL_EXCERT", file: !462, line: 70, baseType: !463)
!462 = !DIFile(filename: "apps/include/s_apps.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!463 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_excert_st", file: !462, line: 70, flags: DIFlagFwdDecl)
!464 = !DILocation(line: 982, column: 17, scope: !427)
!465 = !DILocalVariable(name: "ssl_args", scope: !427, file: !16, line: 983, type: !246)
!466 = !DILocation(line: 983, column: 37, scope: !427)
!467 = !DILocalVariable(name: "s_chain", scope: !427, file: !16, line: 984, type: !468)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64, align: 64)
!469 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509", file: !257, line: 99, flags: DIFlagFwdDecl)
!470 = !DILocation(line: 984, column: 27, scope: !427)
!471 = !DILocalVariable(name: "s_dchain", scope: !427, file: !16, line: 984, type: !468)
!472 = !DILocation(line: 984, column: 37, scope: !427)
!473 = !DILocalVariable(name: "crls", scope: !427, file: !16, line: 985, type: !255)
!474 = !DILocation(line: 985, column: 31, scope: !427)
!475 = !DILocalVariable(name: "s_cert", scope: !427, file: !16, line: 986, type: !476)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64, align: 64)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509", file: !267, line: 124, baseType: !478)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_st", file: !267, line: 124, flags: DIFlagFwdDecl)
!479 = !DILocation(line: 986, column: 11, scope: !427)
!480 = !DILocalVariable(name: "s_dcert", scope: !427, file: !16, line: 986, type: !476)
!481 = !DILocation(line: 986, column: 26, scope: !427)
!482 = !DILocalVariable(name: "vpm", scope: !427, file: !16, line: 987, type: !483)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64, align: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_VERIFY_PARAM", file: !267, line: 137, baseType: !485)
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_VERIFY_PARAM_st", file: !267, line: 137, flags: DIFlagFwdDecl)
!486 = !DILocation(line: 987, column: 24, scope: !427)
!487 = !DILocalVariable(name: "CApath", scope: !427, file: !16, line: 988, type: !349)
!488 = !DILocation(line: 988, column: 17, scope: !427)
!489 = !DILocalVariable(name: "CAfile", scope: !427, file: !16, line: 988, type: !349)
!490 = !DILocation(line: 988, column: 32, scope: !427)
!491 = !DILocalVariable(name: "chCApath", scope: !427, file: !16, line: 988, type: !349)
!492 = !DILocation(line: 988, column: 48, scope: !427)
!493 = !DILocalVariable(name: "chCAfile", scope: !427, file: !16, line: 988, type: !349)
!494 = !DILocation(line: 988, column: 66, scope: !427)
!495 = !DILocalVariable(name: "dpassarg", scope: !427, file: !16, line: 989, type: !241)
!496 = !DILocation(line: 989, column: 11, scope: !427)
!497 = !DILocalVariable(name: "dpass", scope: !427, file: !16, line: 989, type: !241)
!498 = !DILocation(line: 989, column: 28, scope: !427)
!499 = !DILocalVariable(name: "passarg", scope: !427, file: !16, line: 990, type: !241)
!500 = !DILocation(line: 990, column: 11, scope: !427)
!501 = !DILocalVariable(name: "pass", scope: !427, file: !16, line: 990, type: !241)
!502 = !DILocation(line: 990, column: 27, scope: !427)
!503 = !DILocalVariable(name: "vfyCApath", scope: !427, file: !16, line: 990, type: !241)
!504 = !DILocation(line: 990, column: 41, scope: !427)
!505 = !DILocalVariable(name: "vfyCAfile", scope: !427, file: !16, line: 990, type: !241)
!506 = !DILocation(line: 990, column: 60, scope: !427)
!507 = !DILocalVariable(name: "crl_file", scope: !427, file: !16, line: 991, type: !241)
!508 = !DILocation(line: 991, column: 11, scope: !427)
!509 = !DILocalVariable(name: "prog", scope: !427, file: !16, line: 991, type: !241)
!510 = !DILocation(line: 991, column: 28, scope: !427)
!511 = !DILocalVariable(name: "unlink_unix_path", scope: !427, file: !16, line: 993, type: !239)
!512 = !DILocation(line: 993, column: 9, scope: !427)
!513 = !DILocalVariable(name: "server_cb", scope: !427, file: !16, line: 995, type: !514)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "do_server_cb", file: !462, line: 23, baseType: !515)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64, align: 64)
!516 = !DILocation(line: 995, column: 18, scope: !427)
!517 = !DILocalVariable(name: "vpmtouched", scope: !427, file: !16, line: 996, type: !239)
!518 = !DILocation(line: 996, column: 9, scope: !427)
!519 = !DILocalVariable(name: "build_chain", scope: !427, file: !16, line: 996, type: !239)
!520 = !DILocation(line: 996, column: 25, scope: !427)
!521 = !DILocalVariable(name: "no_cache", scope: !427, file: !16, line: 996, type: !239)
!522 = !DILocation(line: 996, column: 42, scope: !427)
!523 = !DILocalVariable(name: "ext_cache", scope: !427, file: !16, line: 996, type: !239)
!524 = !DILocation(line: 996, column: 56, scope: !427)
!525 = !DILocalVariable(name: "dhfile", scope: !427, file: !16, line: 998, type: !241)
!526 = !DILocation(line: 998, column: 11, scope: !427)
!527 = !DILocalVariable(name: "no_dhe", scope: !427, file: !16, line: 999, type: !239)
!528 = !DILocation(line: 999, column: 9, scope: !427)
!529 = !DILocalVariable(name: "nocert", scope: !427, file: !16, line: 1001, type: !239)
!530 = !DILocation(line: 1001, column: 9, scope: !427)
!531 = !DILocalVariable(name: "ret", scope: !427, file: !16, line: 1001, type: !239)
!532 = !DILocation(line: 1001, column: 21, scope: !427)
!533 = !DILocalVariable(name: "noCApath", scope: !427, file: !16, line: 1002, type: !239)
!534 = !DILocation(line: 1002, column: 9, scope: !427)
!535 = !DILocalVariable(name: "noCAfile", scope: !427, file: !16, line: 1002, type: !239)
!536 = !DILocation(line: 1002, column: 23, scope: !427)
!537 = !DILocalVariable(name: "s_cert_format", scope: !427, file: !16, line: 1003, type: !239)
!538 = !DILocation(line: 1003, column: 9, scope: !427)
!539 = !DILocalVariable(name: "s_key_format", scope: !427, file: !16, line: 1003, type: !239)
!540 = !DILocation(line: 1003, column: 39, scope: !427)
!541 = !DILocalVariable(name: "s_dcert_format", scope: !427, file: !16, line: 1004, type: !239)
!542 = !DILocation(line: 1004, column: 9, scope: !427)
!543 = !DILocalVariable(name: "s_dkey_format", scope: !427, file: !16, line: 1004, type: !239)
!544 = !DILocation(line: 1004, column: 40, scope: !427)
!545 = !DILocalVariable(name: "rev", scope: !427, file: !16, line: 1005, type: !239)
!546 = !DILocation(line: 1005, column: 9, scope: !427)
!547 = !DILocalVariable(name: "naccept", scope: !427, file: !16, line: 1005, type: !239)
!548 = !DILocation(line: 1005, column: 18, scope: !427)
!549 = !DILocalVariable(name: "sdebug", scope: !427, file: !16, line: 1005, type: !239)
!550 = !DILocation(line: 1005, column: 32, scope: !427)
!551 = !DILocalVariable(name: "socket_family", scope: !427, file: !16, line: 1006, type: !239)
!552 = !DILocation(line: 1006, column: 9, scope: !427)
!553 = !DILocalVariable(name: "socket_type", scope: !427, file: !16, line: 1006, type: !239)
!554 = !DILocation(line: 1006, column: 35, scope: !427)
!555 = !DILocalVariable(name: "protocol", scope: !427, file: !16, line: 1006, type: !239)
!556 = !DILocation(line: 1006, column: 62, scope: !427)
!557 = !DILocalVariable(name: "state", scope: !427, file: !16, line: 1007, type: !239)
!558 = !DILocation(line: 1007, column: 9, scope: !427)
!559 = !DILocalVariable(name: "crl_format", scope: !427, file: !16, line: 1007, type: !239)
!560 = !DILocation(line: 1007, column: 20, scope: !427)
!561 = !DILocalVariable(name: "crl_download", scope: !427, file: !16, line: 1007, type: !239)
!562 = !DILocation(line: 1007, column: 47, scope: !427)
!563 = !DILocalVariable(name: "host", scope: !427, file: !16, line: 1008, type: !241)
!564 = !DILocation(line: 1008, column: 11, scope: !427)
!565 = !DILocalVariable(name: "port", scope: !427, file: !16, line: 1009, type: !241)
!566 = !DILocation(line: 1009, column: 11, scope: !427)
!567 = !DILocation(line: 1009, column: 18, scope: !427)
!568 = !DILocalVariable(name: "context", scope: !427, file: !16, line: 1010, type: !237)
!569 = !DILocation(line: 1010, column: 20, scope: !427)
!570 = !DILocalVariable(name: "o", scope: !427, file: !16, line: 1011, type: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "OPTION_CHOICE", file: !16, line: 759, baseType: !15)
!572 = !DILocation(line: 1011, column: 19, scope: !427)
!573 = !DILocalVariable(name: "s_key2", scope: !427, file: !16, line: 1012, type: !441)
!574 = !DILocation(line: 1012, column: 15, scope: !427)
!575 = !DILocalVariable(name: "s_cert2", scope: !427, file: !16, line: 1013, type: !476)
!576 = !DILocation(line: 1013, column: 11, scope: !427)
!577 = !DILocalVariable(name: "tlsextcbp", scope: !427, file: !16, line: 1014, type: !260)
!578 = !DILocation(line: 1014, column: 15, scope: !427)
!579 = !DILocalVariable(name: "ssl_config", scope: !427, file: !16, line: 1015, type: !349)
!580 = !DILocation(line: 1015, column: 17, scope: !427)
!581 = !DILocalVariable(name: "read_buf_len", scope: !427, file: !16, line: 1016, type: !239)
!582 = !DILocation(line: 1016, column: 9, scope: !427)
!583 = !DILocalVariable(name: "next_proto_neg_in", scope: !427, file: !16, line: 1018, type: !349)
!584 = !DILocation(line: 1018, column: 17, scope: !427)
!585 = !DILocalVariable(name: "next_proto", scope: !427, file: !16, line: 1019, type: !586)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "tlsextnextprotoctx", file: !16, line: 670, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsextnextprotoctx_st", file: !16, line: 667, size: 128, align: 64, elements: !588)
!588 = !{!589, !590}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !587, file: !16, line: 668, baseType: !237, size: 64, align: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !587, file: !16, line: 669, baseType: !591, size: 64, align: 64, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !592, line: 216, baseType: !593)
!592 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!593 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!594 = !DILocation(line: 1019, column: 24, scope: !427)
!595 = !DILocalVariable(name: "alpn_in", scope: !427, file: !16, line: 1021, type: !349)
!596 = !DILocation(line: 1021, column: 17, scope: !427)
!597 = !DILocalVariable(name: "alpn_ctx", scope: !427, file: !16, line: 1022, type: !598)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "tlsextalpnctx", file: !16, line: 688, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlsextalpnctx_st", file: !16, line: 685, size: 128, align: 64, elements: !600)
!600 = !{!601, !602}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !599, file: !16, line: 686, baseType: !237, size: 64, align: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !599, file: !16, line: 687, baseType: !591, size: 64, align: 64, offset: 64)
!603 = !DILocation(line: 1022, column: 19, scope: !427)
!604 = !DILocalVariable(name: "psk_identity_hint", scope: !427, file: !16, line: 1025, type: !241)
!605 = !DILocation(line: 1025, column: 11, scope: !427)
!606 = !DILocalVariable(name: "p", scope: !427, file: !16, line: 1027, type: !241)
!607 = !DILocation(line: 1027, column: 11, scope: !427)
!608 = !DILocalVariable(name: "srpuserseed", scope: !427, file: !16, line: 1029, type: !241)
!609 = !DILocation(line: 1029, column: 11, scope: !427)
!610 = !DILocalVariable(name: "srp_verifier_file", scope: !427, file: !16, line: 1030, type: !241)
!611 = !DILocation(line: 1030, column: 11, scope: !427)
!612 = !DILocalVariable(name: "srtp_profiles", scope: !427, file: !16, line: 1033, type: !241)
!613 = !DILocation(line: 1033, column: 11, scope: !427)
!614 = !DILocalVariable(name: "min_version", scope: !427, file: !16, line: 1035, type: !239)
!615 = !DILocation(line: 1035, column: 9, scope: !427)
!616 = !DILocalVariable(name: "max_version", scope: !427, file: !16, line: 1035, type: !239)
!617 = !DILocation(line: 1035, column: 26, scope: !427)
!618 = !DILocalVariable(name: "prot_opt", scope: !427, file: !16, line: 1035, type: !239)
!619 = !DILocation(line: 1035, column: 43, scope: !427)
!620 = !DILocalVariable(name: "no_prot_opt", scope: !427, file: !16, line: 1035, type: !239)
!621 = !DILocation(line: 1035, column: 57, scope: !427)
!622 = !DILocalVariable(name: "s_server_verify", scope: !427, file: !16, line: 1036, type: !239)
!623 = !DILocation(line: 1036, column: 9, scope: !427)
!624 = !DILocalVariable(name: "s_server_session_id_context", scope: !427, file: !16, line: 1037, type: !239)
!625 = !DILocation(line: 1037, column: 9, scope: !427)
!626 = !DILocalVariable(name: "s_cert_file", scope: !427, file: !16, line: 1038, type: !349)
!627 = !DILocation(line: 1038, column: 17, scope: !427)
!628 = !DILocalVariable(name: "s_key_file", scope: !427, file: !16, line: 1038, type: !349)
!629 = !DILocation(line: 1038, column: 46, scope: !427)
!630 = !DILocalVariable(name: "s_chain_file", scope: !427, file: !16, line: 1038, type: !349)
!631 = !DILocation(line: 1038, column: 62, scope: !427)
!632 = !DILocalVariable(name: "s_cert_file2", scope: !427, file: !16, line: 1039, type: !349)
!633 = !DILocation(line: 1039, column: 17, scope: !427)
!634 = !DILocalVariable(name: "s_key_file2", scope: !427, file: !16, line: 1039, type: !349)
!635 = !DILocation(line: 1039, column: 48, scope: !427)
!636 = !DILocalVariable(name: "s_dcert_file", scope: !427, file: !16, line: 1040, type: !241)
!637 = !DILocation(line: 1040, column: 11, scope: !427)
!638 = !DILocalVariable(name: "s_dkey_file", scope: !427, file: !16, line: 1040, type: !241)
!639 = !DILocation(line: 1040, column: 32, scope: !427)
!640 = !DILocalVariable(name: "s_dchain_file", scope: !427, file: !16, line: 1040, type: !241)
!641 = !DILocation(line: 1040, column: 53, scope: !427)
!642 = !DILocalVariable(name: "s_tlsextstatus", scope: !427, file: !16, line: 1042, type: !239)
!643 = !DILocation(line: 1042, column: 9, scope: !427)
!644 = !DILocalVariable(name: "no_resume_ephemeral", scope: !427, file: !16, line: 1044, type: !239)
!645 = !DILocation(line: 1044, column: 9, scope: !427)
!646 = !DILocalVariable(name: "max_send_fragment", scope: !427, file: !16, line: 1045, type: !331)
!647 = !DILocation(line: 1045, column: 18, scope: !427)
!648 = !DILocalVariable(name: "split_send_fragment", scope: !427, file: !16, line: 1046, type: !331)
!649 = !DILocation(line: 1046, column: 18, scope: !427)
!650 = !DILocalVariable(name: "max_pipelines", scope: !427, file: !16, line: 1046, type: !331)
!651 = !DILocation(line: 1046, column: 43, scope: !427)
!652 = !DILocalVariable(name: "s_serverinfo_file", scope: !427, file: !16, line: 1047, type: !349)
!653 = !DILocation(line: 1047, column: 17, scope: !427)
!654 = !DILocalVariable(name: "keylog_file", scope: !427, file: !16, line: 1048, type: !349)
!655 = !DILocation(line: 1048, column: 17, scope: !427)
!656 = !DILocalVariable(name: "max_early_data", scope: !427, file: !16, line: 1049, type: !239)
!657 = !DILocation(line: 1049, column: 9, scope: !427)
!658 = !DILocalVariable(name: "recv_max_early_data", scope: !427, file: !16, line: 1049, type: !239)
!659 = !DILocation(line: 1049, column: 30, scope: !427)
!660 = !DILocalVariable(name: "psksessf", scope: !427, file: !16, line: 1050, type: !241)
!661 = !DILocation(line: 1050, column: 11, scope: !427)
!662 = !DILocation(line: 1056, column: 18, scope: !427)
!663 = !DILocation(line: 1056, column: 16, scope: !427)
!664 = !DILocation(line: 1057, column: 18, scope: !427)
!665 = !DILocation(line: 1057, column: 16, scope: !427)
!666 = !DILocation(line: 1059, column: 16, scope: !427)
!667 = !DILocation(line: 1059, column: 9, scope: !427)
!668 = !DILocation(line: 1060, column: 26, scope: !427)
!669 = !DILocation(line: 1060, column: 12, scope: !427)
!670 = !DILocation(line: 1061, column: 9, scope: !427)
!671 = !DILocation(line: 1062, column: 15, scope: !427)
!672 = !DILocation(line: 1063, column: 13, scope: !427)
!673 = !DILocation(line: 1064, column: 11, scope: !427)
!674 = !DILocation(line: 1065, column: 13, scope: !427)
!675 = !DILocation(line: 1066, column: 13, scope: !427)
!676 = !DILocation(line: 1067, column: 11, scope: !427)
!677 = !DILocation(line: 1069, column: 12, scope: !427)
!678 = !DILocation(line: 1069, column: 10, scope: !427)
!679 = !DILocation(line: 1070, column: 11, scope: !427)
!680 = !DILocation(line: 1070, column: 9, scope: !427)
!681 = !DILocation(line: 1071, column: 9, scope: !682)
!682 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1071, column: 9)
!683 = !DILocation(line: 1071, column: 14, scope: !682)
!684 = !DILocation(line: 1071, column: 21, scope: !682)
!685 = !DILocation(line: 1071, column: 24, scope: !686)
!686 = !DILexicalBlockFile(scope: !682, file: !16, discriminator: 1)
!687 = !DILocation(line: 1071, column: 28, scope: !686)
!688 = !DILocation(line: 1071, column: 9, scope: !686)
!689 = !DILocation(line: 1072, column: 9, scope: !682)
!690 = !DILocation(line: 1073, column: 28, scope: !427)
!691 = !DILocation(line: 1073, column: 5, scope: !427)
!692 = !DILocation(line: 1076, column: 21, scope: !427)
!693 = !DILocation(line: 1076, column: 27, scope: !427)
!694 = !DILocation(line: 1076, column: 12, scope: !427)
!695 = !DILocation(line: 1076, column: 10, scope: !427)
!696 = !DILocation(line: 1077, column: 5, scope: !427)
!697 = !DILocation(line: 1077, column: 17, scope: !698)
!698 = !DILexicalBlockFile(scope: !427, file: !16, discriminator: 1)
!699 = !DILocation(line: 1077, column: 15, scope: !698)
!700 = !DILocation(line: 1077, column: 29, scope: !698)
!701 = !DILocation(line: 1077, column: 5, scope: !698)
!702 = !DILocation(line: 1078, column: 14, scope: !703)
!703 = distinct !DILexicalBlock(scope: !704, file: !16, line: 1078, column: 13)
!704 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1077, column: 41)
!705 = !DILocation(line: 1078, column: 16, scope: !703)
!706 = !DILocation(line: 1078, column: 28, scope: !703)
!707 = !DILocation(line: 1078, column: 31, scope: !708)
!708 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 1)
!709 = !DILocation(line: 1078, column: 33, scope: !708)
!710 = !DILocation(line: 1078, column: 45, scope: !708)
!711 = !DILocation(line: 1078, column: 48, scope: !712)
!712 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 2)
!713 = !DILocation(line: 1078, column: 50, scope: !712)
!714 = !DILocation(line: 1078, column: 64, scope: !712)
!715 = !DILocation(line: 1078, column: 67, scope: !716)
!716 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 3)
!717 = !DILocation(line: 1078, column: 69, scope: !716)
!718 = !DILocation(line: 1078, column: 83, scope: !716)
!719 = !DILocation(line: 1078, column: 86, scope: !720)
!720 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 4)
!721 = !DILocation(line: 1078, column: 88, scope: !720)
!722 = !DILocation(line: 1078, column: 102, scope: !720)
!723 = !DILocation(line: 1078, column: 105, scope: !724)
!724 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 5)
!725 = !DILocation(line: 1078, column: 107, scope: !724)
!726 = !DILocation(line: 1078, column: 119, scope: !724)
!727 = !DILocation(line: 1078, column: 122, scope: !728)
!728 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 6)
!729 = !DILocation(line: 1078, column: 124, scope: !728)
!730 = !DILocation(line: 1078, column: 137, scope: !728)
!731 = !DILocation(line: 1078, column: 140, scope: !732)
!732 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 7)
!733 = !DILocation(line: 1078, column: 142, scope: !732)
!734 = !DILocation(line: 1078, column: 158, scope: !732)
!735 = !DILocation(line: 1078, column: 161, scope: !736)
!736 = !DILexicalBlockFile(scope: !703, file: !16, discriminator: 8)
!737 = !DILocation(line: 1078, column: 172, scope: !736)
!738 = !DILocation(line: 1078, column: 13, scope: !736)
!739 = !DILocation(line: 1079, column: 24, scope: !740)
!740 = distinct !DILexicalBlock(scope: !703, file: !16, line: 1078, column: 177)
!741 = !DILocation(line: 1079, column: 13, scope: !740)
!742 = !DILocation(line: 1080, column: 13, scope: !740)
!743 = !DILocation(line: 1082, column: 14, scope: !744)
!744 = distinct !DILexicalBlock(scope: !704, file: !16, line: 1082, column: 13)
!745 = !DILocation(line: 1082, column: 16, scope: !744)
!746 = !DILocation(line: 1082, column: 32, scope: !744)
!747 = !DILocation(line: 1082, column: 35, scope: !748)
!748 = !DILexicalBlockFile(scope: !744, file: !16, discriminator: 1)
!749 = !DILocation(line: 1082, column: 37, scope: !748)
!750 = !DILocation(line: 1082, column: 53, scope: !748)
!751 = !DILocation(line: 1082, column: 56, scope: !752)
!752 = !DILexicalBlockFile(scope: !744, file: !16, discriminator: 2)
!753 = !DILocation(line: 1082, column: 58, scope: !752)
!754 = !DILocation(line: 1082, column: 76, scope: !752)
!755 = !DILocation(line: 1082, column: 79, scope: !756)
!756 = !DILexicalBlockFile(scope: !744, file: !16, discriminator: 3)
!757 = !DILocation(line: 1082, column: 81, scope: !756)
!758 = !DILocation(line: 1082, column: 99, scope: !756)
!759 = !DILocation(line: 1082, column: 102, scope: !760)
!760 = !DILexicalBlockFile(scope: !744, file: !16, discriminator: 4)
!761 = !DILocation(line: 1082, column: 104, scope: !760)
!762 = !DILocation(line: 1082, column: 13, scope: !760)
!763 = !DILocation(line: 1083, column: 24, scope: !744)
!764 = !DILocation(line: 1083, column: 13, scope: !744)
!765 = !DILocation(line: 1084, column: 13, scope: !766)
!766 = distinct !DILexicalBlock(scope: !704, file: !16, line: 1084, column: 13)
!767 = !DILocation(line: 1084, column: 22, scope: !766)
!768 = !DILocation(line: 1084, column: 27, scope: !766)
!769 = !DILocation(line: 1084, column: 30, scope: !770)
!770 = !DILexicalBlockFile(scope: !766, file: !16, discriminator: 1)
!771 = !DILocation(line: 1084, column: 13, scope: !770)
!772 = !DILocation(line: 1085, column: 24, scope: !773)
!773 = distinct !DILexicalBlock(scope: !766, file: !16, line: 1084, column: 43)
!774 = !DILocation(line: 1085, column: 13, scope: !773)
!775 = !DILocation(line: 1087, column: 13, scope: !773)
!776 = !DILocation(line: 1089, column: 17, scope: !704)
!777 = !DILocation(line: 1089, column: 9, scope: !704)
!778 = !DILocation(line: 1089, column: 20, scope: !779)
!779 = !DILexicalBlockFile(scope: !704, file: !16, discriminator: 1)
!780 = !DILocation(line: 1093, column: 24, scope: !781)
!781 = distinct !DILexicalBlock(scope: !704, file: !16, line: 1089, column: 20)
!782 = !DILocation(line: 1093, column: 65, scope: !781)
!783 = !DILocation(line: 1093, column: 13, scope: !781)
!784 = !DILocation(line: 1094, column: 13, scope: !781)
!785 = !DILocation(line: 1096, column: 13, scope: !781)
!786 = !DILocation(line: 1097, column: 17, scope: !781)
!787 = !DILocation(line: 1098, column: 13, scope: !781)
!788 = !DILocation(line: 1102, column: 17, scope: !789)
!789 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1102, column: 17)
!790 = !DILocation(line: 1102, column: 31, scope: !789)
!791 = !DILocation(line: 1102, column: 17, scope: !781)
!792 = !DILocation(line: 1103, column: 29, scope: !793)
!793 = distinct !DILexicalBlock(scope: !789, file: !16, line: 1102, column: 42)
!794 = !DILocation(line: 1103, column: 17, scope: !793)
!795 = !DILocation(line: 1103, column: 66, scope: !793)
!796 = !DILocation(line: 1104, column: 29, scope: !793)
!797 = !DILocation(line: 1104, column: 17, scope: !793)
!798 = !DILocation(line: 1104, column: 66, scope: !793)
!799 = !DILocation(line: 1105, column: 13, scope: !793)
!800 = !DILocation(line: 1107, column: 27, scope: !781)
!801 = !DILocation(line: 1108, column: 13, scope: !781)
!802 = !DILocation(line: 1113, column: 21, scope: !803)
!803 = distinct !DILexicalBlock(scope: !804, file: !16, line: 1113, column: 21)
!804 = distinct !DILexicalBlock(scope: !805, file: !16, line: 1110, column: 20)
!805 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1110, column: 17)
!806 = !DILocation(line: 1113, column: 35, scope: !803)
!807 = !DILocation(line: 1113, column: 21, scope: !804)
!808 = !DILocation(line: 1114, column: 33, scope: !809)
!809 = distinct !DILexicalBlock(scope: !803, file: !16, line: 1113, column: 46)
!810 = !DILocation(line: 1114, column: 21, scope: !809)
!811 = !DILocation(line: 1114, column: 70, scope: !809)
!812 = !DILocation(line: 1115, column: 33, scope: !809)
!813 = !DILocation(line: 1115, column: 21, scope: !809)
!814 = !DILocation(line: 1115, column: 70, scope: !809)
!815 = !DILocation(line: 1116, column: 17, scope: !809)
!816 = !DILocation(line: 1118, column: 31, scope: !804)
!817 = !DILocation(line: 1124, column: 13, scope: !781)
!818 = !DILocation(line: 1127, column: 17, scope: !819)
!819 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1127, column: 17)
!820 = !DILocation(line: 1127, column: 31, scope: !819)
!821 = !DILocation(line: 1127, column: 17, scope: !781)
!822 = !DILocation(line: 1128, column: 31, scope: !823)
!823 = distinct !DILexicalBlock(scope: !819, file: !16, line: 1127, column: 42)
!824 = !DILocation(line: 1129, column: 13, scope: !823)
!825 = !DILocation(line: 1131, column: 25, scope: !781)
!826 = !DILocation(line: 1131, column: 13, scope: !781)
!827 = !DILocation(line: 1131, column: 62, scope: !781)
!828 = !DILocation(line: 1132, column: 25, scope: !781)
!829 = !DILocation(line: 1132, column: 13, scope: !781)
!830 = !DILocation(line: 1132, column: 62, scope: !781)
!831 = !DILocation(line: 1133, column: 36, scope: !832)
!832 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1133, column: 17)
!833 = !DILocation(line: 1133, column: 17, scope: !834)
!834 = !DILexicalBlockFile(scope: !832, file: !16, discriminator: 1)
!835 = !DILocation(line: 1133, column: 80, scope: !832)
!836 = !DILocation(line: 1133, column: 17, scope: !781)
!837 = !DILocation(line: 1134, column: 28, scope: !838)
!838 = distinct !DILexicalBlock(scope: !832, file: !16, line: 1133, column: 85)
!839 = !DILocation(line: 1136, column: 28, scope: !838)
!840 = !DILocation(line: 1134, column: 17, scope: !838)
!841 = !DILocation(line: 1137, column: 17, scope: !838)
!842 = !DILocation(line: 1139, column: 13, scope: !781)
!843 = !DILocation(line: 1142, column: 17, scope: !844)
!844 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1142, column: 17)
!845 = !DILocation(line: 1142, column: 31, scope: !844)
!846 = !DILocation(line: 1142, column: 17, scope: !781)
!847 = !DILocation(line: 1143, column: 31, scope: !848)
!848 = distinct !DILexicalBlock(scope: !844, file: !16, line: 1142, column: 42)
!849 = !DILocation(line: 1144, column: 13, scope: !848)
!850 = !DILocation(line: 1146, column: 25, scope: !781)
!851 = !DILocation(line: 1146, column: 13, scope: !781)
!852 = !DILocation(line: 1146, column: 62, scope: !781)
!853 = !DILocation(line: 1147, column: 25, scope: !781)
!854 = !DILocation(line: 1147, column: 13, scope: !781)
!855 = !DILocation(line: 1147, column: 62, scope: !781)
!856 = !DILocation(line: 1148, column: 36, scope: !857)
!857 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1148, column: 17)
!858 = !DILocation(line: 1148, column: 17, scope: !859)
!859 = !DILexicalBlockFile(scope: !857, file: !16, discriminator: 1)
!860 = !DILocation(line: 1148, column: 82, scope: !857)
!861 = !DILocation(line: 1148, column: 17, scope: !781)
!862 = !DILocation(line: 1149, column: 28, scope: !863)
!863 = distinct !DILexicalBlock(scope: !857, file: !16, line: 1148, column: 87)
!864 = !DILocation(line: 1151, column: 28, scope: !863)
!865 = !DILocation(line: 1149, column: 17, scope: !863)
!866 = !DILocation(line: 1152, column: 17, scope: !863)
!867 = !DILocation(line: 1154, column: 13, scope: !781)
!868 = !DILocation(line: 1157, column: 27, scope: !781)
!869 = !DILocation(line: 1158, column: 25, scope: !781)
!870 = !DILocation(line: 1158, column: 13, scope: !781)
!871 = !DILocation(line: 1158, column: 78, scope: !872)
!872 = !DILexicalBlockFile(scope: !781, file: !16, discriminator: 1)
!873 = !DILocation(line: 1158, column: 64, scope: !874)
!874 = !DILexicalBlockFile(scope: !781, file: !16, discriminator: 2)
!875 = !DILocation(line: 1158, column: 62, scope: !781)
!876 = !DILocation(line: 1159, column: 25, scope: !781)
!877 = !DILocation(line: 1159, column: 13, scope: !781)
!878 = !DILocation(line: 1159, column: 62, scope: !781)
!879 = !DILocation(line: 1160, column: 13, scope: !781)
!880 = !DILocation(line: 1162, column: 30, scope: !781)
!881 = !DILocation(line: 1163, column: 13, scope: !781)
!882 = !DILocation(line: 1166, column: 28, scope: !781)
!883 = !DILocation(line: 1166, column: 23, scope: !872)
!884 = !DILocation(line: 1166, column: 23, scope: !781)
!885 = !DILocation(line: 1166, column: 21, scope: !781)
!886 = !DILocation(line: 1167, column: 13, scope: !781)
!887 = !DILocation(line: 1169, column: 29, scope: !781)
!888 = !DILocation(line: 1170, column: 38, scope: !781)
!889 = !DILocation(line: 1170, column: 33, scope: !872)
!890 = !DILocation(line: 1170, column: 31, scope: !781)
!891 = !DILocation(line: 1171, column: 18, scope: !892)
!892 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1171, column: 17)
!893 = !DILocation(line: 1171, column: 17, scope: !781)
!894 = !DILocation(line: 1172, column: 28, scope: !892)
!895 = !DILocation(line: 1172, column: 73, scope: !892)
!896 = !DILocation(line: 1172, column: 17, scope: !892)
!897 = !DILocation(line: 1173, column: 13, scope: !781)
!898 = !DILocation(line: 1175, column: 29, scope: !781)
!899 = !DILocation(line: 1178, column: 38, scope: !781)
!900 = !DILocation(line: 1178, column: 33, scope: !872)
!901 = !DILocation(line: 1178, column: 31, scope: !781)
!902 = !DILocation(line: 1179, column: 18, scope: !903)
!903 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1179, column: 17)
!904 = !DILocation(line: 1179, column: 17, scope: !781)
!905 = !DILocation(line: 1180, column: 28, scope: !903)
!906 = !DILocation(line: 1182, column: 40, scope: !903)
!907 = !DILocation(line: 1180, column: 17, scope: !903)
!908 = !DILocation(line: 1183, column: 13, scope: !781)
!909 = !DILocation(line: 1185, column: 40, scope: !781)
!910 = !DILocation(line: 1185, column: 21, scope: !781)
!911 = !DILocation(line: 1186, column: 13, scope: !781)
!912 = !DILocation(line: 1188, column: 27, scope: !781)
!913 = !DILocation(line: 1188, column: 25, scope: !781)
!914 = !DILocation(line: 1189, column: 13, scope: !781)
!915 = !DILocation(line: 1191, column: 30, scope: !916)
!916 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1191, column: 17)
!917 = !DILocation(line: 1191, column: 18, scope: !918)
!918 = !DILexicalBlockFile(scope: !916, file: !16, discriminator: 1)
!919 = !DILocation(line: 1191, column: 18, scope: !916)
!920 = !DILocation(line: 1191, column: 17, scope: !781)
!921 = !DILocation(line: 1192, column: 17, scope: !916)
!922 = !DILocation(line: 1193, column: 13, scope: !781)
!923 = !DILocation(line: 1195, column: 24, scope: !781)
!924 = !DILocation(line: 1195, column: 22, scope: !781)
!925 = !DILocation(line: 1196, column: 13, scope: !781)
!926 = !DILocation(line: 1198, column: 26, scope: !781)
!927 = !DILocation(line: 1199, column: 13, scope: !781)
!928 = !DILocation(line: 1201, column: 33, scope: !781)
!929 = !DILocation(line: 1201, column: 31, scope: !781)
!930 = !DILocation(line: 1202, column: 13, scope: !781)
!931 = !DILocation(line: 1204, column: 29, scope: !932)
!932 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1204, column: 17)
!933 = !DILocation(line: 1204, column: 18, scope: !934)
!934 = !DILexicalBlockFile(scope: !932, file: !16, discriminator: 1)
!935 = !DILocation(line: 1204, column: 18, scope: !932)
!936 = !DILocation(line: 1204, column: 17, scope: !781)
!937 = !DILocation(line: 1205, column: 17, scope: !932)
!938 = !DILocation(line: 1206, column: 13, scope: !781)
!939 = !DILocation(line: 1208, column: 26, scope: !781)
!940 = !DILocation(line: 1208, column: 24, scope: !781)
!941 = !DILocation(line: 1209, column: 13, scope: !781)
!942 = !DILocation(line: 1211, column: 29, scope: !943)
!943 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1211, column: 17)
!944 = !DILocation(line: 1211, column: 18, scope: !945)
!945 = !DILexicalBlockFile(scope: !943, file: !16, discriminator: 1)
!946 = !DILocation(line: 1211, column: 18, scope: !943)
!947 = !DILocation(line: 1211, column: 17, scope: !781)
!948 = !DILocation(line: 1212, column: 17, scope: !943)
!949 = !DILocation(line: 1213, column: 13, scope: !781)
!950 = !DILocation(line: 1215, column: 23, scope: !781)
!951 = !DILocation(line: 1215, column: 21, scope: !781)
!952 = !DILocation(line: 1216, column: 13, scope: !781)
!953 = !DILocation(line: 1218, column: 28, scope: !781)
!954 = !DILocation(line: 1218, column: 26, scope: !781)
!955 = !DILocation(line: 1219, column: 13, scope: !781)
!956 = !DILocation(line: 1222, column: 22, scope: !781)
!957 = !DILocation(line: 1222, column: 20, scope: !781)
!958 = !DILocation(line: 1224, column: 13, scope: !781)
!959 = !DILocation(line: 1226, column: 29, scope: !960)
!960 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1226, column: 17)
!961 = !DILocation(line: 1226, column: 18, scope: !962)
!962 = !DILexicalBlockFile(scope: !960, file: !16, discriminator: 1)
!963 = !DILocation(line: 1226, column: 18, scope: !960)
!964 = !DILocation(line: 1226, column: 17, scope: !781)
!965 = !DILocation(line: 1227, column: 17, scope: !960)
!966 = !DILocation(line: 1228, column: 13, scope: !781)
!967 = !DILocation(line: 1230, column: 28, scope: !781)
!968 = !DILocation(line: 1230, column: 26, scope: !781)
!969 = !DILocation(line: 1231, column: 13, scope: !781)
!970 = !DILocation(line: 1233, column: 29, scope: !971)
!971 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1233, column: 17)
!972 = !DILocation(line: 1233, column: 18, scope: !973)
!973 = !DILexicalBlockFile(scope: !971, file: !16, discriminator: 1)
!974 = !DILocation(line: 1233, column: 18, scope: !971)
!975 = !DILocation(line: 1233, column: 17, scope: !781)
!976 = !DILocation(line: 1234, column: 17, scope: !971)
!977 = !DILocation(line: 1235, column: 13, scope: !781)
!978 = !DILocation(line: 1237, column: 24, scope: !781)
!979 = !DILocation(line: 1237, column: 22, scope: !781)
!980 = !DILocation(line: 1238, column: 13, scope: !781)
!981 = !DILocation(line: 1240, column: 27, scope: !781)
!982 = !DILocation(line: 1240, column: 25, scope: !781)
!983 = !DILocation(line: 1241, column: 13, scope: !781)
!984 = !DILocation(line: 1243, column: 29, scope: !781)
!985 = !DILocation(line: 1243, column: 27, scope: !781)
!986 = !DILocation(line: 1244, column: 13, scope: !781)
!987 = !DILocation(line: 1246, column: 20, scope: !781)
!988 = !DILocation(line: 1247, column: 13, scope: !781)
!989 = !DILocation(line: 1249, column: 22, scope: !781)
!990 = !DILocation(line: 1249, column: 20, scope: !781)
!991 = !DILocation(line: 1250, column: 13, scope: !781)
!992 = !DILocation(line: 1252, column: 22, scope: !781)
!993 = !DILocation(line: 1253, column: 13, scope: !781)
!994 = !DILocation(line: 1255, column: 24, scope: !781)
!995 = !DILocation(line: 1255, column: 22, scope: !781)
!996 = !DILocation(line: 1256, column: 13, scope: !781)
!997 = !DILocation(line: 1258, column: 25, scope: !781)
!998 = !DILocation(line: 1258, column: 23, scope: !781)
!999 = !DILocation(line: 1259, column: 13, scope: !781)
!1000 = !DILocation(line: 1261, column: 22, scope: !781)
!1001 = !DILocation(line: 1262, column: 13, scope: !781)
!1002 = !DILocation(line: 1264, column: 23, scope: !781)
!1003 = !DILocation(line: 1265, column: 13, scope: !781)
!1004 = !DILocation(line: 1267, column: 29, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1267, column: 17)
!1006 = !DILocation(line: 1267, column: 18, scope: !1007)
!1007 = !DILexicalBlockFile(scope: !1005, file: !16, discriminator: 1)
!1008 = !DILocation(line: 1267, column: 18, scope: !1005)
!1009 = !DILocation(line: 1267, column: 17, scope: !781)
!1010 = !DILocation(line: 1268, column: 17, scope: !1005)
!1011 = !DILocation(line: 1269, column: 13, scope: !781)
!1012 = !DILocation(line: 1270, column: 46, scope: !781)
!1013 = !DILocation(line: 1274, column: 17, scope: !1014)
!1014 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1274, column: 17)
!1015 = !DILocation(line: 1274, column: 26, scope: !1014)
!1016 = !DILocation(line: 1274, column: 17, scope: !781)
!1017 = !DILocation(line: 1275, column: 28, scope: !1014)
!1018 = !DILocation(line: 1275, column: 26, scope: !1014)
!1019 = !DILocation(line: 1275, column: 17, scope: !1014)
!1020 = !DILocation(line: 1276, column: 17, scope: !1021)
!1021 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1276, column: 17)
!1022 = !DILocation(line: 1276, column: 26, scope: !1021)
!1023 = !DILocation(line: 1277, column: 16, scope: !1021)
!1024 = !DILocation(line: 1277, column: 43, scope: !1025)
!1025 = !DILexicalBlockFile(scope: !1021, file: !16, discriminator: 1)
!1026 = !DILocation(line: 1277, column: 53, scope: !1025)
!1027 = !DILocation(line: 1277, column: 20, scope: !1028)
!1028 = !DILexicalBlockFile(scope: !1025, file: !16, discriminator: 2)
!1029 = !DILocation(line: 1277, column: 20, scope: !1025)
!1030 = !DILocation(line: 1278, column: 17, scope: !1021)
!1031 = !DILocation(line: 1278, column: 44, scope: !1025)
!1032 = !DILocation(line: 1278, column: 54, scope: !1025)
!1033 = !DILocation(line: 1278, column: 21, scope: !1028)
!1034 = !DILocation(line: 1278, column: 21, scope: !1025)
!1035 = !DILocation(line: 1276, column: 17, scope: !872)
!1036 = !DILocation(line: 1279, column: 28, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1021, file: !16, line: 1278, column: 66)
!1038 = !DILocation(line: 1279, column: 72, scope: !1037)
!1039 = !DILocation(line: 1279, column: 17, scope: !1037)
!1040 = !DILocation(line: 1280, column: 17, scope: !1037)
!1041 = !DILocation(line: 1282, column: 13, scope: !781)
!1042 = !DILocation(line: 1283, column: 46, scope: !781)
!1043 = !DILocation(line: 1284, column: 29, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1284, column: 17)
!1045 = !DILocation(line: 1284, column: 32, scope: !1044)
!1046 = !DILocation(line: 1284, column: 18, scope: !1044)
!1047 = !DILocation(line: 1284, column: 17, scope: !781)
!1048 = !DILocation(line: 1285, column: 17, scope: !1044)
!1049 = !DILocation(line: 1286, column: 23, scope: !781)
!1050 = !DILocation(line: 1287, column: 13, scope: !781)
!1051 = !DILocation(line: 1288, column: 46, scope: !781)
!1052 = !DILocation(line: 1289, column: 30, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1289, column: 17)
!1054 = !DILocation(line: 1289, column: 18, scope: !1053)
!1055 = !DILocation(line: 1289, column: 17, scope: !781)
!1056 = !DILocation(line: 1290, column: 17, scope: !1053)
!1057 = !DILocation(line: 1291, column: 13, scope: !781)
!1058 = !DILocation(line: 1293, column: 38, scope: !781)
!1059 = !DILocation(line: 1294, column: 13, scope: !781)
!1060 = !DILocation(line: 1296, column: 31, scope: !781)
!1061 = !DILocation(line: 1297, column: 13, scope: !781)
!1062 = !DILocation(line: 1299, column: 25, scope: !781)
!1063 = !DILocation(line: 1300, column: 13, scope: !781)
!1064 = !DILocation(line: 1302, column: 22, scope: !781)
!1065 = !DILocation(line: 1302, column: 20, scope: !781)
!1066 = !DILocation(line: 1303, column: 13, scope: !781)
!1067 = !DILocation(line: 1305, column: 22, scope: !781)
!1068 = !DILocation(line: 1306, column: 13, scope: !781)
!1069 = !DILocation(line: 1308, column: 24, scope: !781)
!1070 = !DILocation(line: 1308, column: 22, scope: !781)
!1071 = !DILocation(line: 1309, column: 13, scope: !781)
!1072 = !DILocation(line: 1311, column: 25, scope: !781)
!1073 = !DILocation(line: 1311, column: 23, scope: !781)
!1074 = !DILocation(line: 1312, column: 13, scope: !781)
!1075 = !DILocation(line: 1314, column: 20, scope: !781)
!1076 = !DILocation(line: 1315, column: 13, scope: !781)
!1077 = !DILocation(line: 1317, column: 34, scope: !781)
!1078 = !DILocation(line: 1317, column: 20, scope: !781)
!1079 = !DILocation(line: 1318, column: 13, scope: !781)
!1080 = !DILocation(line: 1320, column: 23, scope: !781)
!1081 = !DILocation(line: 1321, column: 13, scope: !781)
!1082 = !DILocation(line: 1323, column: 23, scope: !781)
!1083 = !DILocation(line: 1324, column: 13, scope: !781)
!1084 = !DILocation(line: 1326, column: 21, scope: !781)
!1085 = !DILocation(line: 1327, column: 13, scope: !781)
!1086 = !DILocation(line: 1329, column: 27, scope: !781)
!1087 = !DILocation(line: 1330, column: 13, scope: !781)
!1088 = !DILocation(line: 1333, column: 28, scope: !781)
!1089 = !DILocation(line: 1335, column: 13, scope: !781)
!1090 = !DILocation(line: 1338, column: 48, scope: !781)
!1091 = !DILocation(line: 1338, column: 28, scope: !781)
!1092 = !DILocation(line: 1340, column: 13, scope: !781)
!1093 = !DILocation(line: 1343, column: 28, scope: !781)
!1094 = !DILocation(line: 1344, column: 38, scope: !781)
!1095 = !DILocation(line: 1344, column: 33, scope: !872)
!1096 = !DILocation(line: 1344, column: 31, scope: !781)
!1097 = !DILocation(line: 1346, column: 13, scope: !781)
!1098 = !DILocation(line: 1349, column: 28, scope: !781)
!1099 = !DILocation(line: 1350, column: 33, scope: !1100)
!1100 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1350, column: 17)
!1101 = !DILocation(line: 1350, column: 18, scope: !1102)
!1102 = !DILexicalBlockFile(scope: !1100, file: !16, discriminator: 1)
!1103 = !DILocation(line: 1350, column: 18, scope: !1100)
!1104 = !DILocation(line: 1350, column: 17, scope: !781)
!1105 = !DILocation(line: 1354, column: 28, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1100, file: !16, line: 1353, column: 71)
!1107 = !DILocation(line: 1354, column: 17, scope: !1106)
!1108 = !DILocation(line: 1355, column: 17, scope: !1106)
!1109 = !DILocation(line: 1358, column: 13, scope: !781)
!1110 = !DILocation(line: 1361, column: 28, scope: !781)
!1111 = !DILocation(line: 1362, column: 32, scope: !781)
!1112 = !DILocation(line: 1362, column: 30, scope: !781)
!1113 = !DILocation(line: 1364, column: 13, scope: !781)
!1114 = !DILocation(line: 1366, column: 19, scope: !781)
!1115 = !DILocation(line: 1367, column: 13, scope: !781)
!1116 = !DILocation(line: 1369, column: 38, scope: !781)
!1117 = !DILocation(line: 1369, column: 25, scope: !872)
!1118 = !DILocation(line: 1369, column: 23, scope: !781)
!1119 = !DILocation(line: 1370, column: 13, scope: !781)
!1120 = !DILocation(line: 1375, column: 13, scope: !781)
!1121 = !DILocation(line: 1377, column: 20, scope: !781)
!1122 = !DILocation(line: 1378, column: 13, scope: !781)
!1123 = !DILocation(line: 1380, column: 20, scope: !781)
!1124 = !DILocation(line: 1381, column: 13, scope: !781)
!1125 = !DILocation(line: 1383, column: 19, scope: !781)
!1126 = !DILocation(line: 1384, column: 13, scope: !781)
!1127 = !DILocation(line: 1386, column: 20, scope: !781)
!1128 = !DILocation(line: 1387, column: 13, scope: !781)
!1129 = !DILocation(line: 1389, column: 21, scope: !781)
!1130 = !DILocation(line: 1390, column: 13, scope: !781)
!1131 = !DILocation(line: 1392, column: 51, scope: !781)
!1132 = !DILocation(line: 1392, column: 31, scope: !781)
!1133 = !DILocation(line: 1392, column: 21, scope: !781)
!1134 = !DILocation(line: 1393, column: 13, scope: !781)
!1135 = !DILocation(line: 1396, column: 20, scope: !781)
!1136 = !DILocation(line: 1398, column: 13, scope: !781)
!1137 = !DILocation(line: 1400, column: 33, scope: !781)
!1138 = !DILocation(line: 1401, column: 13, scope: !781)
!1139 = !DILocation(line: 1403, column: 28, scope: !781)
!1140 = !DILocation(line: 1403, column: 26, scope: !781)
!1141 = !DILocation(line: 1404, column: 13, scope: !781)
!1142 = !DILocation(line: 1407, column: 33, scope: !781)
!1143 = !DILocation(line: 1407, column: 31, scope: !781)
!1144 = !DILocation(line: 1409, column: 13, scope: !781)
!1145 = !DILocation(line: 1411, column: 32, scope: !1146)
!1146 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1411, column: 13)
!1147 = !DILocation(line: 1411, column: 30, scope: !1146)
!1148 = !DILocation(line: 1411, column: 20, scope: !1146)
!1149 = !DILocation(line: 1411, column: 18, scope: !1146)
!1150 = !DILocation(line: 1411, column: 44, scope: !1151)
!1151 = !DILexicalBlockFile(scope: !1152, file: !16, discriminator: 1)
!1152 = distinct !DILexicalBlock(scope: !1146, file: !16, line: 1411, column: 13)
!1153 = !DILocation(line: 1411, column: 43, scope: !1151)
!1154 = !DILocation(line: 1411, column: 13, scope: !1151)
!1155 = !DILocation(line: 1412, column: 38, scope: !1156)
!1156 = distinct !DILexicalBlock(scope: !1157, file: !16, line: 1412, column: 20)
!1157 = distinct !DILexicalBlock(scope: !1152, file: !16, line: 1411, column: 52)
!1158 = !DILocation(line: 1412, column: 37, scope: !1156)
!1159 = !DILocation(line: 1412, column: 41, scope: !1156)
!1160 = !DILocation(line: 1412, column: 21, scope: !1156)
!1161 = !DILocation(line: 1412, column: 23, scope: !1156)
!1162 = !DILocation(line: 1412, column: 22, scope: !1156)
!1163 = !DILocation(line: 1412, column: 24, scope: !1156)
!1164 = !DILocation(line: 1412, column: 20, scope: !1157)
!1165 = !DILocation(line: 1413, column: 21, scope: !1156)
!1166 = !DILocation(line: 1414, column: 28, scope: !1157)
!1167 = !DILocation(line: 1414, column: 64, scope: !1157)
!1168 = !DILocation(line: 1414, column: 17, scope: !1157)
!1169 = !DILocation(line: 1415, column: 17, scope: !1157)
!1170 = !DILocation(line: 1411, column: 48, scope: !1171)
!1171 = !DILexicalBlockFile(scope: !1152, file: !16, discriminator: 2)
!1172 = !DILocation(line: 1411, column: 13, scope: !1171)
!1173 = distinct !{!1173, !1174}
!1174 = !DILocation(line: 1411, column: 13, scope: !781)
!1175 = !DILocation(line: 1417, column: 13, scope: !781)
!1176 = !DILocation(line: 1419, column: 24, scope: !781)
!1177 = !DILocation(line: 1419, column: 22, scope: !781)
!1178 = !DILocation(line: 1420, column: 13, scope: !781)
!1179 = !DILocation(line: 1423, column: 33, scope: !781)
!1180 = !DILocation(line: 1423, column: 31, scope: !781)
!1181 = !DILocation(line: 1424, column: 17, scope: !1182)
!1182 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1424, column: 17)
!1183 = !DILocation(line: 1424, column: 29, scope: !1182)
!1184 = !DILocation(line: 1424, column: 17, scope: !781)
!1185 = !DILocation(line: 1425, column: 29, scope: !1182)
!1186 = !DILocation(line: 1425, column: 17, scope: !1182)
!1187 = !DILocation(line: 1427, column: 13, scope: !781)
!1188 = !DILocation(line: 1430, column: 27, scope: !781)
!1189 = !DILocation(line: 1430, column: 25, scope: !781)
!1190 = !DILocation(line: 1431, column: 17, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1431, column: 17)
!1192 = !DILocation(line: 1431, column: 29, scope: !1191)
!1193 = !DILocation(line: 1431, column: 17, scope: !781)
!1194 = !DILocation(line: 1432, column: 29, scope: !1191)
!1195 = !DILocation(line: 1432, column: 17, scope: !1191)
!1196 = !DILocation(line: 1434, column: 13, scope: !781)
!1197 = !DILocation(line: 1436, column: 17, scope: !781)
!1198 = !DILocation(line: 1437, column: 13, scope: !781)
!1199 = !DILocation(line: 1439, column: 17, scope: !781)
!1200 = !DILocation(line: 1440, column: 13, scope: !781)
!1201 = !DILocation(line: 1442, column: 17, scope: !781)
!1202 = !DILocation(line: 1443, column: 13, scope: !781)
!1203 = !DILocation(line: 1445, column: 17, scope: !781)
!1204 = !DILocation(line: 1446, column: 13, scope: !781)
!1205 = !DILocation(line: 1448, column: 26, scope: !781)
!1206 = !DILocation(line: 1448, column: 24, scope: !781)
!1207 = !DILocation(line: 1449, column: 13, scope: !781)
!1208 = !DILocation(line: 1451, column: 25, scope: !781)
!1209 = !DILocation(line: 1452, column: 25, scope: !781)
!1210 = !DILocation(line: 1453, column: 13, scope: !781)
!1211 = !DILocation(line: 1455, column: 25, scope: !781)
!1212 = !DILocation(line: 1456, column: 25, scope: !781)
!1213 = !DILocation(line: 1457, column: 13, scope: !781)
!1214 = !DILocation(line: 1459, column: 25, scope: !781)
!1215 = !DILocation(line: 1460, column: 25, scope: !781)
!1216 = !DILocation(line: 1461, column: 13, scope: !781)
!1217 = !DILocation(line: 1463, column: 25, scope: !781)
!1218 = !DILocation(line: 1464, column: 25, scope: !781)
!1219 = !DILocation(line: 1465, column: 13, scope: !781)
!1220 = !DILocation(line: 1467, column: 25, scope: !781)
!1221 = !DILocation(line: 1468, column: 25, scope: !781)
!1222 = !DILocation(line: 1469, column: 13, scope: !781)
!1223 = !DILocation(line: 1472, column: 20, scope: !781)
!1224 = !DILocation(line: 1472, column: 18, scope: !781)
!1225 = !DILocation(line: 1473, column: 25, scope: !781)
!1226 = !DILocation(line: 1475, column: 13, scope: !781)
!1227 = !DILocation(line: 1478, column: 20, scope: !781)
!1228 = !DILocation(line: 1478, column: 18, scope: !781)
!1229 = !DILocation(line: 1479, column: 25, scope: !781)
!1230 = !DILocation(line: 1480, column: 25, scope: !781)
!1231 = !DILocation(line: 1481, column: 25, scope: !781)
!1232 = !DILocation(line: 1483, column: 13, scope: !781)
!1233 = !DILocation(line: 1486, column: 20, scope: !781)
!1234 = !DILocation(line: 1486, column: 18, scope: !781)
!1235 = !DILocation(line: 1487, column: 25, scope: !781)
!1236 = !DILocation(line: 1488, column: 25, scope: !781)
!1237 = !DILocation(line: 1489, column: 25, scope: !781)
!1238 = !DILocation(line: 1491, column: 13, scope: !781)
!1239 = !DILocation(line: 1496, column: 13, scope: !781)
!1240 = !DILocation(line: 1501, column: 13, scope: !781)
!1241 = !DILocation(line: 1504, column: 29, scope: !781)
!1242 = !DILocation(line: 1506, column: 13, scope: !781)
!1243 = !DILocation(line: 1509, column: 31, scope: !781)
!1244 = !DILocation(line: 1509, column: 26, scope: !872)
!1245 = !DILocation(line: 1509, column: 24, scope: !781)
!1246 = !DILocation(line: 1511, column: 13, scope: !781)
!1247 = !DILocation(line: 1514, column: 24, scope: !781)
!1248 = !DILocation(line: 1516, column: 13, scope: !781)
!1249 = !DILocation(line: 1518, column: 23, scope: !781)
!1250 = !DILocation(line: 1519, column: 13, scope: !781)
!1251 = !DILocation(line: 1521, column: 33, scope: !781)
!1252 = !DILocation(line: 1521, column: 31, scope: !781)
!1253 = !DILocation(line: 1522, column: 13, scope: !781)
!1254 = !DILocation(line: 1524, column: 35, scope: !781)
!1255 = !DILocation(line: 1524, column: 22, scope: !872)
!1256 = !DILocation(line: 1524, column: 20, scope: !781)
!1257 = !DILocation(line: 1525, column: 13, scope: !781)
!1258 = !DILocation(line: 1526, column: 46, scope: !781)
!1259 = !DILocation(line: 1527, column: 27, scope: !1260)
!1260 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1527, column: 17)
!1261 = !DILocation(line: 1527, column: 18, scope: !1260)
!1262 = !DILocation(line: 1527, column: 17, scope: !781)
!1263 = !DILocation(line: 1528, column: 17, scope: !1260)
!1264 = !DILocation(line: 1529, column: 13, scope: !781)
!1265 = !DILocation(line: 1531, column: 36, scope: !781)
!1266 = !DILocation(line: 1531, column: 23, scope: !781)
!1267 = !DILocation(line: 1531, column: 34, scope: !781)
!1268 = !DILocation(line: 1532, column: 13, scope: !781)
!1269 = !DILocation(line: 1534, column: 23, scope: !781)
!1270 = !DILocation(line: 1534, column: 39, scope: !781)
!1271 = !DILocation(line: 1535, column: 13, scope: !781)
!1272 = !DILocation(line: 1537, column: 28, scope: !781)
!1273 = !DILocation(line: 1537, column: 26, scope: !781)
!1274 = !DILocation(line: 1538, column: 13, scope: !781)
!1275 = !DILocation(line: 1540, column: 27, scope: !781)
!1276 = !DILocation(line: 1540, column: 25, scope: !781)
!1277 = !DILocation(line: 1541, column: 13, scope: !781)
!1278 = !DILocation(line: 1544, column: 33, scope: !781)
!1279 = !DILocation(line: 1544, column: 31, scope: !781)
!1280 = !DILocation(line: 1546, column: 13, scope: !781)
!1281 = !DILocation(line: 1548, column: 23, scope: !781)
!1282 = !DILocation(line: 1548, column: 21, scope: !781)
!1283 = !DILocation(line: 1549, column: 13, scope: !781)
!1284 = !DILocation(line: 1552, column: 29, scope: !781)
!1285 = !DILocation(line: 1552, column: 27, scope: !781)
!1286 = !DILocation(line: 1554, column: 13, scope: !781)
!1287 = !DILocation(line: 1556, column: 33, scope: !781)
!1288 = !DILocation(line: 1556, column: 31, scope: !781)
!1289 = !DILocation(line: 1557, column: 13, scope: !781)
!1290 = !DILocation(line: 1559, column: 36, scope: !781)
!1291 = !DILocation(line: 1559, column: 31, scope: !872)
!1292 = !DILocation(line: 1559, column: 29, scope: !781)
!1293 = !DILocation(line: 1560, column: 13, scope: !781)
!1294 = !DILocation(line: 1562, column: 19, scope: !781)
!1295 = !DILocation(line: 1563, column: 13, scope: !781)
!1296 = !DILocation(line: 1565, column: 38, scope: !781)
!1297 = !DILocation(line: 1565, column: 33, scope: !872)
!1298 = !DILocation(line: 1565, column: 31, scope: !781)
!1299 = !DILocation(line: 1566, column: 13, scope: !781)
!1300 = !DILocation(line: 1568, column: 40, scope: !781)
!1301 = !DILocation(line: 1568, column: 35, scope: !872)
!1302 = !DILocation(line: 1568, column: 33, scope: !781)
!1303 = !DILocation(line: 1569, column: 13, scope: !781)
!1304 = !DILocation(line: 1571, column: 34, scope: !781)
!1305 = !DILocation(line: 1571, column: 29, scope: !872)
!1306 = !DILocation(line: 1571, column: 27, scope: !781)
!1307 = !DILocation(line: 1572, column: 13, scope: !781)
!1308 = !DILocation(line: 1574, column: 33, scope: !781)
!1309 = !DILocation(line: 1574, column: 28, scope: !872)
!1310 = !DILocation(line: 1574, column: 26, scope: !781)
!1311 = !DILocation(line: 1575, column: 13, scope: !781)
!1312 = !DILocation(line: 1577, column: 27, scope: !781)
!1313 = !DILocation(line: 1577, column: 25, scope: !781)
!1314 = !DILocation(line: 1578, column: 13, scope: !781)
!1315 = !DILocation(line: 1580, column: 35, scope: !781)
!1316 = !DILocation(line: 1580, column: 30, scope: !872)
!1317 = !DILocation(line: 1580, column: 28, scope: !781)
!1318 = !DILocation(line: 1581, column: 17, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1581, column: 17)
!1320 = !DILocation(line: 1581, column: 32, scope: !1319)
!1321 = !DILocation(line: 1581, column: 17, scope: !781)
!1322 = !DILocation(line: 1582, column: 28, scope: !1323)
!1323 = distinct !DILexicalBlock(scope: !1319, file: !16, line: 1581, column: 37)
!1324 = !DILocation(line: 1582, column: 17, scope: !1323)
!1325 = !DILocation(line: 1583, column: 17, scope: !1323)
!1326 = !DILocation(line: 1585, column: 13, scope: !781)
!1327 = !DILocation(line: 1587, column: 40, scope: !781)
!1328 = !DILocation(line: 1587, column: 35, scope: !872)
!1329 = !DILocation(line: 1587, column: 33, scope: !781)
!1330 = !DILocation(line: 1588, column: 17, scope: !1331)
!1331 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1588, column: 17)
!1332 = !DILocation(line: 1588, column: 37, scope: !1331)
!1333 = !DILocation(line: 1588, column: 17, scope: !781)
!1334 = !DILocation(line: 1589, column: 28, scope: !1335)
!1335 = distinct !DILexicalBlock(scope: !1331, file: !16, line: 1588, column: 42)
!1336 = !DILocation(line: 1589, column: 17, scope: !1335)
!1337 = !DILocation(line: 1590, column: 17, scope: !1335)
!1338 = !DILocation(line: 1592, column: 13, scope: !781)
!1339 = !DILocation(line: 1594, column: 24, scope: !781)
!1340 = !DILocation(line: 1595, column: 17, scope: !1341)
!1341 = distinct !DILexicalBlock(scope: !781, file: !16, line: 1595, column: 17)
!1342 = !DILocation(line: 1595, column: 32, scope: !1341)
!1343 = !DILocation(line: 1595, column: 17, scope: !781)
!1344 = !DILocation(line: 1596, column: 32, scope: !1341)
!1345 = !DILocation(line: 1596, column: 17, scope: !1341)
!1346 = !DILocation(line: 1597, column: 13, scope: !781)
!1347 = !DILocation(line: 1077, column: 5, scope: !1348)
!1348 = !DILexicalBlockFile(scope: !427, file: !16, discriminator: 2)
!1349 = distinct !{!1349, !696}
!1350 = !DILocation(line: 1600, column: 12, scope: !427)
!1351 = !DILocation(line: 1600, column: 10, scope: !427)
!1352 = !DILocation(line: 1601, column: 12, scope: !427)
!1353 = !DILocation(line: 1601, column: 10, scope: !427)
!1354 = !DILocation(line: 1604, column: 9, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1604, column: 9)
!1356 = !DILocation(line: 1604, column: 21, scope: !1355)
!1357 = !DILocation(line: 1604, column: 31, scope: !1355)
!1358 = !DILocation(line: 1604, column: 34, scope: !1359)
!1359 = !DILexicalBlockFile(scope: !1355, file: !16, discriminator: 1)
!1360 = !DILocation(line: 1604, column: 52, scope: !1359)
!1361 = !DILocation(line: 1604, column: 9, scope: !1359)
!1362 = !DILocation(line: 1605, column: 20, scope: !1363)
!1363 = distinct !DILexicalBlock(scope: !1355, file: !16, line: 1604, column: 68)
!1364 = !DILocation(line: 1605, column: 9, scope: !1363)
!1365 = !DILocation(line: 1606, column: 9, scope: !1363)
!1366 = !DILocation(line: 1610, column: 9, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1610, column: 9)
!1368 = !DILocation(line: 1610, column: 13, scope: !1367)
!1369 = !DILocation(line: 1610, column: 16, scope: !1370)
!1370 = !DILexicalBlockFile(scope: !1367, file: !16, discriminator: 1)
!1371 = !DILocation(line: 1610, column: 28, scope: !1370)
!1372 = !DILocation(line: 1610, column: 9, scope: !1370)
!1373 = !DILocation(line: 1611, column: 20, scope: !1374)
!1374 = distinct !DILexicalBlock(scope: !1367, file: !16, line: 1610, column: 42)
!1375 = !DILocation(line: 1611, column: 9, scope: !1374)
!1376 = !DILocation(line: 1612, column: 9, scope: !1374)
!1377 = !DILocation(line: 1615, column: 9, scope: !1378)
!1378 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1615, column: 9)
!1379 = !DILocation(line: 1615, column: 20, scope: !1378)
!1380 = !DILocation(line: 1615, column: 23, scope: !1381)
!1381 = !DILexicalBlockFile(scope: !1378, file: !16, discriminator: 1)
!1382 = !DILocation(line: 1615, column: 35, scope: !1381)
!1383 = !DILocation(line: 1615, column: 9, scope: !1381)
!1384 = !DILocation(line: 1616, column: 20, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1378, file: !16, line: 1615, column: 49)
!1386 = !DILocation(line: 1616, column: 9, scope: !1385)
!1387 = !DILocation(line: 1617, column: 9, scope: !1385)
!1388 = !DILocation(line: 1621, column: 9, scope: !1389)
!1389 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1621, column: 9)
!1390 = !DILocation(line: 1621, column: 19, scope: !1389)
!1391 = !DILocation(line: 1621, column: 22, scope: !1392)
!1392 = !DILexicalBlockFile(scope: !1389, file: !16, discriminator: 1)
!1393 = !DILocation(line: 1621, column: 34, scope: !1392)
!1394 = !DILocation(line: 1621, column: 9, scope: !1392)
!1395 = !DILocation(line: 1622, column: 20, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1389, file: !16, line: 1621, column: 49)
!1397 = !DILocation(line: 1622, column: 9, scope: !1396)
!1398 = !DILocation(line: 1623, column: 9, scope: !1396)
!1399 = !DILocation(line: 1627, column: 9, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1627, column: 9)
!1401 = !DILocation(line: 1627, column: 23, scope: !1400)
!1402 = !DILocation(line: 1627, column: 33, scope: !1400)
!1403 = !DILocation(line: 1627, column: 36, scope: !1404)
!1404 = !DILexicalBlockFile(scope: !1400, file: !16, discriminator: 1)
!1405 = !DILocation(line: 1627, column: 48, scope: !1404)
!1406 = !DILocation(line: 1627, column: 9, scope: !1404)
!1407 = !DILocation(line: 1628, column: 20, scope: !1408)
!1408 = distinct !DILexicalBlock(scope: !1400, file: !16, line: 1627, column: 64)
!1409 = !DILocation(line: 1628, column: 9, scope: !1408)
!1410 = !DILocation(line: 1630, column: 9, scope: !1408)
!1411 = !DILocation(line: 1633, column: 9, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1633, column: 9)
!1413 = !DILocation(line: 1633, column: 20, scope: !1412)
!1414 = !DILocation(line: 1633, column: 24, scope: !1415)
!1415 = !DILexicalBlockFile(scope: !1412, file: !16, discriminator: 1)
!1416 = !DILocation(line: 1633, column: 28, scope: !1415)
!1417 = !DILocation(line: 1633, column: 32, scope: !1415)
!1418 = !DILocation(line: 1633, column: 35, scope: !1419)
!1419 = !DILexicalBlockFile(scope: !1412, file: !16, discriminator: 2)
!1420 = !DILocation(line: 1633, column: 9, scope: !1419)
!1421 = !DILocation(line: 1634, column: 20, scope: !1422)
!1422 = distinct !DILexicalBlock(scope: !1412, file: !16, line: 1633, column: 41)
!1423 = !DILocation(line: 1634, column: 9, scope: !1422)
!1424 = !DILocation(line: 1636, column: 9, scope: !1422)
!1425 = !DILocation(line: 1650, column: 21, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1650, column: 9)
!1427 = !DILocation(line: 1650, column: 30, scope: !1426)
!1428 = !DILocation(line: 1650, column: 10, scope: !1426)
!1429 = !DILocation(line: 1650, column: 9, scope: !427)
!1430 = !DILocation(line: 1651, column: 20, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1426, file: !16, line: 1650, column: 56)
!1432 = !DILocation(line: 1651, column: 9, scope: !1431)
!1433 = !DILocation(line: 1652, column: 9, scope: !1431)
!1434 = !DILocation(line: 1655, column: 9, scope: !1435)
!1435 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1655, column: 9)
!1436 = !DILocation(line: 1655, column: 20, scope: !1435)
!1437 = !DILocation(line: 1655, column: 9, scope: !427)
!1438 = !DILocation(line: 1656, column: 22, scope: !1435)
!1439 = !DILocation(line: 1656, column: 20, scope: !1435)
!1440 = !DILocation(line: 1656, column: 9, scope: !1435)
!1441 = !DILocation(line: 1658, column: 9, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1658, column: 9)
!1443 = !DILocation(line: 1658, column: 21, scope: !1442)
!1444 = !DILocation(line: 1658, column: 9, scope: !427)
!1445 = !DILocation(line: 1659, column: 23, scope: !1442)
!1446 = !DILocation(line: 1659, column: 21, scope: !1442)
!1447 = !DILocation(line: 1659, column: 9, scope: !1442)
!1448 = !DILocation(line: 1661, column: 10, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1661, column: 9)
!1450 = !DILocation(line: 1661, column: 9, scope: !427)
!1451 = !DILocation(line: 1662, column: 9, scope: !1449)
!1452 = !DILocation(line: 1664, column: 9, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1664, column: 9)
!1454 = !DILocation(line: 1664, column: 16, scope: !1453)
!1455 = !DILocation(line: 1664, column: 9, scope: !427)
!1456 = !DILocation(line: 1665, column: 26, scope: !1457)
!1457 = distinct !DILexicalBlock(scope: !1453, file: !16, line: 1664, column: 22)
!1458 = !DILocation(line: 1665, column: 38, scope: !1457)
!1459 = !DILocation(line: 1665, column: 55, scope: !1457)
!1460 = !DILocation(line: 1665, column: 61, scope: !1457)
!1461 = !DILocation(line: 1665, column: 17, scope: !1457)
!1462 = !DILocation(line: 1665, column: 15, scope: !1457)
!1463 = !DILocation(line: 1667, column: 13, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1457, file: !16, line: 1667, column: 13)
!1465 = !DILocation(line: 1667, column: 19, scope: !1464)
!1466 = !DILocation(line: 1667, column: 13, scope: !1457)
!1467 = !DILocation(line: 1668, column: 30, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1464, file: !16, line: 1667, column: 27)
!1469 = !DILocation(line: 1668, column: 13, scope: !1468)
!1470 = !DILocation(line: 1669, column: 13, scope: !1468)
!1471 = !DILocation(line: 1672, column: 28, scope: !1457)
!1472 = !DILocation(line: 1672, column: 41, scope: !1457)
!1473 = !DILocation(line: 1672, column: 18, scope: !1457)
!1474 = !DILocation(line: 1672, column: 16, scope: !1457)
!1475 = !DILocation(line: 1675, column: 13, scope: !1476)
!1476 = distinct !DILexicalBlock(scope: !1457, file: !16, line: 1675, column: 13)
!1477 = !DILocation(line: 1675, column: 20, scope: !1476)
!1478 = !DILocation(line: 1675, column: 13, scope: !1457)
!1479 = !DILocation(line: 1676, column: 30, scope: !1480)
!1480 = distinct !DILexicalBlock(scope: !1476, file: !16, line: 1675, column: 28)
!1481 = !DILocation(line: 1676, column: 13, scope: !1480)
!1482 = !DILocation(line: 1677, column: 13, scope: !1480)
!1483 = !DILocation(line: 1679, column: 13, scope: !1484)
!1484 = distinct !DILexicalBlock(scope: !1457, file: !16, line: 1679, column: 13)
!1485 = !DILocation(line: 1679, column: 26, scope: !1484)
!1486 = !DILocation(line: 1679, column: 13, scope: !1457)
!1487 = !DILocation(line: 1680, column: 29, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1489, file: !16, line: 1680, column: 17)
!1489 = distinct !DILexicalBlock(scope: !1484, file: !16, line: 1679, column: 34)
!1490 = !DILocation(line: 1680, column: 18, scope: !1488)
!1491 = !DILocation(line: 1680, column: 17, scope: !1489)
!1492 = !DILocation(line: 1682, column: 17, scope: !1488)
!1493 = !DILocation(line: 1683, column: 9, scope: !1489)
!1494 = !DILocation(line: 1685, column: 23, scope: !1495)
!1495 = distinct !DILexicalBlock(scope: !1457, file: !16, line: 1685, column: 13)
!1496 = !DILocation(line: 1685, column: 34, scope: !1495)
!1497 = !DILocation(line: 1685, column: 13, scope: !1457)
!1498 = !DILocation(line: 1686, column: 31, scope: !1499)
!1499 = distinct !DILexicalBlock(scope: !1495, file: !16, line: 1685, column: 42)
!1500 = !DILocation(line: 1686, column: 44, scope: !1499)
!1501 = !DILocation(line: 1686, column: 61, scope: !1499)
!1502 = !DILocation(line: 1686, column: 67, scope: !1499)
!1503 = !DILocation(line: 1686, column: 22, scope: !1499)
!1504 = !DILocation(line: 1686, column: 20, scope: !1499)
!1505 = !DILocation(line: 1688, column: 17, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1499, file: !16, line: 1688, column: 17)
!1507 = !DILocation(line: 1688, column: 24, scope: !1506)
!1508 = !DILocation(line: 1688, column: 17, scope: !1499)
!1509 = !DILocation(line: 1689, column: 34, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1506, file: !16, line: 1688, column: 32)
!1511 = !DILocation(line: 1689, column: 17, scope: !1510)
!1512 = !DILocation(line: 1690, column: 17, scope: !1510)
!1513 = !DILocation(line: 1693, column: 33, scope: !1499)
!1514 = !DILocation(line: 1693, column: 47, scope: !1499)
!1515 = !DILocation(line: 1693, column: 23, scope: !1499)
!1516 = !DILocation(line: 1693, column: 21, scope: !1499)
!1517 = !DILocation(line: 1696, column: 17, scope: !1518)
!1518 = distinct !DILexicalBlock(scope: !1499, file: !16, line: 1696, column: 17)
!1519 = !DILocation(line: 1696, column: 25, scope: !1518)
!1520 = !DILocation(line: 1696, column: 17, scope: !1499)
!1521 = !DILocation(line: 1697, column: 34, scope: !1522)
!1522 = distinct !DILexicalBlock(scope: !1518, file: !16, line: 1696, column: 33)
!1523 = !DILocation(line: 1697, column: 17, scope: !1522)
!1524 = !DILocation(line: 1698, column: 17, scope: !1522)
!1525 = !DILocation(line: 1700, column: 9, scope: !1499)
!1526 = !DILocation(line: 1701, column: 5, scope: !1457)
!1527 = !DILocation(line: 1703, column: 9, scope: !1528)
!1528 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1703, column: 9)
!1529 = !DILocation(line: 1703, column: 9, scope: !427)
!1530 = !DILocation(line: 1704, column: 57, scope: !1531)
!1531 = distinct !DILexicalBlock(scope: !1528, file: !16, line: 1703, column: 28)
!1532 = !DILocation(line: 1704, column: 62, scope: !1531)
!1533 = !DILocation(line: 1704, column: 27, scope: !1531)
!1534 = !DILocation(line: 1704, column: 20, scope: !1531)
!1535 = !DILocation(line: 1704, column: 25, scope: !1531)
!1536 = !DILocation(line: 1705, column: 24, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1531, file: !16, line: 1705, column: 13)
!1538 = !DILocation(line: 1705, column: 29, scope: !1537)
!1539 = !DILocation(line: 1705, column: 13, scope: !1531)
!1540 = !DILocation(line: 1706, column: 13, scope: !1537)
!1541 = !DILocation(line: 1707, column: 5, scope: !1531)
!1542 = !DILocation(line: 1709, column: 14, scope: !427)
!1543 = !DILocation(line: 1709, column: 19, scope: !427)
!1544 = !DILocation(line: 1710, column: 9, scope: !1545)
!1545 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1710, column: 9)
!1546 = !DILocation(line: 1710, column: 9, scope: !427)
!1547 = !DILocation(line: 1711, column: 53, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1545, file: !16, line: 1710, column: 18)
!1549 = !DILocation(line: 1711, column: 58, scope: !1548)
!1550 = !DILocation(line: 1711, column: 25, scope: !1548)
!1551 = !DILocation(line: 1711, column: 18, scope: !1548)
!1552 = !DILocation(line: 1711, column: 23, scope: !1548)
!1553 = !DILocation(line: 1712, column: 22, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1548, file: !16, line: 1712, column: 13)
!1555 = !DILocation(line: 1712, column: 27, scope: !1554)
!1556 = !DILocation(line: 1712, column: 13, scope: !1548)
!1557 = !DILocation(line: 1713, column: 13, scope: !1554)
!1558 = !DILocation(line: 1714, column: 5, scope: !1548)
!1559 = !DILocation(line: 1716, column: 9, scope: !1560)
!1560 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1716, column: 9)
!1561 = !DILocation(line: 1716, column: 18, scope: !1560)
!1562 = !DILocation(line: 1716, column: 9, scope: !427)
!1563 = !DILocalVariable(name: "crl", scope: !1564, file: !16, line: 1717, type: !1565)
!1564 = distinct !DILexicalBlock(scope: !1560, file: !16, line: 1716, column: 26)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64, align: 64)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_CRL", file: !267, line: 126, baseType: !1567)
!1567 = !DICompositeType(tag: DW_TAG_structure_type, name: "X509_crl_st", file: !267, line: 126, flags: DIFlagFwdDecl)
!1568 = !DILocation(line: 1717, column: 19, scope: !1564)
!1569 = !DILocation(line: 1718, column: 24, scope: !1564)
!1570 = !DILocation(line: 1718, column: 34, scope: !1564)
!1571 = !DILocation(line: 1718, column: 15, scope: !1564)
!1572 = !DILocation(line: 1718, column: 13, scope: !1564)
!1573 = !DILocation(line: 1719, column: 13, scope: !1574)
!1574 = distinct !DILexicalBlock(scope: !1564, file: !16, line: 1719, column: 13)
!1575 = !DILocation(line: 1719, column: 17, scope: !1574)
!1576 = !DILocation(line: 1719, column: 13, scope: !1564)
!1577 = !DILocation(line: 1720, column: 22, scope: !1578)
!1578 = distinct !DILexicalBlock(scope: !1574, file: !16, line: 1719, column: 25)
!1579 = !DILocation(line: 1720, column: 13, scope: !1578)
!1580 = !DILocation(line: 1721, column: 30, scope: !1578)
!1581 = !DILocation(line: 1721, column: 13, scope: !1578)
!1582 = !DILocation(line: 1722, column: 13, scope: !1578)
!1583 = !DILocation(line: 1724, column: 16, scope: !1564)
!1584 = !DILocation(line: 1724, column: 14, scope: !1564)
!1585 = !DILocation(line: 1725, column: 13, scope: !1586)
!1586 = distinct !DILexicalBlock(scope: !1564, file: !16, line: 1725, column: 13)
!1587 = !DILocation(line: 1725, column: 18, scope: !1586)
!1588 = !DILocation(line: 1725, column: 25, scope: !1586)
!1589 = !DILocation(line: 1725, column: 46, scope: !1590)
!1590 = !DILexicalBlockFile(scope: !1586, file: !16, discriminator: 1)
!1591 = !DILocation(line: 1725, column: 52, scope: !1590)
!1592 = !DILocation(line: 1725, column: 29, scope: !1590)
!1593 = !DILocation(line: 1725, column: 13, scope: !1590)
!1594 = !DILocation(line: 1726, column: 22, scope: !1595)
!1595 = distinct !DILexicalBlock(scope: !1586, file: !16, line: 1725, column: 58)
!1596 = !DILocation(line: 1726, column: 13, scope: !1595)
!1597 = !DILocation(line: 1727, column: 30, scope: !1595)
!1598 = !DILocation(line: 1727, column: 13, scope: !1595)
!1599 = !DILocation(line: 1728, column: 27, scope: !1595)
!1600 = !DILocation(line: 1728, column: 13, scope: !1595)
!1601 = !DILocation(line: 1729, column: 13, scope: !1595)
!1602 = !DILocation(line: 1731, column: 5, scope: !1564)
!1603 = !DILocation(line: 1733, column: 9, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1733, column: 9)
!1605 = !DILocation(line: 1733, column: 22, scope: !1604)
!1606 = !DILocation(line: 1733, column: 9, scope: !427)
!1607 = !DILocation(line: 1735, column: 13, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !16, line: 1735, column: 13)
!1609 = distinct !DILexicalBlock(scope: !1604, file: !16, line: 1733, column: 30)
!1610 = !DILocation(line: 1735, column: 25, scope: !1608)
!1611 = !DILocation(line: 1735, column: 13, scope: !1609)
!1612 = !DILocation(line: 1736, column: 27, scope: !1608)
!1613 = !DILocation(line: 1736, column: 25, scope: !1608)
!1614 = !DILocation(line: 1736, column: 13, scope: !1608)
!1615 = !DILocation(line: 1738, column: 27, scope: !1609)
!1616 = !DILocation(line: 1738, column: 40, scope: !1609)
!1617 = !DILocation(line: 1739, column: 30, scope: !1609)
!1618 = !DILocation(line: 1739, column: 37, scope: !1609)
!1619 = !DILocation(line: 1738, column: 18, scope: !1609)
!1620 = !DILocation(line: 1738, column: 16, scope: !1609)
!1621 = !DILocation(line: 1740, column: 13, scope: !1622)
!1622 = distinct !DILexicalBlock(scope: !1609, file: !16, line: 1740, column: 13)
!1623 = !DILocation(line: 1740, column: 20, scope: !1622)
!1624 = !DILocation(line: 1740, column: 13, scope: !1609)
!1625 = !DILocation(line: 1741, column: 30, scope: !1626)
!1626 = distinct !DILexicalBlock(scope: !1622, file: !16, line: 1740, column: 28)
!1627 = !DILocation(line: 1741, column: 13, scope: !1626)
!1628 = !DILocation(line: 1742, column: 13, scope: !1626)
!1629 = !DILocation(line: 1745, column: 29, scope: !1609)
!1630 = !DILocation(line: 1745, column: 43, scope: !1609)
!1631 = !DILocation(line: 1745, column: 19, scope: !1609)
!1632 = !DILocation(line: 1745, column: 17, scope: !1609)
!1633 = !DILocation(line: 1748, column: 13, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1609, file: !16, line: 1748, column: 13)
!1635 = !DILocation(line: 1748, column: 21, scope: !1634)
!1636 = !DILocation(line: 1748, column: 13, scope: !1609)
!1637 = !DILocation(line: 1749, column: 30, scope: !1638)
!1638 = distinct !DILexicalBlock(scope: !1634, file: !16, line: 1748, column: 29)
!1639 = !DILocation(line: 1749, column: 13, scope: !1638)
!1640 = !DILocation(line: 1750, column: 13, scope: !1638)
!1641 = !DILocation(line: 1752, column: 13, scope: !1642)
!1642 = distinct !DILexicalBlock(scope: !1609, file: !16, line: 1752, column: 13)
!1643 = !DILocation(line: 1752, column: 27, scope: !1642)
!1644 = !DILocation(line: 1752, column: 13, scope: !1609)
!1645 = !DILocation(line: 1753, column: 29, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1647, file: !16, line: 1753, column: 17)
!1647 = distinct !DILexicalBlock(scope: !1642, file: !16, line: 1752, column: 35)
!1648 = !DILocation(line: 1753, column: 18, scope: !1646)
!1649 = !DILocation(line: 1753, column: 17, scope: !1647)
!1650 = !DILocation(line: 1755, column: 17, scope: !1646)
!1651 = !DILocation(line: 1756, column: 9, scope: !1647)
!1652 = !DILocation(line: 1758, column: 5, scope: !1609)
!1653 = !DILocation(line: 1760, column: 9, scope: !1654)
!1654 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1760, column: 9)
!1655 = !DILocation(line: 1760, column: 19, scope: !1654)
!1656 = !DILocation(line: 1760, column: 9, scope: !427)
!1657 = !DILocation(line: 1761, column: 13, scope: !1658)
!1658 = distinct !DILexicalBlock(scope: !1659, file: !16, line: 1761, column: 13)
!1659 = distinct !DILexicalBlock(scope: !1654, file: !16, line: 1760, column: 27)
!1660 = !DILocation(line: 1761, column: 21, scope: !1658)
!1661 = !DILocation(line: 1761, column: 25, scope: !1662)
!1662 = !DILexicalBlockFile(scope: !1658, file: !16, discriminator: 1)
!1663 = !DILocation(line: 1761, column: 13, scope: !1662)
!1664 = !DILocation(line: 1762, column: 33, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1658, file: !16, line: 1761, column: 34)
!1666 = !DILocation(line: 1762, column: 25, scope: !1667)
!1667 = !DILexicalBlockFile(scope: !1665, file: !16, discriminator: 1)
!1668 = !DILocation(line: 1762, column: 23, scope: !1665)
!1669 = !DILocation(line: 1763, column: 17, scope: !1670)
!1670 = distinct !DILexicalBlock(scope: !1665, file: !16, line: 1763, column: 17)
!1671 = !DILocation(line: 1763, column: 23, scope: !1670)
!1672 = !DILocation(line: 1763, column: 26, scope: !1673)
!1673 = !DILexicalBlockFile(scope: !1670, file: !16, discriminator: 1)
!1674 = !DILocation(line: 1763, column: 36, scope: !1673)
!1675 = !DILocation(line: 1763, column: 17, scope: !1673)
!1676 = !DILocation(line: 1764, column: 29, scope: !1670)
!1677 = !DILocation(line: 1764, column: 27, scope: !1670)
!1678 = !DILocation(line: 1764, column: 17, scope: !1670)
!1679 = !DILocation(line: 1765, column: 9, scope: !1665)
!1680 = !DILocation(line: 1766, column: 17, scope: !1681)
!1681 = distinct !DILexicalBlock(scope: !1682, file: !16, line: 1766, column: 17)
!1682 = distinct !DILexicalBlock(scope: !1658, file: !16, line: 1765, column: 16)
!1683 = !DILocation(line: 1766, column: 27, scope: !1681)
!1684 = !DILocation(line: 1766, column: 17, scope: !1682)
!1685 = !DILocation(line: 1767, column: 29, scope: !1681)
!1686 = !DILocation(line: 1767, column: 27, scope: !1681)
!1687 = !DILocation(line: 1767, column: 17, scope: !1681)
!1688 = !DILocation(line: 1769, column: 5, scope: !1659)
!1689 = !DILocation(line: 1771, column: 9, scope: !1690)
!1690 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1771, column: 9)
!1691 = !DILocation(line: 1771, column: 9, scope: !427)
!1692 = !DILocation(line: 1774, column: 21, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1690, file: !16, line: 1773, column: 5)
!1694 = !DILocation(line: 1775, column: 20, scope: !1693)
!1695 = !DILocation(line: 1776, column: 22, scope: !1693)
!1696 = !DILocation(line: 1777, column: 21, scope: !1693)
!1697 = !DILocation(line: 1778, column: 22, scope: !1693)
!1698 = !DILocation(line: 1779, column: 21, scope: !1693)
!1699 = !DILocation(line: 1780, column: 5, scope: !1693)
!1700 = !DILocation(line: 1782, column: 23, scope: !427)
!1701 = !DILocation(line: 1782, column: 11, scope: !427)
!1702 = !DILocation(line: 1782, column: 9, scope: !427)
!1703 = !DILocation(line: 1783, column: 9, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1783, column: 9)
!1705 = !DILocation(line: 1783, column: 13, scope: !1704)
!1706 = !DILocation(line: 1783, column: 9, scope: !427)
!1707 = !DILocation(line: 1784, column: 26, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1704, file: !16, line: 1783, column: 21)
!1709 = !DILocation(line: 1784, column: 9, scope: !1708)
!1710 = !DILocation(line: 1785, column: 9, scope: !1708)
!1711 = !DILocation(line: 1788, column: 19, scope: !427)
!1712 = !DILocation(line: 1788, column: 5, scope: !427)
!1713 = !DILocation(line: 1790, column: 9, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1790, column: 9)
!1715 = !DILocation(line: 1790, column: 9, scope: !427)
!1716 = !DILocation(line: 1791, column: 32, scope: !1714)
!1717 = !DILocation(line: 1791, column: 37, scope: !1714)
!1718 = !DILocation(line: 1791, column: 9, scope: !1714)
!1719 = !DILocation(line: 1793, column: 21, scope: !1720)
!1720 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1793, column: 9)
!1721 = !DILocation(line: 1793, column: 27, scope: !1720)
!1722 = !DILocation(line: 1793, column: 37, scope: !1720)
!1723 = !DILocation(line: 1793, column: 10, scope: !1720)
!1724 = !DILocation(line: 1793, column: 9, scope: !427)
!1725 = !DILocation(line: 1794, column: 9, scope: !1720)
!1726 = !DILocation(line: 1796, column: 9, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1796, column: 9)
!1728 = !DILocation(line: 1796, column: 9, scope: !427)
!1729 = !DILocation(line: 1797, column: 28, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1731, file: !16, line: 1797, column: 13)
!1731 = distinct !DILexicalBlock(scope: !1727, file: !16, line: 1796, column: 21)
!1732 = !DILocation(line: 1797, column: 33, scope: !1730)
!1733 = !DILocation(line: 1797, column: 13, scope: !1730)
!1734 = !DILocation(line: 1797, column: 45, scope: !1730)
!1735 = !DILocation(line: 1797, column: 13, scope: !1731)
!1736 = !DILocation(line: 1798, column: 24, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1730, file: !16, line: 1797, column: 51)
!1738 = !DILocation(line: 1799, column: 24, scope: !1737)
!1739 = !DILocation(line: 1798, column: 13, scope: !1737)
!1740 = !DILocation(line: 1800, column: 30, scope: !1737)
!1741 = !DILocation(line: 1800, column: 13, scope: !1737)
!1742 = !DILocation(line: 1801, column: 13, scope: !1737)
!1743 = !DILocation(line: 1803, column: 5, scope: !1731)
!1744 = !DILocation(line: 1810, column: 9, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1810, column: 9)
!1746 = !DILocation(line: 1810, column: 21, scope: !1745)
!1747 = !DILocation(line: 1811, column: 9, scope: !1745)
!1748 = !DILocation(line: 1811, column: 25, scope: !1749)
!1749 = !DILexicalBlockFile(scope: !1745, file: !16, discriminator: 1)
!1750 = !DILocation(line: 1811, column: 35, scope: !1749)
!1751 = !DILocation(line: 1811, column: 12, scope: !1749)
!1752 = !DILocation(line: 1811, column: 13, scope: !1749)
!1753 = !DILocation(line: 1810, column: 9, scope: !698)
!1754 = !DILocation(line: 1812, column: 9, scope: !1745)
!1755 = !DILocation(line: 1813, column: 9, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1813, column: 9)
!1757 = !DILocation(line: 1813, column: 21, scope: !1756)
!1758 = !DILocation(line: 1814, column: 9, scope: !1756)
!1759 = !DILocation(line: 1814, column: 25, scope: !1760)
!1760 = !DILexicalBlockFile(scope: !1756, file: !16, discriminator: 1)
!1761 = !DILocation(line: 1814, column: 35, scope: !1760)
!1762 = !DILocation(line: 1814, column: 12, scope: !1760)
!1763 = !DILocation(line: 1814, column: 13, scope: !1760)
!1764 = !DILocation(line: 1813, column: 9, scope: !698)
!1765 = !DILocation(line: 1815, column: 9, scope: !1756)
!1766 = !DILocation(line: 1817, column: 9, scope: !1767)
!1767 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1817, column: 9)
!1768 = !DILocation(line: 1817, column: 9, scope: !427)
!1769 = !DILocation(line: 1818, column: 20, scope: !1770)
!1770 = distinct !DILexicalBlock(scope: !1771, file: !16, line: 1818, column: 13)
!1771 = distinct !DILexicalBlock(scope: !1767, file: !16, line: 1817, column: 28)
!1772 = !DILocation(line: 1818, column: 13, scope: !1770)
!1773 = !DILocation(line: 1818, column: 39, scope: !1770)
!1774 = !DILocation(line: 1818, column: 13, scope: !1771)
!1775 = !DILocation(line: 1819, column: 24, scope: !1770)
!1776 = !DILocation(line: 1819, column: 13, scope: !1770)
!1777 = !DILocation(line: 1821, column: 46, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1771, file: !16, line: 1821, column: 13)
!1779 = !DILocation(line: 1821, column: 14, scope: !1778)
!1780 = !DILocation(line: 1821, column: 13, scope: !1771)
!1781 = !DILocation(line: 1822, column: 24, scope: !1782)
!1782 = distinct !DILexicalBlock(scope: !1778, file: !16, line: 1821, column: 73)
!1783 = !DILocation(line: 1822, column: 13, scope: !1782)
!1784 = !DILocation(line: 1823, column: 30, scope: !1782)
!1785 = !DILocation(line: 1823, column: 13, scope: !1782)
!1786 = !DILocation(line: 1824, column: 13, scope: !1782)
!1787 = !DILocation(line: 1826, column: 20, scope: !1771)
!1788 = !DILocation(line: 1826, column: 54, scope: !1771)
!1789 = !DILocation(line: 1826, column: 9, scope: !1771)
!1790 = !DILocation(line: 1827, column: 5, scope: !1771)
!1791 = !DILocation(line: 1828, column: 32, scope: !427)
!1792 = !DILocation(line: 1828, column: 5, scope: !427)
!1793 = !DILocation(line: 1829, column: 9, scope: !1794)
!1794 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1829, column: 9)
!1795 = !DILocation(line: 1829, column: 13, scope: !1794)
!1796 = !DILocation(line: 1829, column: 9, scope: !427)
!1797 = !DILocation(line: 1830, column: 28, scope: !1794)
!1798 = !DILocation(line: 1830, column: 33, scope: !1794)
!1799 = !DILocation(line: 1830, column: 9, scope: !1794)
!1800 = !DILocation(line: 1832, column: 9, scope: !1801)
!1801 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1832, column: 9)
!1802 = !DILocation(line: 1832, column: 9, scope: !427)
!1803 = !DILocation(line: 1833, column: 35, scope: !1801)
!1804 = !DILocation(line: 1833, column: 9, scope: !1801)
!1805 = !DILocation(line: 1834, column: 9, scope: !1806)
!1806 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1834, column: 9)
!1807 = !DILocation(line: 1834, column: 9, scope: !427)
!1808 = !DILocation(line: 1835, column: 22, scope: !1806)
!1809 = !DILocation(line: 1835, column: 9, scope: !1806)
!1810 = !DILocation(line: 1836, column: 14, scope: !1811)
!1811 = distinct !DILexicalBlock(scope: !1806, file: !16, line: 1836, column: 14)
!1812 = !DILocation(line: 1836, column: 14, scope: !1806)
!1813 = !DILocation(line: 1837, column: 32, scope: !1811)
!1814 = !DILocation(line: 1837, column: 9, scope: !1811)
!1815 = !DILocation(line: 1839, column: 22, scope: !1811)
!1816 = !DILocation(line: 1839, column: 9, scope: !1811)
!1817 = !DILocation(line: 1841, column: 9, scope: !1818)
!1818 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1841, column: 9)
!1819 = !DILocation(line: 1841, column: 9, scope: !427)
!1820 = !DILocation(line: 1842, column: 23, scope: !1821)
!1821 = distinct !DILexicalBlock(scope: !1818, file: !16, line: 1841, column: 16)
!1822 = !DILocation(line: 1842, column: 9, scope: !1821)
!1823 = !DILocation(line: 1843, column: 5, scope: !1821)
!1824 = !DILocation(line: 1845, column: 9, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1845, column: 9)
!1826 = !DILocation(line: 1845, column: 27, scope: !1825)
!1827 = !DILocation(line: 1846, column: 9, scope: !1825)
!1828 = !DILocation(line: 1846, column: 26, scope: !1829)
!1829 = !DILexicalBlockFile(scope: !1825, file: !16, discriminator: 1)
!1830 = !DILocation(line: 1846, column: 33, scope: !1829)
!1831 = !DILocation(line: 1846, column: 13, scope: !1829)
!1832 = !DILocation(line: 1845, column: 9, scope: !698)
!1833 = !DILocation(line: 1847, column: 20, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1825, file: !16, line: 1846, column: 15)
!1835 = !DILocation(line: 1848, column: 20, scope: !1834)
!1836 = !DILocation(line: 1848, column: 26, scope: !1834)
!1837 = !DILocation(line: 1847, column: 9, scope: !1834)
!1838 = !DILocation(line: 1849, column: 9, scope: !1834)
!1839 = !DILocation(line: 1852, column: 9, scope: !1840)
!1840 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1852, column: 9)
!1841 = !DILocation(line: 1852, column: 29, scope: !1840)
!1842 = !DILocation(line: 1853, column: 9, scope: !1840)
!1843 = !DILocation(line: 1853, column: 26, scope: !1844)
!1844 = !DILexicalBlockFile(scope: !1840, file: !16, discriminator: 1)
!1845 = !DILocation(line: 1853, column: 34, scope: !1844)
!1846 = !DILocation(line: 1853, column: 13, scope: !1844)
!1847 = !DILocation(line: 1852, column: 9, scope: !698)
!1848 = !DILocation(line: 1854, column: 20, scope: !1849)
!1849 = distinct !DILexicalBlock(scope: !1840, file: !16, line: 1853, column: 15)
!1850 = !DILocation(line: 1855, column: 20, scope: !1849)
!1851 = !DILocation(line: 1855, column: 26, scope: !1849)
!1852 = !DILocation(line: 1854, column: 9, scope: !1849)
!1853 = !DILocation(line: 1856, column: 9, scope: !1849)
!1854 = !DILocation(line: 1858, column: 9, scope: !1855)
!1855 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1858, column: 9)
!1856 = !DILocation(line: 1858, column: 23, scope: !1855)
!1857 = !DILocation(line: 1859, column: 9, scope: !1855)
!1858 = !DILocation(line: 1859, column: 26, scope: !1859)
!1859 = !DILexicalBlockFile(scope: !1855, file: !16, discriminator: 1)
!1860 = !DILocation(line: 1859, column: 34, scope: !1859)
!1861 = !DILocation(line: 1859, column: 13, scope: !1859)
!1862 = !DILocation(line: 1858, column: 9, scope: !698)
!1863 = !DILocation(line: 1860, column: 20, scope: !1864)
!1864 = distinct !DILexicalBlock(scope: !1855, file: !16, line: 1859, column: 15)
!1865 = !DILocation(line: 1861, column: 20, scope: !1864)
!1866 = !DILocation(line: 1861, column: 26, scope: !1864)
!1867 = !DILocation(line: 1860, column: 9, scope: !1864)
!1868 = !DILocation(line: 1862, column: 9, scope: !1864)
!1869 = !DILocation(line: 1865, column: 9, scope: !1870)
!1870 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1865, column: 9)
!1871 = !DILocation(line: 1865, column: 22, scope: !1870)
!1872 = !DILocation(line: 1865, column: 9, scope: !427)
!1873 = !DILocation(line: 1866, column: 45, scope: !1874)
!1874 = distinct !DILexicalBlock(scope: !1870, file: !16, line: 1865, column: 27)
!1875 = !DILocation(line: 1866, column: 50, scope: !1874)
!1876 = !DILocation(line: 1866, column: 9, scope: !1874)
!1877 = !DILocation(line: 1867, column: 5, scope: !1874)
!1878 = !DILocation(line: 1869, column: 9, scope: !1879)
!1879 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1869, column: 9)
!1880 = !DILocation(line: 1869, column: 23, scope: !1879)
!1881 = !DILocation(line: 1869, column: 9, scope: !427)
!1882 = !DILocation(line: 1871, column: 41, scope: !1883)
!1883 = distinct !DILexicalBlock(scope: !1884, file: !16, line: 1871, column: 13)
!1884 = distinct !DILexicalBlock(scope: !1879, file: !16, line: 1869, column: 31)
!1885 = !DILocation(line: 1871, column: 46, scope: !1883)
!1886 = !DILocation(line: 1871, column: 13, scope: !1883)
!1887 = !DILocation(line: 1871, column: 61, scope: !1883)
!1888 = !DILocation(line: 1871, column: 13, scope: !1884)
!1889 = !DILocation(line: 1872, column: 24, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1883, file: !16, line: 1871, column: 67)
!1891 = !DILocation(line: 1872, column: 13, scope: !1890)
!1892 = !DILocation(line: 1873, column: 30, scope: !1890)
!1893 = !DILocation(line: 1873, column: 13, scope: !1890)
!1894 = !DILocation(line: 1874, column: 13, scope: !1890)
!1895 = !DILocation(line: 1876, column: 5, scope: !1884)
!1896 = !DILocation(line: 1879, column: 35, scope: !1897)
!1897 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1879, column: 9)
!1898 = !DILocation(line: 1879, column: 40, scope: !1897)
!1899 = !DILocation(line: 1879, column: 48, scope: !1897)
!1900 = !DILocation(line: 1879, column: 56, scope: !1897)
!1901 = !DILocation(line: 1879, column: 66, scope: !1897)
!1902 = !DILocation(line: 1879, column: 10, scope: !1897)
!1903 = !DILocation(line: 1879, column: 9, scope: !427)
!1904 = !DILocation(line: 1880, column: 26, scope: !1905)
!1905 = distinct !DILexicalBlock(scope: !1897, file: !16, line: 1879, column: 77)
!1906 = !DILocation(line: 1880, column: 9, scope: !1905)
!1907 = !DILocation(line: 1881, column: 9, scope: !1905)
!1908 = !DILocation(line: 1883, column: 9, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1883, column: 9)
!1910 = !DILocation(line: 1883, column: 20, scope: !1909)
!1911 = !DILocation(line: 1883, column: 43, scope: !1912)
!1912 = !DILexicalBlockFile(scope: !1909, file: !16, discriminator: 1)
!1913 = !DILocation(line: 1883, column: 48, scope: !1912)
!1914 = !DILocation(line: 1883, column: 24, scope: !1912)
!1915 = !DILocation(line: 1883, column: 9, scope: !1912)
!1916 = !DILocation(line: 1884, column: 20, scope: !1917)
!1917 = distinct !DILexicalBlock(scope: !1909, file: !16, line: 1883, column: 54)
!1918 = !DILocation(line: 1884, column: 9, scope: !1917)
!1919 = !DILocation(line: 1885, column: 26, scope: !1917)
!1920 = !DILocation(line: 1885, column: 9, scope: !1917)
!1921 = !DILocation(line: 1886, column: 9, scope: !1917)
!1922 = !DILocation(line: 1889, column: 22, scope: !427)
!1923 = !DILocation(line: 1889, column: 27, scope: !427)
!1924 = !DILocation(line: 1889, column: 5, scope: !427)
!1925 = !DILocation(line: 1891, column: 26, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1891, column: 9)
!1927 = !DILocation(line: 1891, column: 31, scope: !1926)
!1928 = !DILocation(line: 1891, column: 42, scope: !1926)
!1929 = !DILocation(line: 1891, column: 53, scope: !1926)
!1930 = !DILocation(line: 1891, column: 63, scope: !1926)
!1931 = !DILocation(line: 1892, column: 26, scope: !1926)
!1932 = !DILocation(line: 1892, column: 32, scope: !1926)
!1933 = !DILocation(line: 1891, column: 10, scope: !1926)
!1934 = !DILocation(line: 1891, column: 9, scope: !427)
!1935 = !DILocation(line: 1893, column: 20, scope: !1936)
!1936 = distinct !DILexicalBlock(scope: !1926, file: !16, line: 1892, column: 47)
!1937 = !DILocation(line: 1893, column: 9, scope: !1936)
!1938 = !DILocation(line: 1894, column: 26, scope: !1936)
!1939 = !DILocation(line: 1894, column: 9, scope: !1936)
!1940 = !DILocation(line: 1895, column: 9, scope: !1936)
!1941 = !DILocation(line: 1898, column: 9, scope: !1942)
!1942 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1898, column: 9)
!1943 = !DILocation(line: 1898, column: 9, scope: !427)
!1944 = !DILocation(line: 1899, column: 28, scope: !1945)
!1945 = distinct !DILexicalBlock(scope: !1942, file: !16, line: 1898, column: 18)
!1946 = !DILocation(line: 1899, column: 16, scope: !1945)
!1947 = !DILocation(line: 1899, column: 14, scope: !1945)
!1948 = !DILocation(line: 1900, column: 13, scope: !1949)
!1949 = distinct !DILexicalBlock(scope: !1945, file: !16, line: 1900, column: 13)
!1950 = !DILocation(line: 1900, column: 18, scope: !1949)
!1951 = !DILocation(line: 1900, column: 13, scope: !1945)
!1952 = !DILocation(line: 1901, column: 30, scope: !1953)
!1953 = distinct !DILexicalBlock(scope: !1949, file: !16, line: 1900, column: 26)
!1954 = !DILocation(line: 1901, column: 13, scope: !1953)
!1955 = !DILocation(line: 1902, column: 13, scope: !1953)
!1956 = !DILocation(line: 1904, column: 5, scope: !1945)
!1957 = !DILocation(line: 1906, column: 9, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1906, column: 9)
!1959 = !DILocation(line: 1906, column: 14, scope: !1958)
!1960 = !DILocation(line: 1906, column: 9, scope: !427)
!1961 = !DILocation(line: 1907, column: 20, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1958, file: !16, line: 1906, column: 22)
!1963 = !DILocation(line: 1907, column: 9, scope: !1962)
!1964 = !DILocation(line: 1909, column: 13, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1909, column: 13)
!1966 = !DILocation(line: 1909, column: 13, scope: !1962)
!1967 = !DILocation(line: 1910, column: 36, scope: !1965)
!1968 = !DILocation(line: 1910, column: 41, scope: !1965)
!1969 = !DILocation(line: 1910, column: 13, scope: !1965)
!1970 = !DILocation(line: 1912, column: 13, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1912, column: 13)
!1972 = !DILocation(line: 1912, column: 13, scope: !1962)
!1973 = !DILocation(line: 1913, column: 24, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1975, file: !16, line: 1913, column: 17)
!1975 = distinct !DILexicalBlock(scope: !1971, file: !16, line: 1912, column: 32)
!1976 = !DILocation(line: 1913, column: 17, scope: !1974)
!1977 = !DILocation(line: 1913, column: 43, scope: !1974)
!1978 = !DILocation(line: 1913, column: 17, scope: !1975)
!1979 = !DILocation(line: 1914, column: 28, scope: !1974)
!1980 = !DILocation(line: 1914, column: 17, scope: !1974)
!1981 = !DILocation(line: 1916, column: 50, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1975, file: !16, line: 1916, column: 17)
!1983 = !DILocation(line: 1916, column: 18, scope: !1982)
!1984 = !DILocation(line: 1916, column: 17, scope: !1975)
!1985 = !DILocation(line: 1917, column: 28, scope: !1986)
!1986 = distinct !DILexicalBlock(scope: !1982, file: !16, line: 1916, column: 78)
!1987 = !DILocation(line: 1917, column: 17, scope: !1986)
!1988 = !DILocation(line: 1918, column: 34, scope: !1986)
!1989 = !DILocation(line: 1918, column: 17, scope: !1986)
!1990 = !DILocation(line: 1919, column: 17, scope: !1986)
!1991 = !DILocation(line: 1921, column: 24, scope: !1975)
!1992 = !DILocation(line: 1921, column: 58, scope: !1975)
!1993 = !DILocation(line: 1921, column: 13, scope: !1975)
!1994 = !DILocation(line: 1922, column: 9, scope: !1975)
!1995 = !DILocation(line: 1923, column: 36, scope: !1962)
!1996 = !DILocation(line: 1923, column: 9, scope: !1962)
!1997 = !DILocation(line: 1924, column: 13, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1924, column: 13)
!1999 = !DILocation(line: 1924, column: 17, scope: !1998)
!2000 = !DILocation(line: 1924, column: 13, scope: !1962)
!2001 = !DILocation(line: 1925, column: 32, scope: !1998)
!2002 = !DILocation(line: 1925, column: 38, scope: !1998)
!2003 = !DILocation(line: 1925, column: 13, scope: !1998)
!2004 = !DILocation(line: 1927, column: 13, scope: !2005)
!2005 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1927, column: 13)
!2006 = !DILocation(line: 1927, column: 13, scope: !1962)
!2007 = !DILocation(line: 1928, column: 39, scope: !2005)
!2008 = !DILocation(line: 1928, column: 13, scope: !2005)
!2009 = !DILocation(line: 1930, column: 13, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1930, column: 13)
!2011 = !DILocation(line: 1930, column: 13, scope: !1962)
!2012 = !DILocation(line: 1931, column: 26, scope: !2010)
!2013 = !DILocation(line: 1931, column: 13, scope: !2010)
!2014 = !DILocation(line: 1932, column: 18, scope: !2015)
!2015 = distinct !DILexicalBlock(scope: !2010, file: !16, line: 1932, column: 18)
!2016 = !DILocation(line: 1932, column: 18, scope: !2010)
!2017 = !DILocation(line: 1933, column: 36, scope: !2015)
!2018 = !DILocation(line: 1933, column: 13, scope: !2015)
!2019 = !DILocation(line: 1935, column: 26, scope: !2015)
!2020 = !DILocation(line: 1935, column: 13, scope: !2015)
!2021 = !DILocation(line: 1937, column: 13, scope: !2022)
!2022 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1937, column: 13)
!2023 = !DILocation(line: 1937, column: 13, scope: !1962)
!2024 = !DILocation(line: 1938, column: 27, scope: !2022)
!2025 = !DILocation(line: 1938, column: 13, scope: !2022)
!2026 = !DILocation(line: 1940, column: 39, scope: !2027)
!2027 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1940, column: 13)
!2028 = !DILocation(line: 1940, column: 45, scope: !2027)
!2029 = !DILocation(line: 1940, column: 53, scope: !2027)
!2030 = !DILocation(line: 1940, column: 61, scope: !2027)
!2031 = !DILocation(line: 1941, column: 39, scope: !2027)
!2032 = !DILocation(line: 1940, column: 14, scope: !2027)
!2033 = !DILocation(line: 1940, column: 13, scope: !1962)
!2034 = !DILocation(line: 1942, column: 30, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !2027, file: !16, line: 1941, column: 50)
!2036 = !DILocation(line: 1942, column: 13, scope: !2035)
!2037 = !DILocation(line: 1943, column: 13, scope: !2035)
!2038 = !DILocation(line: 1945, column: 13, scope: !2039)
!2039 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1945, column: 13)
!2040 = !DILocation(line: 1945, column: 24, scope: !2039)
!2041 = !DILocation(line: 1945, column: 47, scope: !2042)
!2042 = !DILexicalBlockFile(scope: !2039, file: !16, discriminator: 1)
!2043 = !DILocation(line: 1945, column: 53, scope: !2042)
!2044 = !DILocation(line: 1945, column: 28, scope: !2042)
!2045 = !DILocation(line: 1945, column: 13, scope: !2042)
!2046 = !DILocation(line: 1946, column: 24, scope: !2047)
!2047 = distinct !DILexicalBlock(scope: !2039, file: !16, line: 1945, column: 59)
!2048 = !DILocation(line: 1946, column: 13, scope: !2047)
!2049 = !DILocation(line: 1947, column: 30, scope: !2047)
!2050 = !DILocation(line: 1947, column: 13, scope: !2047)
!2051 = !DILocation(line: 1948, column: 13, scope: !2047)
!2052 = !DILocation(line: 1951, column: 26, scope: !1962)
!2053 = !DILocation(line: 1951, column: 32, scope: !1962)
!2054 = !DILocation(line: 1951, column: 9, scope: !1962)
!2055 = !DILocation(line: 1952, column: 25, scope: !2056)
!2056 = distinct !DILexicalBlock(scope: !1962, file: !16, line: 1952, column: 13)
!2057 = !DILocation(line: 1952, column: 31, scope: !2056)
!2058 = !DILocation(line: 1952, column: 41, scope: !2056)
!2059 = !DILocation(line: 1952, column: 14, scope: !2056)
!2060 = !DILocation(line: 1952, column: 13, scope: !1962)
!2061 = !DILocation(line: 1953, column: 13, scope: !2056)
!2062 = !DILocation(line: 1954, column: 5, scope: !1962)
!2063 = !DILocation(line: 1956, column: 20, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1956, column: 9)
!2065 = !DILocation(line: 1956, column: 9, scope: !2064)
!2066 = !DILocation(line: 1956, column: 9, scope: !427)
!2067 = !DILocation(line: 1957, column: 47, scope: !2064)
!2068 = !DILocation(line: 1958, column: 47, scope: !2064)
!2069 = !DILocation(line: 1957, column: 9, scope: !2064)
!2070 = !DILocation(line: 1960, column: 18, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1960, column: 9)
!2072 = !DILocation(line: 1960, column: 9, scope: !2071)
!2073 = !DILocation(line: 1960, column: 9, scope: !427)
!2074 = !DILocation(line: 1961, column: 36, scope: !2071)
!2075 = !DILocation(line: 1961, column: 50, scope: !2071)
!2076 = !DILocation(line: 1961, column: 9, scope: !2071)
!2077 = !DILocation(line: 1964, column: 10, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !427, file: !16, line: 1964, column: 9)
!2079 = !DILocation(line: 1964, column: 9, scope: !427)
!2080 = !DILocalVariable(name: "dh", scope: !2081, file: !16, line: 1965, type: !2082)
!2081 = distinct !DILexicalBlock(scope: !2078, file: !16, line: 1964, column: 18)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64, align: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "DH", file: !267, line: 108, baseType: !2084)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "dh_st", file: !267, line: 108, flags: DIFlagFwdDecl)
!2085 = !DILocation(line: 1965, column: 13, scope: !2081)
!2086 = !DILocation(line: 1967, column: 13, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !2081, file: !16, line: 1967, column: 13)
!2088 = !DILocation(line: 1967, column: 20, scope: !2087)
!2089 = !DILocation(line: 1967, column: 13, scope: !2081)
!2090 = !DILocation(line: 1968, column: 32, scope: !2087)
!2091 = !DILocation(line: 1968, column: 18, scope: !2087)
!2092 = !DILocation(line: 1968, column: 16, scope: !2087)
!2093 = !DILocation(line: 1968, column: 13, scope: !2087)
!2094 = !DILocation(line: 1969, column: 18, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2087, file: !16, line: 1969, column: 18)
!2096 = !DILocation(line: 1969, column: 30, scope: !2095)
!2097 = !DILocation(line: 1969, column: 18, scope: !2087)
!2098 = !DILocation(line: 1970, column: 32, scope: !2095)
!2099 = !DILocation(line: 1970, column: 18, scope: !2095)
!2100 = !DILocation(line: 1970, column: 16, scope: !2095)
!2101 = !DILocation(line: 1970, column: 13, scope: !2095)
!2102 = !DILocation(line: 1972, column: 13, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2081, file: !16, line: 1972, column: 13)
!2104 = !DILocation(line: 1972, column: 16, scope: !2103)
!2105 = !DILocation(line: 1972, column: 13, scope: !2081)
!2106 = !DILocation(line: 1973, column: 24, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2103, file: !16, line: 1972, column: 24)
!2108 = !DILocation(line: 1973, column: 13, scope: !2107)
!2109 = !DILocation(line: 1974, column: 9, scope: !2107)
!2110 = !DILocation(line: 1975, column: 24, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !2103, file: !16, line: 1974, column: 16)
!2112 = !DILocation(line: 1975, column: 13, scope: !2111)
!2113 = !DILocation(line: 1977, column: 29, scope: !2081)
!2114 = !DILocation(line: 1977, column: 20, scope: !2081)
!2115 = !DILocation(line: 1977, column: 15, scope: !2081)
!2116 = !DILocation(line: 1979, column: 13, scope: !2117)
!2117 = distinct !DILexicalBlock(scope: !2081, file: !16, line: 1979, column: 13)
!2118 = !DILocation(line: 1979, column: 16, scope: !2117)
!2119 = !DILocation(line: 1979, column: 13, scope: !2081)
!2120 = !DILocation(line: 1980, column: 26, scope: !2121)
!2121 = distinct !DILexicalBlock(scope: !2117, file: !16, line: 1979, column: 24)
!2122 = !DILocation(line: 1980, column: 13, scope: !2121)
!2123 = !DILocation(line: 1981, column: 9, scope: !2121)
!2124 = !DILocation(line: 1981, column: 34, scope: !2125)
!2125 = !DILexicalBlockFile(scope: !2126, file: !16, discriminator: 1)
!2126 = distinct !DILexicalBlock(scope: !2117, file: !16, line: 1981, column: 20)
!2127 = !DILocation(line: 1981, column: 51, scope: !2125)
!2128 = !DILocation(line: 1981, column: 42, scope: !2125)
!2129 = !DILocation(line: 1981, column: 21, scope: !2125)
!2130 = !DILocation(line: 1981, column: 20, scope: !2125)
!2131 = !DILocation(line: 1982, column: 22, scope: !2132)
!2132 = distinct !DILexicalBlock(scope: !2126, file: !16, line: 1981, column: 57)
!2133 = !DILocation(line: 1982, column: 13, scope: !2132)
!2134 = !DILocation(line: 1983, column: 30, scope: !2132)
!2135 = !DILocation(line: 1983, column: 13, scope: !2132)
!2136 = !DILocation(line: 1984, column: 21, scope: !2132)
!2137 = !DILocation(line: 1984, column: 13, scope: !2132)
!2138 = !DILocation(line: 1985, column: 13, scope: !2132)
!2139 = !DILocation(line: 1988, column: 13, scope: !2140)
!2140 = distinct !DILexicalBlock(scope: !2081, file: !16, line: 1988, column: 13)
!2141 = !DILocation(line: 1988, column: 18, scope: !2140)
!2142 = !DILocation(line: 1988, column: 13, scope: !2081)
!2143 = !DILocation(line: 1989, column: 18, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2145, file: !16, line: 1989, column: 17)
!2145 = distinct !DILexicalBlock(scope: !2140, file: !16, line: 1988, column: 26)
!2146 = !DILocation(line: 1989, column: 17, scope: !2145)
!2147 = !DILocalVariable(name: "dh2", scope: !2148, file: !16, line: 1990, type: !2082)
!2148 = distinct !DILexicalBlock(scope: !2144, file: !16, line: 1989, column: 26)
!2149 = !DILocation(line: 1990, column: 21, scope: !2148)
!2150 = !DILocation(line: 1990, column: 41, scope: !2148)
!2151 = !DILocation(line: 1990, column: 27, scope: !2148)
!2152 = !DILocation(line: 1991, column: 21, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2148, file: !16, line: 1991, column: 21)
!2154 = !DILocation(line: 1991, column: 25, scope: !2153)
!2155 = !DILocation(line: 1991, column: 21, scope: !2148)
!2156 = !DILocation(line: 1992, column: 32, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2153, file: !16, line: 1991, column: 33)
!2158 = !DILocation(line: 1992, column: 21, scope: !2157)
!2159 = !DILocation(line: 1993, column: 41, scope: !2157)
!2160 = !DILocation(line: 1993, column: 32, scope: !2157)
!2161 = !DILocation(line: 1993, column: 27, scope: !2157)
!2162 = !DILocation(line: 1995, column: 29, scope: !2157)
!2163 = !DILocation(line: 1995, column: 21, scope: !2157)
!2164 = !DILocation(line: 1996, column: 26, scope: !2157)
!2165 = !DILocation(line: 1996, column: 24, scope: !2157)
!2166 = !DILocation(line: 1997, column: 17, scope: !2157)
!2167 = !DILocation(line: 1998, column: 13, scope: !2148)
!2168 = !DILocation(line: 1999, column: 17, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2145, file: !16, line: 1999, column: 17)
!2170 = !DILocation(line: 1999, column: 20, scope: !2169)
!2171 = !DILocation(line: 1999, column: 17, scope: !2145)
!2172 = !DILocation(line: 2000, column: 30, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2169, file: !16, line: 1999, column: 28)
!2174 = !DILocation(line: 2000, column: 17, scope: !2173)
!2175 = !DILocation(line: 2001, column: 13, scope: !2173)
!2176 = !DILocation(line: 2001, column: 38, scope: !2177)
!2177 = !DILexicalBlockFile(scope: !2178, file: !16, discriminator: 1)
!2178 = distinct !DILexicalBlock(scope: !2169, file: !16, line: 2001, column: 24)
!2179 = !DILocation(line: 2001, column: 56, scope: !2177)
!2180 = !DILocation(line: 2001, column: 47, scope: !2177)
!2181 = !DILocation(line: 2001, column: 25, scope: !2177)
!2182 = !DILocation(line: 2001, column: 24, scope: !2177)
!2183 = !DILocation(line: 2002, column: 26, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2178, file: !16, line: 2001, column: 62)
!2185 = !DILocation(line: 2002, column: 17, scope: !2184)
!2186 = !DILocation(line: 2003, column: 34, scope: !2184)
!2187 = !DILocation(line: 2003, column: 17, scope: !2184)
!2188 = !DILocation(line: 2004, column: 25, scope: !2184)
!2189 = !DILocation(line: 2004, column: 17, scope: !2184)
!2190 = !DILocation(line: 2005, column: 17, scope: !2184)
!2191 = !DILocation(line: 2007, column: 9, scope: !2145)
!2192 = !DILocation(line: 2008, column: 17, scope: !2081)
!2193 = !DILocation(line: 2008, column: 9, scope: !2081)
!2194 = !DILocation(line: 2009, column: 5, scope: !2081)
!2195 = !DILocation(line: 2012, column: 29, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2012, column: 9)
!2197 = !DILocation(line: 2012, column: 34, scope: !2196)
!2198 = !DILocation(line: 2012, column: 42, scope: !2196)
!2199 = !DILocation(line: 2012, column: 49, scope: !2196)
!2200 = !DILocation(line: 2012, column: 58, scope: !2196)
!2201 = !DILocation(line: 2012, column: 10, scope: !2196)
!2202 = !DILocation(line: 2012, column: 9, scope: !427)
!2203 = !DILocation(line: 2013, column: 9, scope: !2196)
!2204 = !DILocation(line: 2015, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2015, column: 9)
!2206 = !DILocation(line: 2015, column: 27, scope: !2205)
!2207 = !DILocation(line: 2016, column: 8, scope: !2205)
!2208 = !DILocation(line: 2016, column: 40, scope: !2209)
!2209 = !DILexicalBlockFile(scope: !2205, file: !16, discriminator: 1)
!2210 = !DILocation(line: 2016, column: 45, scope: !2209)
!2211 = !DILocation(line: 2016, column: 12, scope: !2209)
!2212 = !DILocation(line: 2015, column: 9, scope: !698)
!2213 = !DILocation(line: 2017, column: 26, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2205, file: !16, line: 2016, column: 65)
!2215 = !DILocation(line: 2017, column: 9, scope: !2214)
!2216 = !DILocation(line: 2018, column: 9, scope: !2214)
!2217 = !DILocation(line: 2021, column: 9, scope: !2218)
!2218 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2021, column: 9)
!2219 = !DILocation(line: 2021, column: 14, scope: !2218)
!2220 = !DILocation(line: 2022, column: 8, scope: !2218)
!2221 = !DILocation(line: 2022, column: 31, scope: !2222)
!2222 = !DILexicalBlockFile(scope: !2218, file: !16, discriminator: 1)
!2223 = !DILocation(line: 2022, column: 37, scope: !2222)
!2224 = !DILocation(line: 2022, column: 46, scope: !2222)
!2225 = !DILocation(line: 2022, column: 60, scope: !2222)
!2226 = !DILocation(line: 2022, column: 12, scope: !2222)
!2227 = !DILocation(line: 2021, column: 9, scope: !698)
!2228 = !DILocation(line: 2023, column: 9, scope: !2218)
!2229 = !DILocation(line: 2025, column: 9, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2025, column: 9)
!2231 = !DILocation(line: 2025, column: 17, scope: !2230)
!2232 = !DILocation(line: 2025, column: 9, scope: !427)
!2233 = !DILocation(line: 2026, column: 33, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2235, file: !16, line: 2026, column: 13)
!2235 = distinct !DILexicalBlock(scope: !2230, file: !16, line: 2025, column: 25)
!2236 = !DILocation(line: 2026, column: 38, scope: !2234)
!2237 = !DILocation(line: 2026, column: 47, scope: !2234)
!2238 = !DILocation(line: 2026, column: 55, scope: !2234)
!2239 = !DILocation(line: 2026, column: 65, scope: !2234)
!2240 = !DILocation(line: 2026, column: 14, scope: !2234)
!2241 = !DILocation(line: 2026, column: 13, scope: !2235)
!2242 = !DILocation(line: 2027, column: 13, scope: !2234)
!2243 = !DILocation(line: 2028, column: 5, scope: !2235)
!2244 = !DILocation(line: 2030, column: 9, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2030, column: 9)
!2246 = !DILocation(line: 2030, column: 9, scope: !427)
!2247 = !DILocation(line: 2031, column: 52, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2245, file: !16, line: 2030, column: 30)
!2249 = !DILocation(line: 2031, column: 9, scope: !2248)
!2250 = !DILocation(line: 2034, column: 13, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2248, file: !16, line: 2034, column: 13)
!2252 = !DILocation(line: 2034, column: 18, scope: !2251)
!2253 = !DILocation(line: 2034, column: 13, scope: !2248)
!2254 = !DILocation(line: 2035, column: 56, scope: !2251)
!2255 = !DILocation(line: 2035, column: 13, scope: !2251)
!2256 = !DILocation(line: 2037, column: 5, scope: !2248)
!2257 = !DILocation(line: 2039, column: 9, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2039, column: 9)
!2259 = !DILocation(line: 2039, column: 17, scope: !2258)
!2260 = !DILocation(line: 2039, column: 9, scope: !427)
!2261 = !DILocation(line: 2040, column: 13, scope: !2262)
!2262 = distinct !DILexicalBlock(scope: !2263, file: !16, line: 2040, column: 13)
!2263 = distinct !DILexicalBlock(scope: !2258, file: !16, line: 2039, column: 25)
!2264 = !DILocation(line: 2040, column: 13, scope: !2263)
!2265 = !DILocation(line: 2041, column: 24, scope: !2262)
!2266 = !DILocation(line: 2041, column: 13, scope: !2262)
!2267 = !DILocation(line: 2042, column: 41, scope: !2263)
!2268 = !DILocation(line: 2042, column: 9, scope: !2263)
!2269 = !DILocation(line: 2043, column: 5, scope: !2263)
!2270 = !DILocation(line: 2045, column: 40, scope: !2271)
!2271 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2045, column: 9)
!2272 = !DILocation(line: 2045, column: 45, scope: !2271)
!2273 = !DILocation(line: 2045, column: 10, scope: !2271)
!2274 = !DILocation(line: 2045, column: 9, scope: !427)
!2275 = !DILocation(line: 2046, column: 20, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2271, file: !16, line: 2045, column: 65)
!2277 = !DILocation(line: 2046, column: 9, scope: !2276)
!2278 = !DILocation(line: 2047, column: 26, scope: !2276)
!2279 = !DILocation(line: 2047, column: 9, scope: !2276)
!2280 = !DILocation(line: 2048, column: 9, scope: !2276)
!2281 = !DILocation(line: 2051, column: 9, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2051, column: 9)
!2283 = !DILocation(line: 2051, column: 18, scope: !2282)
!2284 = !DILocation(line: 2051, column: 9, scope: !427)
!2285 = !DILocalVariable(name: "stmp", scope: !2286, file: !16, line: 2052, type: !265)
!2286 = distinct !DILexicalBlock(scope: !2282, file: !16, line: 2051, column: 26)
!2287 = !DILocation(line: 2052, column: 14, scope: !2286)
!2288 = !DILocation(line: 2052, column: 34, scope: !2286)
!2289 = !DILocation(line: 2052, column: 21, scope: !2286)
!2290 = !DILocation(line: 2054, column: 13, scope: !2291)
!2291 = distinct !DILexicalBlock(scope: !2286, file: !16, line: 2054, column: 13)
!2292 = !DILocation(line: 2054, column: 18, scope: !2291)
!2293 = !DILocation(line: 2054, column: 13, scope: !2286)
!2294 = !DILocation(line: 2055, column: 24, scope: !2295)
!2295 = distinct !DILexicalBlock(scope: !2291, file: !16, line: 2054, column: 26)
!2296 = !DILocation(line: 2055, column: 69, scope: !2295)
!2297 = !DILocation(line: 2055, column: 13, scope: !2295)
!2298 = !DILocation(line: 2056, column: 30, scope: !2295)
!2299 = !DILocation(line: 2056, column: 13, scope: !2295)
!2300 = !DILocation(line: 2057, column: 13, scope: !2295)
!2301 = !DILocation(line: 2059, column: 44, scope: !2286)
!2302 = !DILocation(line: 2059, column: 19, scope: !2286)
!2303 = !DILocation(line: 2059, column: 17, scope: !2286)
!2304 = !DILocation(line: 2060, column: 18, scope: !2286)
!2305 = !DILocation(line: 2060, column: 9, scope: !2286)
!2306 = !DILocation(line: 2061, column: 13, scope: !2307)
!2307 = distinct !DILexicalBlock(scope: !2286, file: !16, line: 2061, column: 13)
!2308 = !DILocation(line: 2061, column: 21, scope: !2307)
!2309 = !DILocation(line: 2061, column: 13, scope: !2286)
!2310 = !DILocation(line: 2062, column: 24, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2307, file: !16, line: 2061, column: 29)
!2312 = !DILocation(line: 2062, column: 69, scope: !2311)
!2313 = !DILocation(line: 2062, column: 13, scope: !2311)
!2314 = !DILocation(line: 2063, column: 30, scope: !2311)
!2315 = !DILocation(line: 2063, column: 13, scope: !2311)
!2316 = !DILocation(line: 2064, column: 13, scope: !2311)
!2317 = !DILocation(line: 2067, column: 5, scope: !2286)
!2318 = !DILocation(line: 2069, column: 9, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2069, column: 9)
!2320 = !DILocation(line: 2069, column: 17, scope: !2319)
!2321 = !DILocation(line: 2069, column: 24, scope: !2319)
!2322 = !DILocation(line: 2069, column: 27, scope: !2323)
!2323 = !DILexicalBlockFile(scope: !2319, file: !16, discriminator: 1)
!2324 = !DILocation(line: 2069, column: 35, scope: !2323)
!2325 = !DILocation(line: 2069, column: 9, scope: !2323)
!2326 = !DILocation(line: 2070, column: 47, scope: !2319)
!2327 = !DILocation(line: 2070, column: 9, scope: !2319)
!2328 = !DILocation(line: 2072, column: 24, scope: !427)
!2329 = !DILocation(line: 2072, column: 29, scope: !427)
!2330 = !DILocation(line: 2072, column: 5, scope: !427)
!2331 = !DILocation(line: 2073, column: 41, scope: !2332)
!2332 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2073, column: 9)
!2333 = !DILocation(line: 2074, column: 41, scope: !2332)
!2334 = !DILocation(line: 2073, column: 10, scope: !2332)
!2335 = !DILocation(line: 2073, column: 9, scope: !427)
!2336 = !DILocation(line: 2076, column: 20, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2332, file: !16, line: 2075, column: 79)
!2338 = !DILocation(line: 2076, column: 9, scope: !2337)
!2339 = !DILocation(line: 2077, column: 26, scope: !2337)
!2340 = !DILocation(line: 2077, column: 9, scope: !2337)
!2341 = !DILocation(line: 2078, column: 9, scope: !2337)
!2342 = !DILocation(line: 2082, column: 36, scope: !427)
!2343 = !DILocation(line: 2082, column: 5, scope: !427)
!2344 = !DILocation(line: 2083, column: 34, scope: !427)
!2345 = !DILocation(line: 2083, column: 5, scope: !427)
!2346 = !DILocation(line: 2086, column: 46, scope: !427)
!2347 = !DILocation(line: 2086, column: 5, scope: !427)
!2348 = !DILocation(line: 2087, column: 44, scope: !427)
!2349 = !DILocation(line: 2087, column: 5, scope: !427)
!2350 = !DILocation(line: 2089, column: 9, scope: !2351)
!2351 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2089, column: 9)
!2352 = !DILocation(line: 2089, column: 14, scope: !2351)
!2353 = !DILocation(line: 2089, column: 9, scope: !427)
!2354 = !DILocation(line: 2090, column: 28, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2351, file: !16, line: 2089, column: 22)
!2356 = !DILocation(line: 2090, column: 34, scope: !2355)
!2357 = !DILocation(line: 2090, column: 9, scope: !2355)
!2358 = !DILocation(line: 2091, column: 45, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2355, file: !16, line: 2091, column: 13)
!2360 = !DILocation(line: 2092, column: 21, scope: !2359)
!2361 = !DILocation(line: 2091, column: 14, scope: !2359)
!2362 = !DILocation(line: 2091, column: 13, scope: !2355)
!2363 = !DILocation(line: 2094, column: 24, scope: !2364)
!2364 = distinct !DILexicalBlock(scope: !2359, file: !16, line: 2093, column: 59)
!2365 = !DILocation(line: 2094, column: 13, scope: !2364)
!2366 = !DILocation(line: 2095, column: 30, scope: !2364)
!2367 = !DILocation(line: 2095, column: 13, scope: !2364)
!2368 = !DILocation(line: 2096, column: 13, scope: !2364)
!2369 = !DILocation(line: 2098, column: 30, scope: !2355)
!2370 = !DILocation(line: 2098, column: 19, scope: !2355)
!2371 = !DILocation(line: 2098, column: 28, scope: !2355)
!2372 = !DILocation(line: 2099, column: 31, scope: !2355)
!2373 = !DILocation(line: 2099, column: 9, scope: !2355)
!2374 = !DILocation(line: 2100, column: 22, scope: !2355)
!2375 = !DILocation(line: 2100, column: 32, scope: !2355)
!2376 = !DILocation(line: 2100, column: 9, scope: !2355)
!2377 = !DILocation(line: 2101, column: 31, scope: !2355)
!2378 = !DILocation(line: 2101, column: 9, scope: !2355)
!2379 = !DILocation(line: 2102, column: 22, scope: !2355)
!2380 = !DILocation(line: 2102, column: 31, scope: !2355)
!2381 = !DILocation(line: 2102, column: 9, scope: !2355)
!2382 = !DILocation(line: 2103, column: 5, scope: !2355)
!2383 = !DILocation(line: 2106, column: 9, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2106, column: 9)
!2385 = !DILocation(line: 2106, column: 27, scope: !2384)
!2386 = !DILocation(line: 2106, column: 9, scope: !427)
!2387 = !DILocation(line: 2107, column: 46, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2384, file: !16, line: 2106, column: 35)
!2389 = !DILocation(line: 2107, column: 32, scope: !2388)
!2390 = !DILocation(line: 2107, column: 30, scope: !2388)
!2391 = !DILocation(line: 2108, column: 32, scope: !2388)
!2392 = !DILocation(line: 2109, column: 33, scope: !2388)
!2393 = !DILocation(line: 2111, column: 47, scope: !2394)
!2394 = distinct !DILexicalBlock(scope: !2388, file: !16, line: 2110, column: 13)
!2395 = !DILocation(line: 2112, column: 29, scope: !2394)
!2396 = !DILocation(line: 2111, column: 14, scope: !2394)
!2397 = !DILocation(line: 2110, column: 18, scope: !2394)
!2398 = !DILocation(line: 2112, column: 49, scope: !2394)
!2399 = !DILocation(line: 2110, column: 13, scope: !2388)
!2400 = !DILocation(line: 2113, column: 24, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2394, file: !16, line: 2112, column: 55)
!2402 = !DILocation(line: 2115, column: 24, scope: !2401)
!2403 = !DILocation(line: 2115, column: 43, scope: !2401)
!2404 = !DILocation(line: 2113, column: 13, scope: !2401)
!2405 = !DILocation(line: 2116, column: 13, scope: !2401)
!2406 = !DILocation(line: 2118, column: 28, scope: !2388)
!2407 = !DILocation(line: 2118, column: 9, scope: !2388)
!2408 = !DILocation(line: 2119, column: 32, scope: !2388)
!2409 = !DILocation(line: 2119, column: 9, scope: !2388)
!2410 = !DILocation(line: 2120, column: 43, scope: !2388)
!2411 = !DILocation(line: 2120, column: 9, scope: !2388)
!2412 = !DILocation(line: 2121, column: 5, scope: !2388)
!2413 = !DILocation(line: 2123, column: 9, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2384, file: !16, line: 2123, column: 9)
!2415 = !DILocation(line: 2123, column: 16, scope: !2414)
!2416 = !DILocation(line: 2123, column: 9, scope: !2384)
!2417 = !DILocation(line: 2124, column: 36, scope: !2418)
!2418 = distinct !DILexicalBlock(scope: !2414, file: !16, line: 2123, column: 24)
!2419 = !DILocation(line: 2124, column: 65, scope: !2418)
!2420 = !DILocation(line: 2124, column: 41, scope: !2418)
!2421 = !DILocation(line: 2124, column: 9, scope: !2422)
!2422 = !DILexicalBlockFile(scope: !2418, file: !16, discriminator: 1)
!2423 = !DILocation(line: 2126, column: 13, scope: !2424)
!2424 = distinct !DILexicalBlock(scope: !2418, file: !16, line: 2126, column: 13)
!2425 = !DILocation(line: 2126, column: 13, scope: !2418)
!2426 = !DILocation(line: 2127, column: 40, scope: !2424)
!2427 = !DILocation(line: 2127, column: 70, scope: !2424)
!2428 = !DILocation(line: 2127, column: 46, scope: !2424)
!2429 = !DILocation(line: 2127, column: 13, scope: !2430)
!2430 = !DILexicalBlockFile(scope: !2424, file: !16, discriminator: 1)
!2431 = !DILocation(line: 2127, column: 13, scope: !2424)
!2432 = !DILocation(line: 2128, column: 5, scope: !2418)
!2433 = !DILocation(line: 2130, column: 9, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2130, column: 9)
!2435 = !DILocation(line: 2130, column: 9, scope: !427)
!2436 = !DILocation(line: 2131, column: 31, scope: !2437)
!2437 = distinct !DILexicalBlock(scope: !2434, file: !16, line: 2130, column: 25)
!2438 = !DILocation(line: 2131, column: 9, scope: !2437)
!2439 = !DILocation(line: 2132, column: 22, scope: !2437)
!2440 = !DILocation(line: 2132, column: 9, scope: !2437)
!2441 = !DILocation(line: 2133, column: 13, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2437, file: !16, line: 2133, column: 13)
!2443 = !DILocation(line: 2133, column: 13, scope: !2437)
!2444 = !DILocation(line: 2134, column: 35, scope: !2445)
!2445 = distinct !DILexicalBlock(scope: !2442, file: !16, line: 2133, column: 19)
!2446 = !DILocation(line: 2134, column: 13, scope: !2445)
!2447 = !DILocation(line: 2135, column: 26, scope: !2445)
!2448 = !DILocation(line: 2135, column: 13, scope: !2445)
!2449 = !DILocation(line: 2136, column: 9, scope: !2445)
!2450 = !DILocation(line: 2137, column: 5, scope: !2437)
!2451 = !DILocation(line: 2139, column: 25, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2139, column: 9)
!2453 = !DILocation(line: 2139, column: 30, scope: !2452)
!2454 = !DILocation(line: 2139, column: 9, scope: !2452)
!2455 = !DILocation(line: 2139, column: 9, scope: !427)
!2456 = !DILocation(line: 2140, column: 9, scope: !2452)
!2457 = !DILocation(line: 2142, column: 9, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2142, column: 9)
!2459 = !DILocation(line: 2142, column: 24, scope: !2458)
!2460 = !DILocation(line: 2142, column: 9, scope: !427)
!2461 = !DILocation(line: 2143, column: 36, scope: !2458)
!2462 = !DILocation(line: 2143, column: 41, scope: !2458)
!2463 = !DILocation(line: 2143, column: 9, scope: !2458)
!2464 = !DILocation(line: 2144, column: 9, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2144, column: 9)
!2466 = !DILocation(line: 2144, column: 29, scope: !2465)
!2467 = !DILocation(line: 2144, column: 9, scope: !427)
!2468 = !DILocation(line: 2145, column: 41, scope: !2465)
!2469 = !DILocation(line: 2145, column: 46, scope: !2465)
!2470 = !DILocation(line: 2145, column: 9, scope: !2465)
!2471 = !DILocation(line: 2147, column: 9, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2147, column: 9)
!2473 = !DILocation(line: 2147, column: 9, scope: !427)
!2474 = !DILocation(line: 2148, column: 19, scope: !2472)
!2475 = !DILocation(line: 2148, column: 9, scope: !2472)
!2476 = !DILocation(line: 2149, column: 14, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2472, file: !16, line: 2149, column: 14)
!2478 = !DILocation(line: 2149, column: 14, scope: !2472)
!2479 = !DILocation(line: 2150, column: 19, scope: !2477)
!2480 = !DILocation(line: 2150, column: 9, scope: !2477)
!2481 = !DILocation(line: 2152, column: 19, scope: !2477)
!2482 = !DILocation(line: 2154, column: 9, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !427, file: !16, line: 2154, column: 9)
!2484 = !DILocation(line: 2154, column: 23, scope: !2483)
!2485 = !DILocation(line: 2155, column: 8, scope: !2483)
!2486 = !DILocation(line: 2155, column: 11, scope: !2487)
!2487 = !DILexicalBlockFile(scope: !2483, file: !16, discriminator: 1)
!2488 = !DILocation(line: 2154, column: 9, scope: !698)
!2489 = !DILocation(line: 2156, column: 16, scope: !2483)
!2490 = !DILocation(line: 2156, column: 9, scope: !2483)
!2491 = !DILocation(line: 2158, column: 31, scope: !427)
!2492 = !DILocation(line: 2158, column: 37, scope: !427)
!2493 = !DILocation(line: 2158, column: 43, scope: !427)
!2494 = !DILocation(line: 2158, column: 58, scope: !427)
!2495 = !DILocation(line: 2158, column: 71, scope: !427)
!2496 = !DILocation(line: 2159, column: 15, scope: !427)
!2497 = !DILocation(line: 2159, column: 26, scope: !427)
!2498 = !DILocation(line: 2159, column: 35, scope: !427)
!2499 = !DILocation(line: 2159, column: 44, scope: !427)
!2500 = !DILocation(line: 2158, column: 5, scope: !427)
!2501 = !DILocation(line: 2160, column: 17, scope: !427)
!2502 = !DILocation(line: 2160, column: 28, scope: !427)
!2503 = !DILocation(line: 2160, column: 5, scope: !427)
!2504 = !DILocation(line: 2161, column: 9, scope: !427)
!2505 = !DILocation(line: 2161, column: 5, scope: !427)
!2506 = !DILocation(line: 2163, column: 18, scope: !427)
!2507 = !DILocation(line: 2163, column: 5, scope: !427)
!2508 = !DILocation(line: 2164, column: 22, scope: !427)
!2509 = !DILocation(line: 2164, column: 5, scope: !427)
!2510 = !DILocation(line: 2165, column: 5, scope: !427)
!2511 = !DILocation(line: 2166, column: 15, scope: !427)
!2512 = !DILocation(line: 2166, column: 5, scope: !427)
!2513 = !DILocation(line: 2167, column: 26, scope: !427)
!2514 = !DILocation(line: 2167, column: 5, scope: !427)
!2515 = !DILocation(line: 2168, column: 15, scope: !427)
!2516 = !DILocation(line: 2168, column: 5, scope: !427)
!2517 = !DILocation(line: 2169, column: 19, scope: !427)
!2518 = !DILocation(line: 2169, column: 5, scope: !427)
!2519 = !DILocation(line: 2170, column: 19, scope: !427)
!2520 = !DILocation(line: 2170, column: 5, scope: !427)
!2521 = !DILocation(line: 2171, column: 22, scope: !427)
!2522 = !DILocation(line: 2171, column: 5, scope: !427)
!2523 = !DILocation(line: 2172, column: 22, scope: !427)
!2524 = !DILocation(line: 2172, column: 5, scope: !427)
!2525 = !DILocation(line: 2173, column: 17, scope: !427)
!2526 = !DILocation(line: 2173, column: 5, scope: !427)
!2527 = !DILocation(line: 2174, column: 17, scope: !427)
!2528 = !DILocation(line: 2174, column: 5, scope: !427)
!2529 = !DILocation(line: 2175, column: 17, scope: !427)
!2530 = !DILocation(line: 2175, column: 5, scope: !427)
!2531 = !DILocation(line: 2176, column: 17, scope: !427)
!2532 = !DILocation(line: 2176, column: 5, scope: !427)
!2533 = !DILocation(line: 2177, column: 28, scope: !427)
!2534 = !DILocation(line: 2177, column: 5, scope: !427)
!2535 = !DILocation(line: 2178, column: 5, scope: !427)
!2536 = !DILocation(line: 2179, column: 27, scope: !427)
!2537 = !DILocation(line: 2179, column: 5, scope: !427)
!2538 = !DILocation(line: 2180, column: 27, scope: !427)
!2539 = !DILocation(line: 2180, column: 5, scope: !427)
!2540 = !DILocation(line: 2181, column: 27, scope: !427)
!2541 = !DILocation(line: 2181, column: 5, scope: !427)
!2542 = !DILocation(line: 2182, column: 18, scope: !427)
!2543 = !DILocation(line: 2182, column: 5, scope: !427)
!2544 = !DILocation(line: 2183, column: 15, scope: !427)
!2545 = !DILocation(line: 2183, column: 5, scope: !427)
!2546 = !DILocation(line: 2184, column: 19, scope: !427)
!2547 = !DILocation(line: 2184, column: 5, scope: !427)
!2548 = !DILocation(line: 2186, column: 28, scope: !427)
!2549 = !DILocation(line: 2186, column: 5, scope: !427)
!2550 = !DILocation(line: 2188, column: 26, scope: !427)
!2551 = !DILocation(line: 2188, column: 5, scope: !427)
!2552 = !DILocation(line: 2189, column: 21, scope: !427)
!2553 = !DILocation(line: 2189, column: 5, scope: !427)
!2554 = !DILocation(line: 2190, column: 28, scope: !427)
!2555 = !DILocation(line: 2190, column: 5, scope: !427)
!2556 = !DILocation(line: 2191, column: 23, scope: !427)
!2557 = !DILocation(line: 2191, column: 5, scope: !427)
!2558 = !DILocation(line: 2192, column: 20, scope: !427)
!2559 = !DILocation(line: 2192, column: 5, scope: !427)
!2560 = !DILocation(line: 2193, column: 14, scope: !427)
!2561 = !DILocation(line: 2193, column: 5, scope: !427)
!2562 = !DILocation(line: 2194, column: 15, scope: !427)
!2563 = !DILocation(line: 2195, column: 14, scope: !427)
!2564 = !DILocation(line: 2195, column: 5, scope: !427)
!2565 = !DILocation(line: 2196, column: 15, scope: !427)
!2566 = !DILocation(line: 2200, column: 12, scope: !427)
!2567 = !DILocation(line: 2200, column: 5, scope: !427)
!2568 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_new_null", scope: !248, file: !248, line: 159, type: !2569, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!246}
!2571 = !DILocation(line: 159, column: 948, scope: !2568)
!2572 = !DILocation(line: 159, column: 914, scope: !2568)
!2573 = !DILocation(line: 159, column: 907, scope: !2568)
!2574 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_push", scope: !248, file: !248, line: 159, type: !2575, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!239, !246, !241}
!2577 = !DILocalVariable(name: "sk", arg: 1, scope: !2574, file: !248, line: 159, type: !246)
!2578 = !DILocation(line: 159, column: 2145, scope: !2574)
!2579 = !DILocalVariable(name: "ptr", arg: 2, scope: !2574, file: !248, line: 159, type: !241)
!2580 = !DILocation(line: 159, column: 2155, scope: !2574)
!2581 = !DILocation(line: 159, column: 2202, scope: !2574)
!2582 = !DILocation(line: 159, column: 2185, scope: !2574)
!2583 = !DILocation(line: 159, column: 2220, scope: !2574)
!2584 = !DILocation(line: 159, column: 2169, scope: !2574)
!2585 = !DILocation(line: 159, column: 2162, scope: !2574)
!2586 = distinct !DISubprogram(name: "sk_X509_CRL_new_null", scope: !257, file: !257, line: 228, type: !2587, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!255}
!2589 = !DILocation(line: 228, column: 886, scope: !2586)
!2590 = !DILocation(line: 228, column: 858, scope: !2586)
!2591 = !DILocation(line: 228, column: 851, scope: !2586)
!2592 = distinct !DISubprogram(name: "sk_X509_CRL_push", scope: !257, file: !257, line: 228, type: !2593, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!239, !255, !1565}
!2595 = !DILocalVariable(name: "sk", arg: 1, scope: !2592, file: !257, line: 228, type: !255)
!2596 = !DILocation(line: 228, column: 2007, scope: !2592)
!2597 = !DILocalVariable(name: "ptr", arg: 2, scope: !2592, file: !257, line: 228, type: !1565)
!2598 = !DILocation(line: 228, column: 2021, scope: !2592)
!2599 = !DILocation(line: 228, column: 2068, scope: !2592)
!2600 = !DILocation(line: 228, column: 2051, scope: !2592)
!2601 = !DILocation(line: 228, column: 2086, scope: !2592)
!2602 = !DILocation(line: 228, column: 2072, scope: !2592)
!2603 = !DILocation(line: 228, column: 2035, scope: !2592)
!2604 = !DILocation(line: 228, column: 2028, scope: !2592)
!2605 = distinct !DISubprogram(name: "generate_session_id", scope: !16, file: !16, line: 3495, type: !2606, isLocal: true, isDefinition: true, scopeLine: 3497, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2606 = !DISubroutineType(types: !2607)
!2607 = !{!239, !2608, !237, !2611}
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64, align: 64)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "SSL", file: !267, line: 151, baseType: !2610)
!2610 = !DICompositeType(tag: DW_TAG_structure_type, name: "ssl_st", file: !267, line: 151, flags: DIFlagFwdDecl)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64, align: 64)
!2612 = !DILocalVariable(name: "ssl", arg: 1, scope: !2605, file: !16, line: 3495, type: !2608)
!2613 = !DILocation(line: 3495, column: 37, scope: !2605)
!2614 = !DILocalVariable(name: "id", arg: 2, scope: !2605, file: !16, line: 3495, type: !237)
!2615 = !DILocation(line: 3495, column: 57, scope: !2605)
!2616 = !DILocalVariable(name: "id_len", arg: 3, scope: !2605, file: !16, line: 3496, type: !2611)
!2617 = !DILocation(line: 3496, column: 46, scope: !2605)
!2618 = !DILocalVariable(name: "count", scope: !2605, file: !16, line: 3498, type: !331)
!2619 = !DILocation(line: 3498, column: 18, scope: !2605)
!2620 = !DILocation(line: 3499, column: 5, scope: !2605)
!2621 = distinct !{!2621, !2620}
!2622 = !DILocation(line: 3500, column: 24, scope: !2623)
!2623 = distinct !DILexicalBlock(scope: !2624, file: !16, line: 3500, column: 13)
!2624 = distinct !DILexicalBlock(scope: !2605, file: !16, line: 3499, column: 8)
!2625 = !DILocation(line: 3500, column: 29, scope: !2623)
!2626 = !DILocation(line: 3500, column: 28, scope: !2623)
!2627 = !DILocation(line: 3500, column: 13, scope: !2623)
!2628 = !DILocation(line: 3500, column: 37, scope: !2623)
!2629 = !DILocation(line: 3500, column: 13, scope: !2624)
!2630 = !DILocation(line: 3501, column: 13, scope: !2623)
!2631 = !DILocation(line: 3509, column: 16, scope: !2624)
!2632 = !DILocation(line: 3509, column: 20, scope: !2624)
!2633 = !DILocation(line: 3510, column: 24, scope: !2624)
!2634 = !DILocation(line: 3510, column: 17, scope: !2624)
!2635 = !DILocation(line: 3510, column: 46, scope: !2624)
!2636 = !DILocation(line: 3510, column: 45, scope: !2624)
!2637 = !DILocation(line: 3510, column: 43, scope: !2624)
!2638 = !DILocation(line: 3510, column: 16, scope: !2624)
!2639 = !DILocation(line: 3511, column: 23, scope: !2624)
!2640 = !DILocation(line: 3511, column: 16, scope: !2624)
!2641 = !DILocation(line: 3510, column: 16, scope: !2642)
!2642 = !DILexicalBlockFile(scope: !2624, file: !16, discriminator: 1)
!2643 = !DILocation(line: 3511, column: 45, scope: !2642)
!2644 = !DILocation(line: 3511, column: 44, scope: !2642)
!2645 = !DILocation(line: 3510, column: 16, scope: !2646)
!2646 = !DILexicalBlockFile(scope: !2624, file: !16, discriminator: 2)
!2647 = !DILocation(line: 3510, column: 16, scope: !2648)
!2648 = !DILexicalBlockFile(scope: !2624, file: !16, discriminator: 3)
!2649 = !DILocation(line: 3509, column: 9, scope: !2642)
!2650 = !DILocation(line: 3512, column: 5, scope: !2624)
!2651 = !DILocation(line: 3513, column: 40, scope: !2605)
!2652 = !DILocation(line: 3513, column: 45, scope: !2605)
!2653 = !DILocation(line: 3513, column: 50, scope: !2605)
!2654 = !DILocation(line: 3513, column: 49, scope: !2605)
!2655 = !DILocation(line: 3513, column: 12, scope: !2605)
!2656 = !DILocation(line: 3513, column: 58, scope: !2605)
!2657 = !DILocation(line: 3514, column: 13, scope: !2605)
!2658 = !DILocation(line: 3514, column: 21, scope: !2605)
!2659 = !DILocation(line: 3512, column: 5, scope: !2642)
!2660 = !DILocation(line: 3515, column: 9, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2605, file: !16, line: 3515, column: 9)
!2662 = !DILocation(line: 3515, column: 15, scope: !2661)
!2663 = !DILocation(line: 3515, column: 9, scope: !2605)
!2664 = !DILocation(line: 3516, column: 9, scope: !2661)
!2665 = !DILocation(line: 3517, column: 5, scope: !2605)
!2666 = !DILocation(line: 3518, column: 1, scope: !2605)
!2667 = distinct !DISubprogram(name: "init_session_cache_ctx", scope: !16, file: !16, line: 3613, type: !2668, isLocal: true, isDefinition: true, scopeLine: 3614, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{null, !362}
!2670 = !DILocalVariable(name: "sctx", arg: 1, scope: !2667, file: !16, line: 3613, type: !362)
!2671 = !DILocation(line: 3613, column: 45, scope: !2667)
!2672 = !DILocation(line: 3615, column: 18, scope: !2667)
!2673 = !DILocation(line: 3615, column: 5, scope: !2667)
!2674 = !DILocation(line: 3618, column: 29, scope: !2667)
!2675 = !DILocation(line: 3618, column: 5, scope: !2667)
!2676 = !DILocation(line: 3619, column: 29, scope: !2667)
!2677 = !DILocation(line: 3619, column: 5, scope: !2667)
!2678 = !DILocation(line: 3620, column: 32, scope: !2667)
!2679 = !DILocation(line: 3620, column: 5, scope: !2667)
!2680 = !DILocation(line: 3621, column: 1, scope: !2667)
!2681 = distinct !DISubprogram(name: "next_proto_cb", scope: !16, file: !16, line: 672, type: !2682, isLocal: true, isDefinition: true, scopeLine: 674, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!239, !2608, !318, !2611, !236}
!2684 = !DILocalVariable(name: "s", arg: 1, scope: !2681, file: !16, line: 672, type: !2608)
!2685 = !DILocation(line: 672, column: 31, scope: !2681)
!2686 = !DILocalVariable(name: "data", arg: 2, scope: !2681, file: !16, line: 672, type: !318)
!2687 = !DILocation(line: 672, column: 56, scope: !2681)
!2688 = !DILocalVariable(name: "len", arg: 3, scope: !2681, file: !16, line: 673, type: !2611)
!2689 = !DILocation(line: 673, column: 40, scope: !2681)
!2690 = !DILocalVariable(name: "arg", arg: 4, scope: !2681, file: !16, line: 673, type: !236)
!2691 = !DILocation(line: 673, column: 51, scope: !2681)
!2692 = !DILocalVariable(name: "next_proto", scope: !2681, file: !16, line: 675, type: !2693)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64, align: 64)
!2694 = !DILocation(line: 675, column: 25, scope: !2681)
!2695 = !DILocation(line: 675, column: 38, scope: !2681)
!2696 = !DILocation(line: 677, column: 13, scope: !2681)
!2697 = !DILocation(line: 677, column: 25, scope: !2681)
!2698 = !DILocation(line: 677, column: 6, scope: !2681)
!2699 = !DILocation(line: 677, column: 11, scope: !2681)
!2700 = !DILocation(line: 678, column: 12, scope: !2681)
!2701 = !DILocation(line: 678, column: 24, scope: !2681)
!2702 = !DILocation(line: 678, column: 6, scope: !2681)
!2703 = !DILocation(line: 678, column: 10, scope: !2681)
!2704 = !DILocation(line: 680, column: 5, scope: !2681)
!2705 = distinct !DISubprogram(name: "alpn_cb", scope: !16, file: !16, line: 690, type: !2706, isLocal: true, isDefinition: true, scopeLine: 692, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{!239, !2608, !318, !237, !319, !331, !236}
!2708 = !DILocalVariable(name: "s", arg: 1, scope: !2705, file: !16, line: 690, type: !2608)
!2709 = !DILocation(line: 690, column: 25, scope: !2705)
!2710 = !DILocalVariable(name: "out", arg: 2, scope: !2705, file: !16, line: 690, type: !318)
!2711 = !DILocation(line: 690, column: 50, scope: !2705)
!2712 = !DILocalVariable(name: "outlen", arg: 3, scope: !2705, file: !16, line: 690, type: !237)
!2713 = !DILocation(line: 690, column: 70, scope: !2705)
!2714 = !DILocalVariable(name: "in", arg: 4, scope: !2705, file: !16, line: 691, type: !319)
!2715 = !DILocation(line: 691, column: 41, scope: !2705)
!2716 = !DILocalVariable(name: "inlen", arg: 5, scope: !2705, file: !16, line: 691, type: !331)
!2717 = !DILocation(line: 691, column: 58, scope: !2705)
!2718 = !DILocalVariable(name: "arg", arg: 6, scope: !2705, file: !16, line: 691, type: !236)
!2719 = !DILocation(line: 691, column: 71, scope: !2705)
!2720 = !DILocalVariable(name: "alpn_ctx", scope: !2705, file: !16, line: 693, type: !2721)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64, align: 64)
!2722 = !DILocation(line: 693, column: 20, scope: !2705)
!2723 = !DILocation(line: 693, column: 31, scope: !2705)
!2724 = !DILocation(line: 695, column: 10, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2705, file: !16, line: 695, column: 9)
!2726 = !DILocation(line: 695, column: 9, scope: !2705)
!2727 = !DILocalVariable(name: "i", scope: !2728, file: !16, line: 697, type: !331)
!2728 = distinct !DILexicalBlock(scope: !2725, file: !16, line: 695, column: 19)
!2729 = !DILocation(line: 697, column: 22, scope: !2728)
!2730 = !DILocation(line: 698, column: 20, scope: !2728)
!2731 = !DILocation(line: 698, column: 9, scope: !2728)
!2732 = !DILocation(line: 699, column: 16, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2728, file: !16, line: 699, column: 9)
!2734 = !DILocation(line: 699, column: 14, scope: !2733)
!2735 = !DILocation(line: 699, column: 21, scope: !2736)
!2736 = !DILexicalBlockFile(scope: !2737, file: !16, discriminator: 1)
!2737 = distinct !DILexicalBlock(scope: !2733, file: !16, line: 699, column: 9)
!2738 = !DILocation(line: 699, column: 25, scope: !2736)
!2739 = !DILocation(line: 699, column: 23, scope: !2736)
!2740 = !DILocation(line: 699, column: 9, scope: !2736)
!2741 = !DILocation(line: 700, column: 17, scope: !2742)
!2742 = distinct !DILexicalBlock(scope: !2743, file: !16, line: 700, column: 17)
!2743 = distinct !DILexicalBlock(scope: !2737, file: !16, line: 699, column: 33)
!2744 = !DILocation(line: 700, column: 17, scope: !2743)
!2745 = !DILocation(line: 701, column: 27, scope: !2742)
!2746 = !DILocation(line: 701, column: 17, scope: !2742)
!2747 = !DILocation(line: 702, column: 23, scope: !2743)
!2748 = !DILocation(line: 702, column: 38, scope: !2743)
!2749 = !DILocation(line: 702, column: 40, scope: !2743)
!2750 = !DILocation(line: 702, column: 35, scope: !2743)
!2751 = !DILocation(line: 702, column: 49, scope: !2743)
!2752 = !DILocation(line: 702, column: 46, scope: !2743)
!2753 = !DILocation(line: 702, column: 13, scope: !2743)
!2754 = !DILocation(line: 703, column: 21, scope: !2743)
!2755 = !DILocation(line: 703, column: 18, scope: !2743)
!2756 = !DILocation(line: 703, column: 24, scope: !2743)
!2757 = !DILocation(line: 703, column: 15, scope: !2743)
!2758 = !DILocation(line: 699, column: 9, scope: !2759)
!2759 = !DILexicalBlockFile(scope: !2737, file: !16, discriminator: 2)
!2760 = distinct !{!2760, !2761}
!2761 = !DILocation(line: 699, column: 9, scope: !2728)
!2762 = !DILocation(line: 705, column: 19, scope: !2728)
!2763 = !DILocation(line: 705, column: 9, scope: !2728)
!2764 = !DILocation(line: 706, column: 5, scope: !2728)
!2765 = !DILocation(line: 709, column: 28, scope: !2766)
!2766 = distinct !DILexicalBlock(scope: !2705, file: !16, line: 708, column: 9)
!2767 = !DILocation(line: 709, column: 33, scope: !2766)
!2768 = !DILocation(line: 709, column: 41, scope: !2766)
!2769 = !DILocation(line: 709, column: 51, scope: !2766)
!2770 = !DILocation(line: 709, column: 57, scope: !2766)
!2771 = !DILocation(line: 709, column: 67, scope: !2766)
!2772 = !DILocation(line: 709, column: 72, scope: !2766)
!2773 = !DILocation(line: 710, column: 10, scope: !2766)
!2774 = !DILocation(line: 708, column: 9, scope: !2766)
!2775 = !DILocation(line: 710, column: 17, scope: !2766)
!2776 = !DILocation(line: 708, column: 9, scope: !2705)
!2777 = !DILocation(line: 711, column: 9, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2766, file: !16, line: 710, column: 23)
!2779 = !DILocation(line: 714, column: 10, scope: !2780)
!2780 = distinct !DILexicalBlock(scope: !2705, file: !16, line: 714, column: 9)
!2781 = !DILocation(line: 714, column: 9, scope: !2705)
!2782 = !DILocation(line: 715, column: 20, scope: !2783)
!2783 = distinct !DILexicalBlock(scope: !2780, file: !16, line: 714, column: 19)
!2784 = !DILocation(line: 715, column: 9, scope: !2783)
!2785 = !DILocation(line: 716, column: 19, scope: !2783)
!2786 = !DILocation(line: 716, column: 31, scope: !2783)
!2787 = !DILocation(line: 716, column: 30, scope: !2783)
!2788 = !DILocation(line: 716, column: 37, scope: !2783)
!2789 = !DILocation(line: 716, column: 36, scope: !2783)
!2790 = !DILocation(line: 716, column: 9, scope: !2783)
!2791 = !DILocation(line: 717, column: 19, scope: !2783)
!2792 = !DILocation(line: 717, column: 9, scope: !2783)
!2793 = !DILocation(line: 718, column: 5, scope: !2783)
!2794 = !DILocation(line: 720, column: 5, scope: !2705)
!2795 = !DILocation(line: 721, column: 1, scope: !2705)
!2796 = distinct !DISubprogram(name: "load_dh_param", scope: !16, file: !16, line: 2938, type: !2797, isLocal: true, isDefinition: true, scopeLine: 2939, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!2082, !349}
!2799 = !DILocalVariable(name: "dhfile", arg: 1, scope: !2796, file: !16, line: 2938, type: !349)
!2800 = !DILocation(line: 2938, column: 38, scope: !2796)
!2801 = !DILocalVariable(name: "ret", scope: !2796, file: !16, line: 2940, type: !2082)
!2802 = !DILocation(line: 2940, column: 9, scope: !2796)
!2803 = !DILocalVariable(name: "bio", scope: !2796, file: !16, line: 2941, type: !265)
!2804 = !DILocation(line: 2941, column: 10, scope: !2796)
!2805 = !DILocation(line: 2943, column: 29, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2796, file: !16, line: 2943, column: 9)
!2807 = !DILocation(line: 2943, column: 16, scope: !2806)
!2808 = !DILocation(line: 2943, column: 14, scope: !2806)
!2809 = !DILocation(line: 2943, column: 43, scope: !2806)
!2810 = !DILocation(line: 2943, column: 9, scope: !2796)
!2811 = !DILocation(line: 2944, column: 9, scope: !2806)
!2812 = !DILocation(line: 2945, column: 33, scope: !2796)
!2813 = !DILocation(line: 2945, column: 11, scope: !2796)
!2814 = !DILocation(line: 2945, column: 9, scope: !2796)
!2815 = !DILocation(line: 2945, column: 5, scope: !2796)
!2816 = !DILocation(line: 2947, column: 14, scope: !2796)
!2817 = !DILocation(line: 2947, column: 5, scope: !2796)
!2818 = !DILocation(line: 2948, column: 12, scope: !2796)
!2819 = !DILocation(line: 2948, column: 5, scope: !2796)
!2820 = distinct !DISubprogram(name: "not_resumable_sess_cb", scope: !16, file: !16, line: 723, type: !2821, isLocal: true, isDefinition: true, scopeLine: 724, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!239, !2608, !239}
!2823 = !DILocalVariable(name: "s", arg: 1, scope: !2820, file: !16, line: 723, type: !2608)
!2824 = !DILocation(line: 723, column: 39, scope: !2820)
!2825 = !DILocalVariable(name: "is_forward_secure", arg: 2, scope: !2820, file: !16, line: 723, type: !239)
!2826 = !DILocation(line: 723, column: 46, scope: !2820)
!2827 = !DILocation(line: 726, column: 12, scope: !2820)
!2828 = !DILocation(line: 726, column: 5, scope: !2820)
!2829 = distinct !DISubprogram(name: "psk_server_cb", scope: !16, file: !16, line: 127, type: !2830, isLocal: true, isDefinition: true, scopeLine: 130, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!331, !2608, !349, !237, !331}
!2832 = !DILocalVariable(name: "ssl", arg: 1, scope: !2829, file: !16, line: 127, type: !2608)
!2833 = !DILocation(line: 127, column: 40, scope: !2829)
!2834 = !DILocalVariable(name: "identity", arg: 2, scope: !2829, file: !16, line: 127, type: !349)
!2835 = !DILocation(line: 127, column: 57, scope: !2829)
!2836 = !DILocalVariable(name: "psk", arg: 3, scope: !2829, file: !16, line: 128, type: !237)
!2837 = !DILocation(line: 128, column: 50, scope: !2829)
!2838 = !DILocalVariable(name: "max_psk_len", arg: 4, scope: !2829, file: !16, line: 129, type: !331)
!2839 = !DILocation(line: 129, column: 48, scope: !2829)
!2840 = !DILocalVariable(name: "key_len", scope: !2829, file: !16, line: 131, type: !321)
!2841 = !DILocation(line: 131, column: 10, scope: !2829)
!2842 = !DILocalVariable(name: "key", scope: !2829, file: !16, line: 132, type: !237)
!2843 = !DILocation(line: 132, column: 20, scope: !2829)
!2844 = !DILocation(line: 134, column: 9, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 134, column: 9)
!2846 = !DILocation(line: 134, column: 9, scope: !2829)
!2847 = !DILocation(line: 135, column: 20, scope: !2845)
!2848 = !DILocation(line: 135, column: 9, scope: !2845)
!2849 = !DILocation(line: 136, column: 9, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 136, column: 9)
!2851 = !DILocation(line: 136, column: 18, scope: !2850)
!2852 = !DILocation(line: 136, column: 9, scope: !2829)
!2853 = !DILocation(line: 137, column: 20, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2850, file: !16, line: 136, column: 26)
!2855 = !DILocation(line: 137, column: 9, scope: !2854)
!2856 = !DILocation(line: 138, column: 9, scope: !2854)
!2857 = !DILocation(line: 140, column: 9, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 140, column: 9)
!2859 = !DILocation(line: 140, column: 9, scope: !2829)
!2860 = !DILocation(line: 141, column: 20, scope: !2858)
!2861 = !DILocation(line: 142, column: 32, scope: !2858)
!2862 = !DILocation(line: 142, column: 25, scope: !2858)
!2863 = !DILocation(line: 142, column: 20, scope: !2858)
!2864 = !DILocation(line: 142, column: 43, scope: !2858)
!2865 = !DILocation(line: 141, column: 9, scope: !2858)
!2866 = !DILocation(line: 145, column: 16, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 145, column: 9)
!2868 = !DILocation(line: 145, column: 26, scope: !2867)
!2869 = !DILocation(line: 145, column: 9, scope: !2867)
!2870 = !DILocation(line: 145, column: 40, scope: !2867)
!2871 = !DILocation(line: 145, column: 9, scope: !2829)
!2872 = !DILocation(line: 146, column: 20, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2867, file: !16, line: 145, column: 46)
!2874 = !DILocation(line: 147, column: 51, scope: !2873)
!2875 = !DILocation(line: 147, column: 61, scope: !2873)
!2876 = !DILocation(line: 146, column: 9, scope: !2873)
!2877 = !DILocation(line: 148, column: 5, scope: !2873)
!2878 = !DILocation(line: 149, column: 11, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2880, file: !16, line: 149, column: 11)
!2880 = distinct !DILexicalBlock(scope: !2867, file: !16, line: 148, column: 12)
!2881 = !DILocation(line: 149, column: 11, scope: !2880)
!2882 = !DILocation(line: 150, column: 20, scope: !2879)
!2883 = !DILocation(line: 150, column: 9, scope: !2879)
!2884 = !DILocation(line: 154, column: 30, scope: !2829)
!2885 = !DILocation(line: 154, column: 11, scope: !2829)
!2886 = !DILocation(line: 154, column: 9, scope: !2829)
!2887 = !DILocation(line: 155, column: 9, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 155, column: 9)
!2889 = !DILocation(line: 155, column: 13, scope: !2888)
!2890 = !DILocation(line: 155, column: 9, scope: !2829)
!2891 = !DILocation(line: 156, column: 20, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2888, file: !16, line: 155, column: 21)
!2893 = !DILocation(line: 157, column: 20, scope: !2892)
!2894 = !DILocation(line: 156, column: 9, scope: !2892)
!2895 = !DILocation(line: 158, column: 9, scope: !2892)
!2896 = !DILocation(line: 160, column: 9, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 160, column: 9)
!2898 = !DILocation(line: 160, column: 24, scope: !2897)
!2899 = !DILocation(line: 160, column: 19, scope: !2897)
!2900 = !DILocation(line: 160, column: 17, scope: !2897)
!2901 = !DILocation(line: 160, column: 9, scope: !2829)
!2902 = !DILocation(line: 161, column: 20, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2897, file: !16, line: 160, column: 37)
!2904 = !DILocation(line: 163, column: 20, scope: !2903)
!2905 = !DILocation(line: 163, column: 33, scope: !2903)
!2906 = !DILocation(line: 161, column: 9, scope: !2903)
!2907 = !DILocation(line: 164, column: 21, scope: !2903)
!2908 = !DILocation(line: 164, column: 9, scope: !2903)
!2909 = !DILocation(line: 165, column: 9, scope: !2903)
!2910 = !DILocation(line: 168, column: 12, scope: !2829)
!2911 = !DILocation(line: 168, column: 17, scope: !2829)
!2912 = !DILocation(line: 168, column: 22, scope: !2829)
!2913 = !DILocation(line: 168, column: 5, scope: !2829)
!2914 = !DILocation(line: 169, column: 17, scope: !2829)
!2915 = !DILocation(line: 169, column: 5, scope: !2829)
!2916 = !DILocation(line: 171, column: 9, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 171, column: 9)
!2918 = !DILocation(line: 171, column: 9, scope: !2829)
!2919 = !DILocation(line: 172, column: 20, scope: !2917)
!2920 = !DILocation(line: 172, column: 56, scope: !2917)
!2921 = !DILocation(line: 172, column: 9, scope: !2917)
!2922 = !DILocation(line: 173, column: 12, scope: !2829)
!2923 = !DILocation(line: 173, column: 5, scope: !2829)
!2924 = !DILocation(line: 175, column: 9, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2829, file: !16, line: 175, column: 9)
!2926 = !DILocation(line: 175, column: 9, scope: !2829)
!2927 = !DILocation(line: 176, column: 20, scope: !2925)
!2928 = !DILocation(line: 176, column: 9, scope: !2925)
!2929 = !DILocation(line: 177, column: 25, scope: !2829)
!2930 = !DILocation(line: 177, column: 16, scope: !2829)
!2931 = !DILocation(line: 177, column: 11, scope: !2829)
!2932 = !DILocation(line: 178, column: 25, scope: !2829)
!2933 = !DILocation(line: 178, column: 16, scope: !2829)
!2934 = !DILocation(line: 178, column: 11, scope: !2829)
!2935 = !DILocation(line: 179, column: 5, scope: !2829)
!2936 = !DILocation(line: 180, column: 1, scope: !2829)
!2937 = distinct !DISubprogram(name: "psk_find_session_cb", scope: !16, file: !16, line: 186, type: !2938, isLocal: true, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!239, !2608, !319, !591, !2940}
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64, align: 64)
!2941 = !DILocalVariable(name: "ssl", arg: 1, scope: !2937, file: !16, line: 186, type: !2608)
!2942 = !DILocation(line: 186, column: 37, scope: !2937)
!2943 = !DILocalVariable(name: "identity", arg: 2, scope: !2937, file: !16, line: 186, type: !319)
!2944 = !DILocation(line: 186, column: 63, scope: !2937)
!2945 = !DILocalVariable(name: "identity_len", arg: 3, scope: !2937, file: !16, line: 187, type: !591)
!2946 = !DILocation(line: 187, column: 39, scope: !2937)
!2947 = !DILocalVariable(name: "sess", arg: 4, scope: !2937, file: !16, line: 187, type: !2940)
!2948 = !DILocation(line: 187, column: 67, scope: !2937)
!2949 = !DILocalVariable(name: "tmpsess", scope: !2937, file: !16, line: 189, type: !399)
!2950 = !DILocation(line: 189, column: 18, scope: !2937)
!2951 = !DILocalVariable(name: "key", scope: !2937, file: !16, line: 190, type: !237)
!2952 = !DILocation(line: 190, column: 20, scope: !2937)
!2953 = !DILocalVariable(name: "key_len", scope: !2937, file: !16, line: 191, type: !321)
!2954 = !DILocation(line: 191, column: 10, scope: !2937)
!2955 = !DILocalVariable(name: "cipher", scope: !2937, file: !16, line: 192, type: !334)
!2956 = !DILocation(line: 192, column: 23, scope: !2937)
!2957 = !DILocation(line: 194, column: 16, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2937, file: !16, line: 194, column: 9)
!2959 = !DILocation(line: 194, column: 9, scope: !2958)
!2960 = !DILocation(line: 194, column: 33, scope: !2958)
!2961 = !DILocation(line: 194, column: 30, scope: !2958)
!2962 = !DILocation(line: 195, column: 13, scope: !2958)
!2963 = !DILocation(line: 195, column: 23, scope: !2964)
!2964 = !DILexicalBlockFile(scope: !2958, file: !16, discriminator: 1)
!2965 = !DILocation(line: 195, column: 37, scope: !2964)
!2966 = !DILocation(line: 195, column: 47, scope: !2964)
!2967 = !DILocation(line: 195, column: 16, scope: !2964)
!2968 = !DILocation(line: 195, column: 61, scope: !2964)
!2969 = !DILocation(line: 194, column: 9, scope: !2970)
!2970 = !DILexicalBlockFile(scope: !2937, file: !16, discriminator: 1)
!2971 = !DILocation(line: 196, column: 10, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2958, file: !16, line: 195, column: 67)
!2973 = !DILocation(line: 196, column: 15, scope: !2972)
!2974 = !DILocation(line: 197, column: 9, scope: !2972)
!2975 = !DILocation(line: 200, column: 9, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2937, file: !16, line: 200, column: 9)
!2977 = !DILocation(line: 200, column: 17, scope: !2976)
!2978 = !DILocation(line: 200, column: 9, scope: !2937)
!2979 = !DILocation(line: 201, column: 28, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2976, file: !16, line: 200, column: 25)
!2981 = !DILocation(line: 201, column: 9, scope: !2980)
!2982 = !DILocation(line: 202, column: 17, scope: !2980)
!2983 = !DILocation(line: 202, column: 10, scope: !2980)
!2984 = !DILocation(line: 202, column: 15, scope: !2980)
!2985 = !DILocation(line: 203, column: 9, scope: !2980)
!2986 = !DILocation(line: 206, column: 30, scope: !2937)
!2987 = !DILocation(line: 206, column: 11, scope: !2937)
!2988 = !DILocation(line: 206, column: 9, scope: !2937)
!2989 = !DILocation(line: 207, column: 9, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2937, file: !16, line: 207, column: 9)
!2991 = !DILocation(line: 207, column: 13, scope: !2990)
!2992 = !DILocation(line: 207, column: 9, scope: !2937)
!2993 = !DILocation(line: 208, column: 20, scope: !2994)
!2994 = distinct !DILexicalBlock(scope: !2990, file: !16, line: 207, column: 21)
!2995 = !DILocation(line: 209, column: 20, scope: !2994)
!2996 = !DILocation(line: 208, column: 9, scope: !2994)
!2997 = !DILocation(line: 210, column: 9, scope: !2994)
!2998 = !DILocation(line: 214, column: 30, scope: !2937)
!2999 = !DILocation(line: 214, column: 14, scope: !2937)
!3000 = !DILocation(line: 214, column: 12, scope: !2937)
!3001 = !DILocation(line: 215, column: 9, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2937, file: !16, line: 215, column: 9)
!3003 = !DILocation(line: 215, column: 16, scope: !3002)
!3004 = !DILocation(line: 215, column: 9, scope: !2937)
!3005 = !DILocation(line: 216, column: 20, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3002, file: !16, line: 215, column: 24)
!3007 = !DILocation(line: 216, column: 9, scope: !3006)
!3008 = !DILocation(line: 217, column: 21, scope: !3006)
!3009 = !DILocation(line: 217, column: 9, scope: !3006)
!3010 = !DILocation(line: 218, column: 9, scope: !3006)
!3011 = !DILocation(line: 221, column: 15, scope: !2937)
!3012 = !DILocation(line: 221, column: 13, scope: !2937)
!3013 = !DILocation(line: 222, column: 9, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2937, file: !16, line: 222, column: 9)
!3015 = !DILocation(line: 222, column: 17, scope: !3014)
!3016 = !DILocation(line: 223, column: 12, scope: !3014)
!3017 = !DILocation(line: 223, column: 44, scope: !3018)
!3018 = !DILexicalBlockFile(scope: !3014, file: !16, discriminator: 1)
!3019 = !DILocation(line: 223, column: 53, scope: !3018)
!3020 = !DILocation(line: 223, column: 58, scope: !3018)
!3021 = !DILocation(line: 223, column: 16, scope: !3018)
!3022 = !DILocation(line: 224, column: 13, scope: !3014)
!3023 = !DILocation(line: 224, column: 40, scope: !3018)
!3024 = !DILocation(line: 224, column: 49, scope: !3018)
!3025 = !DILocation(line: 224, column: 17, scope: !3018)
!3026 = !DILocation(line: 225, column: 13, scope: !3014)
!3027 = !DILocation(line: 225, column: 50, scope: !3018)
!3028 = !DILocation(line: 225, column: 71, scope: !3018)
!3029 = !DILocation(line: 225, column: 59, scope: !3018)
!3030 = !DILocation(line: 225, column: 17, scope: !3031)
!3031 = !DILexicalBlockFile(scope: !3018, file: !16, discriminator: 2)
!3032 = !DILocation(line: 225, column: 17, scope: !3018)
!3033 = !DILocation(line: 222, column: 9, scope: !2970)
!3034 = !DILocation(line: 226, column: 21, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !3014, file: !16, line: 225, column: 78)
!3036 = !DILocation(line: 226, column: 9, scope: !3035)
!3037 = !DILocation(line: 227, column: 9, scope: !3035)
!3038 = !DILocation(line: 229, column: 17, scope: !2937)
!3039 = !DILocation(line: 229, column: 5, scope: !2937)
!3040 = !DILocation(line: 230, column: 13, scope: !2937)
!3041 = !DILocation(line: 230, column: 6, scope: !2937)
!3042 = !DILocation(line: 230, column: 11, scope: !2937)
!3043 = !DILocation(line: 232, column: 5, scope: !2937)
!3044 = !DILocation(line: 233, column: 1, scope: !2937)
!3045 = distinct !DISubprogram(name: "ssl_servername_cb", scope: !16, file: !16, line: 459, type: !3046, isLocal: true, isDefinition: true, scopeLine: 460, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!239, !2608, !3048, !236}
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64, align: 64)
!3049 = !DILocalVariable(name: "s", arg: 1, scope: !3045, file: !16, line: 459, type: !2608)
!3050 = !DILocation(line: 459, column: 35, scope: !3045)
!3051 = !DILocalVariable(name: "ad", arg: 2, scope: !3045, file: !16, line: 459, type: !3048)
!3052 = !DILocation(line: 459, column: 43, scope: !3045)
!3053 = !DILocalVariable(name: "arg", arg: 3, scope: !3045, file: !16, line: 459, type: !236)
!3054 = !DILocation(line: 459, column: 53, scope: !3045)
!3055 = !DILocalVariable(name: "p", scope: !3045, file: !16, line: 461, type: !259)
!3056 = !DILocation(line: 461, column: 16, scope: !3045)
!3057 = !DILocation(line: 461, column: 34, scope: !3045)
!3058 = !DILocation(line: 461, column: 20, scope: !3045)
!3059 = !DILocalVariable(name: "servername", scope: !3045, file: !16, line: 462, type: !349)
!3060 = !DILocation(line: 462, column: 17, scope: !3045)
!3061 = !DILocation(line: 462, column: 49, scope: !3045)
!3062 = !DILocation(line: 462, column: 30, scope: !3045)
!3063 = !DILocation(line: 464, column: 9, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !3045, file: !16, line: 464, column: 9)
!3065 = !DILocation(line: 464, column: 20, scope: !3064)
!3066 = !DILocation(line: 464, column: 27, scope: !3064)
!3067 = !DILocation(line: 464, column: 30, scope: !3068)
!3068 = !DILexicalBlockFile(scope: !3064, file: !16, discriminator: 1)
!3069 = !DILocation(line: 464, column: 33, scope: !3068)
!3070 = !DILocation(line: 464, column: 42, scope: !3068)
!3071 = !DILocation(line: 464, column: 9, scope: !3068)
!3072 = !DILocalVariable(name: "cp", scope: !3073, file: !16, line: 465, type: !349)
!3073 = distinct !DILexicalBlock(scope: !3064, file: !16, line: 464, column: 51)
!3074 = !DILocation(line: 465, column: 21, scope: !3073)
!3075 = !DILocation(line: 465, column: 26, scope: !3073)
!3076 = !DILocalVariable(name: "uc", scope: !3073, file: !16, line: 466, type: !238)
!3077 = !DILocation(line: 466, column: 23, scope: !3073)
!3078 = !DILocation(line: 468, column: 20, scope: !3073)
!3079 = !DILocation(line: 468, column: 23, scope: !3073)
!3080 = !DILocation(line: 468, column: 9, scope: !3073)
!3081 = !DILocation(line: 469, column: 9, scope: !3073)
!3082 = !DILocation(line: 469, column: 25, scope: !3083)
!3083 = !DILexicalBlockFile(scope: !3073, file: !16, discriminator: 1)
!3084 = !DILocation(line: 469, column: 22, scope: !3083)
!3085 = !DILocation(line: 469, column: 20, scope: !3083)
!3086 = !DILocation(line: 469, column: 16, scope: !3083)
!3087 = !DILocation(line: 469, column: 29, scope: !3083)
!3088 = !DILocation(line: 469, column: 9, scope: !3083)
!3089 = !DILocation(line: 470, column: 24, scope: !3073)
!3090 = !DILocation(line: 470, column: 27, scope: !3073)
!3091 = !DILocation(line: 471, column: 23, scope: !3073)
!3092 = !DILocation(line: 471, column: 25, scope: !3073)
!3093 = !DILocation(line: 471, column: 34, scope: !3073)
!3094 = !DILocation(line: 471, column: 35, scope: !3073)
!3095 = !DILocation(line: 471, column: 38, scope: !3083)
!3096 = !DILocation(line: 471, column: 59, scope: !3083)
!3097 = !DILocation(line: 471, column: 39, scope: !3083)
!3098 = !DILocation(line: 471, column: 41, scope: !3083)
!3099 = !DILocation(line: 471, column: 40, scope: !3083)
!3100 = !DILocation(line: 471, column: 42, scope: !3083)
!3101 = !DILocation(line: 471, column: 35, scope: !3083)
!3102 = !DILocation(line: 471, column: 23, scope: !3103)
!3103 = !DILexicalBlockFile(scope: !3073, file: !16, discriminator: 2)
!3104 = !DILocation(line: 471, column: 70, scope: !3103)
!3105 = !DILocation(line: 470, column: 13, scope: !3083)
!3106 = !DILocation(line: 469, column: 9, scope: !3103)
!3107 = distinct !{!3107, !3081}
!3108 = !DILocation(line: 472, column: 20, scope: !3073)
!3109 = !DILocation(line: 472, column: 23, scope: !3073)
!3110 = !DILocation(line: 472, column: 9, scope: !3073)
!3111 = !DILocation(line: 473, column: 5, scope: !3073)
!3112 = !DILocation(line: 475, column: 9, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3045, file: !16, line: 475, column: 9)
!3114 = !DILocation(line: 475, column: 12, scope: !3113)
!3115 = !DILocation(line: 475, column: 23, scope: !3113)
!3116 = !DILocation(line: 475, column: 9, scope: !3045)
!3117 = !DILocation(line: 476, column: 9, scope: !3113)
!3118 = !DILocation(line: 478, column: 9, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3045, file: !16, line: 478, column: 9)
!3120 = !DILocation(line: 478, column: 20, scope: !3119)
!3121 = !DILocation(line: 478, column: 9, scope: !3045)
!3122 = !DILocation(line: 479, column: 24, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3124, file: !16, line: 479, column: 13)
!3124 = distinct !DILexicalBlock(scope: !3119, file: !16, line: 478, column: 28)
!3125 = !DILocation(line: 479, column: 36, scope: !3123)
!3126 = !DILocation(line: 479, column: 39, scope: !3123)
!3127 = !DILocation(line: 479, column: 13, scope: !3123)
!3128 = !DILocation(line: 479, column: 13, scope: !3124)
!3129 = !DILocation(line: 480, column: 20, scope: !3123)
!3130 = !DILocation(line: 480, column: 23, scope: !3123)
!3131 = !DILocation(line: 480, column: 13, scope: !3123)
!3132 = !DILocation(line: 481, column: 13, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3124, file: !16, line: 481, column: 13)
!3134 = !DILocation(line: 481, column: 18, scope: !3133)
!3135 = !DILocation(line: 481, column: 13, scope: !3124)
!3136 = !DILocation(line: 482, column: 24, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3133, file: !16, line: 481, column: 26)
!3138 = !DILocation(line: 482, column: 27, scope: !3137)
!3139 = !DILocation(line: 482, column: 13, scope: !3137)
!3140 = !DILocation(line: 483, column: 29, scope: !3137)
!3141 = !DILocation(line: 483, column: 32, scope: !3137)
!3142 = !DILocation(line: 483, column: 13, scope: !3137)
!3143 = !DILocation(line: 484, column: 9, scope: !3137)
!3144 = !DILocation(line: 485, column: 5, scope: !3124)
!3145 = !DILocation(line: 486, column: 5, scope: !3045)
!3146 = !DILocation(line: 487, column: 1, scope: !3045)
!3147 = distinct !DISubprogram(name: "ssl_srp_server_param_cb", scope: !16, file: !16, line: 252, type: !3046, isLocal: true, isDefinition: true, scopeLine: 253, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!3148 = !DILocalVariable(name: "s", arg: 1, scope: !3147, file: !16, line: 252, type: !2608)
!3149 = !DILocation(line: 252, column: 41, scope: !3147)
!3150 = !DILocalVariable(name: "ad", arg: 2, scope: !3147, file: !16, line: 252, type: !3048)
!3151 = !DILocation(line: 252, column: 49, scope: !3147)
!3152 = !DILocalVariable(name: "arg", arg: 3, scope: !3147, file: !16, line: 252, type: !236)
!3153 = !DILocation(line: 252, column: 59, scope: !3147)
!3154 = !DILocalVariable(name: "p", scope: !3147, file: !16, line: 254, type: !270)
!3155 = !DILocation(line: 254, column: 17, scope: !3147)
!3156 = !DILocation(line: 254, column: 36, scope: !3147)
!3157 = !DILocation(line: 254, column: 21, scope: !3147)
!3158 = !DILocalVariable(name: "ret", scope: !3147, file: !16, line: 255, type: !239)
!3159 = !DILocation(line: 255, column: 9, scope: !3147)
!3160 = !DILocation(line: 257, column: 9, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3147, file: !16, line: 257, column: 9)
!3162 = !DILocation(line: 257, column: 12, scope: !3161)
!3163 = !DILocation(line: 257, column: 18, scope: !3161)
!3164 = !DILocation(line: 257, column: 25, scope: !3161)
!3165 = !DILocation(line: 257, column: 28, scope: !3166)
!3166 = !DILexicalBlockFile(scope: !3161, file: !16, discriminator: 1)
!3167 = !DILocation(line: 257, column: 31, scope: !3166)
!3168 = !DILocation(line: 257, column: 36, scope: !3166)
!3169 = !DILocation(line: 257, column: 9, scope: !3166)
!3170 = !DILocation(line: 258, column: 41, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3161, file: !16, line: 257, column: 45)
!3172 = !DILocation(line: 258, column: 20, scope: !3171)
!3173 = !DILocation(line: 258, column: 9, scope: !3171)
!3174 = !DILocation(line: 258, column: 12, scope: !3171)
!3175 = !DILocation(line: 258, column: 18, scope: !3171)
!3176 = !DILocation(line: 259, column: 20, scope: !3171)
!3177 = !DILocation(line: 259, column: 56, scope: !3171)
!3178 = !DILocation(line: 259, column: 59, scope: !3171)
!3179 = !DILocation(line: 259, column: 9, scope: !3171)
!3180 = !DILocation(line: 260, column: 9, scope: !3171)
!3181 = !DILocation(line: 263, column: 9, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3147, file: !16, line: 263, column: 9)
!3183 = !DILocation(line: 263, column: 12, scope: !3182)
!3184 = !DILocation(line: 263, column: 17, scope: !3182)
!3185 = !DILocation(line: 263, column: 9, scope: !3147)
!3186 = !DILocation(line: 264, column: 20, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3182, file: !16, line: 263, column: 25)
!3188 = !DILocation(line: 264, column: 56, scope: !3187)
!3189 = !DILocation(line: 264, column: 59, scope: !3187)
!3190 = !DILocation(line: 264, column: 9, scope: !3187)
!3191 = !DILocation(line: 265, column: 9, scope: !3187)
!3192 = !DILocation(line: 269, column: 10, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3147, file: !16, line: 268, column: 9)
!3194 = !DILocation(line: 269, column: 13, scope: !3193)
!3195 = !DILocation(line: 269, column: 16, scope: !3193)
!3196 = !DILocation(line: 269, column: 22, scope: !3193)
!3197 = !DILocation(line: 269, column: 25, scope: !3193)
!3198 = !DILocation(line: 269, column: 28, scope: !3193)
!3199 = !DILocation(line: 269, column: 34, scope: !3193)
!3200 = !DILocation(line: 269, column: 37, scope: !3193)
!3201 = !DILocation(line: 269, column: 40, scope: !3193)
!3202 = !DILocation(line: 269, column: 46, scope: !3193)
!3203 = !DILocation(line: 269, column: 49, scope: !3193)
!3204 = !DILocation(line: 269, column: 52, scope: !3193)
!3205 = !DILocation(line: 269, column: 58, scope: !3193)
!3206 = !DILocation(line: 270, column: 10, scope: !3193)
!3207 = !DILocation(line: 270, column: 13, scope: !3193)
!3208 = !DILocation(line: 270, column: 19, scope: !3193)
!3209 = !DILocation(line: 268, column: 9, scope: !3193)
!3210 = !DILocation(line: 270, column: 25, scope: !3193)
!3211 = !DILocation(line: 268, column: 9, scope: !3147)
!3212 = !DILocation(line: 271, column: 10, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3193, file: !16, line: 270, column: 30)
!3214 = !DILocation(line: 271, column: 13, scope: !3213)
!3215 = !DILocation(line: 272, column: 9, scope: !3213)
!3216 = !DILocation(line: 274, column: 16, scope: !3147)
!3217 = !DILocation(line: 276, column: 16, scope: !3147)
!3218 = !DILocation(line: 276, column: 19, scope: !3147)
!3219 = !DILocation(line: 276, column: 26, scope: !3147)
!3220 = !DILocation(line: 276, column: 29, scope: !3147)
!3221 = !DILocation(line: 276, column: 35, scope: !3147)
!3222 = !DILocation(line: 274, column: 5, scope: !3147)
!3223 = !DILocation(line: 277, column: 9, scope: !3147)
!3224 = !DILocation(line: 277, column: 5, scope: !3147)
!3225 = !DILocation(line: 280, column: 23, scope: !3147)
!3226 = !DILocation(line: 280, column: 26, scope: !3147)
!3227 = !DILocation(line: 280, column: 5, scope: !3147)
!3228 = !DILocation(line: 281, column: 5, scope: !3147)
!3229 = !DILocation(line: 281, column: 8, scope: !3147)
!3230 = !DILocation(line: 281, column: 13, scope: !3147)
!3231 = !DILocation(line: 282, column: 5, scope: !3147)
!3232 = !DILocation(line: 282, column: 8, scope: !3147)
!3233 = !DILocation(line: 282, column: 14, scope: !3147)
!3234 = !DILocation(line: 283, column: 12, scope: !3147)
!3235 = !DILocation(line: 283, column: 5, scope: !3147)
!3236 = !DILocation(line: 284, column: 1, scope: !3147)
!3237 = distinct !DISubprogram(name: "cert_status_cb", scope: !16, file: !16, line: 614, type: !3238, isLocal: true, isDefinition: true, scopeLine: 615, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!239, !2608, !236}
!3240 = !DILocalVariable(name: "s", arg: 1, scope: !3237, file: !16, line: 614, type: !2608)
!3241 = !DILocation(line: 614, column: 32, scope: !3237)
!3242 = !DILocalVariable(name: "arg", arg: 2, scope: !3237, file: !16, line: 614, type: !236)
!3243 = !DILocation(line: 614, column: 41, scope: !3237)
!3244 = !DILocalVariable(name: "srctx", scope: !3237, file: !16, line: 616, type: !3245)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64, align: 64)
!3246 = !DILocation(line: 616, column: 22, scope: !3237)
!3247 = !DILocation(line: 616, column: 30, scope: !3237)
!3248 = !DILocalVariable(name: "resp", scope: !3237, file: !16, line: 617, type: !306)
!3249 = !DILocation(line: 617, column: 20, scope: !3237)
!3250 = !DILocalVariable(name: "rspder", scope: !3237, file: !16, line: 618, type: !237)
!3251 = !DILocation(line: 618, column: 20, scope: !3237)
!3252 = !DILocalVariable(name: "rspderlen", scope: !3237, file: !16, line: 619, type: !239)
!3253 = !DILocation(line: 619, column: 9, scope: !3237)
!3254 = !DILocalVariable(name: "ret", scope: !3237, file: !16, line: 620, type: !239)
!3255 = !DILocation(line: 620, column: 9, scope: !3237)
!3256 = !DILocation(line: 622, column: 9, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3237, file: !16, line: 622, column: 9)
!3258 = !DILocation(line: 622, column: 16, scope: !3257)
!3259 = !DILocation(line: 622, column: 9, scope: !3237)
!3260 = !DILocation(line: 623, column: 18, scope: !3257)
!3261 = !DILocation(line: 623, column: 9, scope: !3257)
!3262 = !DILocation(line: 625, column: 9, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3237, file: !16, line: 625, column: 9)
!3264 = !DILocation(line: 625, column: 16, scope: !3263)
!3265 = !DILocation(line: 625, column: 23, scope: !3263)
!3266 = !DILocation(line: 625, column: 9, scope: !3237)
!3267 = !DILocalVariable(name: "derbio", scope: !3268, file: !16, line: 626, type: !265)
!3268 = distinct !DILexicalBlock(scope: !3263, file: !16, line: 625, column: 31)
!3269 = !DILocation(line: 626, column: 14, scope: !3268)
!3270 = !DILocation(line: 626, column: 40, scope: !3268)
!3271 = !DILocation(line: 626, column: 47, scope: !3268)
!3272 = !DILocation(line: 626, column: 23, scope: !3268)
!3273 = !DILocation(line: 627, column: 13, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3268, file: !16, line: 627, column: 13)
!3275 = !DILocation(line: 627, column: 20, scope: !3274)
!3276 = !DILocation(line: 627, column: 13, scope: !3268)
!3277 = !DILocation(line: 628, column: 22, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !16, line: 627, column: 28)
!3279 = !DILocation(line: 628, column: 13, scope: !3278)
!3280 = !DILocation(line: 629, column: 13, scope: !3278)
!3281 = !DILocation(line: 631, column: 238, scope: !3268)
!3282 = !DILocation(line: 631, column: 33, scope: !3268)
!3283 = !DILocation(line: 631, column: 17, scope: !3268)
!3284 = !DILocation(line: 631, column: 14, scope: !3268)
!3285 = !DILocation(line: 632, column: 18, scope: !3268)
!3286 = !DILocation(line: 632, column: 9, scope: !3268)
!3287 = !DILocation(line: 633, column: 13, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3268, file: !16, line: 633, column: 13)
!3289 = !DILocation(line: 633, column: 18, scope: !3288)
!3290 = !DILocation(line: 633, column: 13, scope: !3268)
!3291 = !DILocation(line: 634, column: 22, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3288, file: !16, line: 633, column: 26)
!3293 = !DILocation(line: 634, column: 13, scope: !3292)
!3294 = !DILocation(line: 635, column: 13, scope: !3292)
!3295 = !DILocation(line: 637, column: 5, scope: !3268)
!3296 = !DILocation(line: 638, column: 44, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3263, file: !16, line: 637, column: 12)
!3298 = !DILocation(line: 638, column: 47, scope: !3297)
!3299 = !DILocation(line: 638, column: 15, scope: !3297)
!3300 = !DILocation(line: 638, column: 13, scope: !3297)
!3301 = !DILocation(line: 639, column: 13, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3297, file: !16, line: 639, column: 13)
!3303 = !DILocation(line: 639, column: 17, scope: !3302)
!3304 = !DILocation(line: 639, column: 13, scope: !3297)
!3305 = !DILocation(line: 640, column: 13, scope: !3302)
!3306 = !DILocation(line: 643, column: 35, scope: !3237)
!3307 = !DILocation(line: 643, column: 17, scope: !3237)
!3308 = !DILocation(line: 643, column: 15, scope: !3237)
!3309 = !DILocation(line: 644, column: 9, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3237, file: !16, line: 644, column: 9)
!3311 = !DILocation(line: 644, column: 19, scope: !3310)
!3312 = !DILocation(line: 644, column: 9, scope: !3237)
!3313 = !DILocation(line: 645, column: 9, scope: !3310)
!3314 = !DILocation(line: 647, column: 14, scope: !3237)
!3315 = !DILocation(line: 647, column: 19, scope: !3237)
!3316 = !DILocation(line: 647, column: 29, scope: !3237)
!3317 = !DILocation(line: 647, column: 5, scope: !3237)
!3318 = !DILocation(line: 648, column: 9, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3237, file: !16, line: 648, column: 9)
!3320 = !DILocation(line: 648, column: 16, scope: !3319)
!3321 = !DILocation(line: 648, column: 9, scope: !3237)
!3322 = !DILocation(line: 649, column: 18, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !16, line: 648, column: 25)
!3324 = !DILocation(line: 649, column: 9, scope: !3323)
!3325 = !DILocation(line: 650, column: 29, scope: !3323)
!3326 = !DILocation(line: 650, column: 38, scope: !3323)
!3327 = !DILocation(line: 650, column: 9, scope: !3323)
!3328 = !DILocation(line: 651, column: 5, scope: !3323)
!3329 = !DILocation(line: 653, column: 9, scope: !3237)
!3330 = !DILocation(line: 653, column: 5, scope: !3237)
!3331 = !DILocation(line: 656, column: 9, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3237, file: !16, line: 656, column: 9)
!3333 = !DILocation(line: 656, column: 13, scope: !3332)
!3334 = !DILocation(line: 656, column: 9, scope: !3237)
!3335 = !DILocation(line: 657, column: 26, scope: !3332)
!3336 = !DILocation(line: 657, column: 9, scope: !3332)
!3337 = !DILocation(line: 659, column: 24, scope: !3237)
!3338 = !DILocation(line: 659, column: 5, scope: !3237)
!3339 = !DILocation(line: 661, column: 12, scope: !3237)
!3340 = !DILocation(line: 661, column: 5, scope: !3237)
!3341 = distinct !DISubprogram(name: "rev_body", scope: !16, file: !16, line: 3339, type: !407, isLocal: true, isDefinition: true, scopeLine: 3340, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!3342 = !DILocalVariable(name: "s", arg: 1, scope: !3341, file: !16, line: 3339, type: !239)
!3343 = !DILocation(line: 3339, column: 25, scope: !3341)
!3344 = !DILocalVariable(name: "stype", arg: 2, scope: !3341, file: !16, line: 3339, type: !239)
!3345 = !DILocation(line: 3339, column: 32, scope: !3341)
!3346 = !DILocalVariable(name: "prot", arg: 3, scope: !3341, file: !16, line: 3339, type: !239)
!3347 = !DILocation(line: 3339, column: 43, scope: !3341)
!3348 = !DILocalVariable(name: "context", arg: 4, scope: !3341, file: !16, line: 3339, type: !237)
!3349 = !DILocation(line: 3339, column: 64, scope: !3341)
!3350 = !DILocalVariable(name: "buf", scope: !3341, file: !16, line: 3341, type: !241)
!3351 = !DILocation(line: 3341, column: 11, scope: !3341)
!3352 = !DILocalVariable(name: "i", scope: !3341, file: !16, line: 3342, type: !239)
!3353 = !DILocation(line: 3342, column: 9, scope: !3341)
!3354 = !DILocalVariable(name: "ret", scope: !3341, file: !16, line: 3343, type: !239)
!3355 = !DILocation(line: 3343, column: 9, scope: !3341)
!3356 = !DILocalVariable(name: "con", scope: !3341, file: !16, line: 3344, type: !2608)
!3357 = !DILocation(line: 3344, column: 10, scope: !3341)
!3358 = !DILocalVariable(name: "io", scope: !3341, file: !16, line: 3345, type: !265)
!3359 = !DILocation(line: 3345, column: 10, scope: !3341)
!3360 = !DILocalVariable(name: "ssl_bio", scope: !3341, file: !16, line: 3345, type: !265)
!3361 = !DILocation(line: 3345, column: 15, scope: !3341)
!3362 = !DILocalVariable(name: "sbio", scope: !3341, file: !16, line: 3345, type: !265)
!3363 = !DILocation(line: 3345, column: 25, scope: !3341)
!3364 = !DILocation(line: 3347, column: 11, scope: !3341)
!3365 = !DILocation(line: 3347, column: 9, scope: !3341)
!3366 = !DILocation(line: 3348, column: 18, scope: !3341)
!3367 = !DILocation(line: 3348, column: 10, scope: !3368)
!3368 = !DILexicalBlockFile(scope: !3341, file: !16, discriminator: 1)
!3369 = !DILocation(line: 3348, column: 8, scope: !3341)
!3370 = !DILocation(line: 3349, column: 23, scope: !3341)
!3371 = !DILocation(line: 3349, column: 15, scope: !3368)
!3372 = !DILocation(line: 3349, column: 13, scope: !3341)
!3373 = !DILocation(line: 3350, column: 10, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3350, column: 9)
!3375 = !DILocation(line: 3350, column: 13, scope: !3374)
!3376 = !DILocation(line: 3350, column: 21, scope: !3374)
!3377 = !DILocation(line: 3350, column: 25, scope: !3378)
!3378 = !DILexicalBlockFile(scope: !3374, file: !16, discriminator: 1)
!3379 = !DILocation(line: 3350, column: 33, scope: !3378)
!3380 = !DILocation(line: 3350, column: 9, scope: !3378)
!3381 = !DILocation(line: 3351, column: 9, scope: !3374)
!3382 = !DILocation(line: 3354, column: 23, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3354, column: 9)
!3384 = !DILocation(line: 3354, column: 10, scope: !3383)
!3385 = !DILocation(line: 3354, column: 9, scope: !3341)
!3386 = !DILocation(line: 3355, column: 9, scope: !3383)
!3387 = !DILocation(line: 3357, column: 24, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3357, column: 9)
!3389 = !DILocation(line: 3357, column: 16, scope: !3388)
!3390 = !DILocation(line: 3357, column: 14, scope: !3388)
!3391 = !DILocation(line: 3357, column: 30, scope: !3388)
!3392 = !DILocation(line: 3357, column: 9, scope: !3341)
!3393 = !DILocation(line: 3358, column: 9, scope: !3388)
!3394 = !DILocation(line: 3360, column: 9, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3360, column: 9)
!3396 = !DILocation(line: 3360, column: 9, scope: !3341)
!3397 = !DILocation(line: 3361, column: 27, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3395, file: !16, line: 3360, column: 24)
!3399 = !DILocation(line: 3361, column: 9, scope: !3398)
!3400 = !DILocation(line: 3362, column: 18, scope: !3398)
!3401 = !DILocation(line: 3362, column: 27, scope: !3398)
!3402 = !DILocation(line: 3362, column: 9, scope: !3398)
!3403 = !DILocation(line: 3363, column: 5, scope: !3398)
!3404 = !DILocation(line: 3364, column: 9, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3364, column: 9)
!3406 = !DILocation(line: 3364, column: 17, scope: !3405)
!3407 = !DILocation(line: 3365, column: 8, scope: !3405)
!3408 = !DILocation(line: 3365, column: 39, scope: !3409)
!3409 = !DILexicalBlockFile(scope: !3405, file: !16, discriminator: 1)
!3410 = !DILocation(line: 3365, column: 44, scope: !3409)
!3411 = !DILocation(line: 3366, column: 55, scope: !3405)
!3412 = !DILocation(line: 3366, column: 40, scope: !3405)
!3413 = !DILocation(line: 3365, column: 12, scope: !3409)
!3414 = !DILocation(line: 3364, column: 9, scope: !3368)
!3415 = !DILocation(line: 3367, column: 18, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3405, file: !16, line: 3366, column: 66)
!3417 = !DILocation(line: 3367, column: 9, scope: !3416)
!3418 = !DILocation(line: 3368, column: 26, scope: !3416)
!3419 = !DILocation(line: 3368, column: 9, scope: !3416)
!3420 = !DILocation(line: 3369, column: 9, scope: !3416)
!3421 = !DILocation(line: 3372, column: 27, scope: !3341)
!3422 = !DILocation(line: 3372, column: 12, scope: !3341)
!3423 = !DILocation(line: 3372, column: 10, scope: !3341)
!3424 = !DILocation(line: 3373, column: 17, scope: !3341)
!3425 = !DILocation(line: 3373, column: 22, scope: !3341)
!3426 = !DILocation(line: 3373, column: 28, scope: !3341)
!3427 = !DILocation(line: 3373, column: 5, scope: !3341)
!3428 = !DILocation(line: 3374, column: 26, scope: !3341)
!3429 = !DILocation(line: 3374, column: 5, scope: !3341)
!3430 = !DILocation(line: 3377, column: 14, scope: !3341)
!3431 = !DILocation(line: 3377, column: 40, scope: !3341)
!3432 = !DILocation(line: 3377, column: 31, scope: !3341)
!3433 = !DILocation(line: 3377, column: 5, scope: !3341)
!3434 = !DILocation(line: 3378, column: 14, scope: !3341)
!3435 = !DILocation(line: 3378, column: 18, scope: !3341)
!3436 = !DILocation(line: 3378, column: 5, scope: !3341)
!3437 = !DILocation(line: 3383, column: 9, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3383, column: 9)
!3439 = !DILocation(line: 3383, column: 9, scope: !3341)
!3440 = !DILocation(line: 3384, column: 39, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3438, file: !16, line: 3383, column: 18)
!3442 = !DILocation(line: 3384, column: 26, scope: !3441)
!3443 = !DILocation(line: 3384, column: 9, scope: !3444)
!3444 = !DILexicalBlockFile(scope: !3441, file: !16, discriminator: 1)
!3445 = !DILocation(line: 3385, column: 43, scope: !3441)
!3446 = !DILocation(line: 3385, column: 30, scope: !3441)
!3447 = !DILocation(line: 3385, column: 57, scope: !3441)
!3448 = !DILocation(line: 3385, column: 49, scope: !3441)
!3449 = !DILocation(line: 3385, column: 9, scope: !3444)
!3450 = !DILocation(line: 3386, column: 5, scope: !3441)
!3451 = !DILocation(line: 3387, column: 9, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3387, column: 9)
!3453 = !DILocation(line: 3387, column: 9, scope: !3341)
!3454 = !DILocation(line: 3393, column: 34, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3452, file: !16, line: 3387, column: 16)
!3456 = !DILocation(line: 3393, column: 13, scope: !3455)
!3457 = !DILocation(line: 3394, column: 19, scope: !3455)
!3458 = !DILocation(line: 3394, column: 33, scope: !3455)
!3459 = !DILocation(line: 3394, column: 45, scope: !3460)
!3460 = !DILexicalBlockFile(scope: !3455, file: !16, discriminator: 1)
!3461 = !DILocation(line: 3394, column: 33, scope: !3460)
!3462 = !DILocation(line: 3394, column: 57, scope: !3463)
!3463 = !DILexicalBlockFile(scope: !3455, file: !16, discriminator: 2)
!3464 = !DILocation(line: 3394, column: 33, scope: !3463)
!3465 = !DILocation(line: 3394, column: 33, scope: !3466)
!3466 = !DILexicalBlockFile(scope: !3455, file: !16, discriminator: 3)
!3467 = !DILocation(line: 3394, column: 32, scope: !3466)
!3468 = !DILocation(line: 3394, column: 9, scope: !3466)
!3469 = !DILocation(line: 3395, column: 5, scope: !3455)
!3470 = !DILocation(line: 3397, column: 5, scope: !3341)
!3471 = !DILocation(line: 3398, column: 22, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !16, line: 3397, column: 14)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !16, line: 3397, column: 5)
!3474 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3397, column: 5)
!3475 = !DILocation(line: 3398, column: 13, scope: !3472)
!3476 = !DILocation(line: 3398, column: 11, scope: !3472)
!3477 = !DILocation(line: 3399, column: 13, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3472, file: !16, line: 3399, column: 13)
!3479 = !DILocation(line: 3399, column: 15, scope: !3478)
!3480 = !DILocation(line: 3399, column: 13, scope: !3472)
!3481 = !DILocation(line: 3400, column: 13, scope: !3478)
!3482 = !DILocation(line: 3401, column: 29, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3472, file: !16, line: 3401, column: 13)
!3484 = !DILocation(line: 3401, column: 14, scope: !3483)
!3485 = !DILocation(line: 3401, column: 13, scope: !3472)
!3486 = !DILocation(line: 3402, column: 22, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3483, file: !16, line: 3401, column: 40)
!3488 = !DILocation(line: 3402, column: 13, scope: !3487)
!3489 = !DILocation(line: 3403, column: 30, scope: !3487)
!3490 = !DILocation(line: 3403, column: 13, scope: !3487)
!3491 = !DILocation(line: 3404, column: 13, scope: !3487)
!3492 = !DILocation(line: 3407, column: 28, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3472, file: !16, line: 3407, column: 13)
!3494 = !DILocation(line: 3407, column: 13, scope: !3493)
!3495 = !DILocation(line: 3408, column: 13, scope: !3493)
!3496 = !DILocation(line: 3408, column: 37, scope: !3497)
!3497 = !DILexicalBlockFile(scope: !3493, file: !16, discriminator: 1)
!3498 = !DILocation(line: 3408, column: 16, scope: !3497)
!3499 = !DILocation(line: 3408, column: 41, scope: !3497)
!3500 = !DILocation(line: 3407, column: 13, scope: !3501)
!3501 = !DILexicalBlockFile(scope: !3472, file: !16, discriminator: 1)
!3502 = !DILocation(line: 3409, column: 24, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3493, file: !16, line: 3408, column: 50)
!3504 = !DILocation(line: 3409, column: 13, scope: !3503)
!3505 = !DILocation(line: 3410, column: 49, scope: !3503)
!3506 = !DILocation(line: 3410, column: 13, scope: !3503)
!3507 = !DILocation(line: 3412, column: 58, scope: !3503)
!3508 = !DILocation(line: 3413, column: 58, scope: !3503)
!3509 = !DILocation(line: 3412, column: 17, scope: !3503)
!3510 = !DILocation(line: 3411, column: 36, scope: !3503)
!3511 = !DILocation(line: 3414, column: 35, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3503, file: !16, line: 3414, column: 17)
!3513 = !DILocation(line: 3414, column: 17, scope: !3512)
!3514 = !DILocation(line: 3414, column: 17, scope: !3503)
!3515 = !DILocation(line: 3415, column: 28, scope: !3512)
!3516 = !DILocation(line: 3416, column: 46, scope: !3512)
!3517 = !DILocation(line: 3416, column: 52, scope: !3512)
!3518 = !DILocation(line: 3415, column: 17, scope: !3512)
!3519 = !DILocation(line: 3418, column: 28, scope: !3512)
!3520 = !DILocation(line: 3418, column: 17, scope: !3512)
!3521 = !DILocation(line: 3419, column: 13, scope: !3503)
!3522 = distinct !{!3522, !3470}
!3523 = !DILocation(line: 3397, column: 5, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3473, file: !16, discriminator: 1)
!3525 = !DILocation(line: 3423, column: 16, scope: !3341)
!3526 = !DILocation(line: 3423, column: 5, scope: !3341)
!3527 = !DILocation(line: 3424, column: 23, scope: !3341)
!3528 = !DILocation(line: 3424, column: 5, scope: !3341)
!3529 = !DILocation(line: 3426, column: 5, scope: !3341)
!3530 = !DILocation(line: 3427, column: 22, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3532, file: !16, line: 3426, column: 14)
!3532 = distinct !DILexicalBlock(scope: !3533, file: !16, line: 3426, column: 5)
!3533 = distinct !DILexicalBlock(scope: !3341, file: !16, line: 3426, column: 5)
!3534 = !DILocation(line: 3427, column: 26, scope: !3531)
!3535 = !DILocation(line: 3427, column: 13, scope: !3531)
!3536 = !DILocation(line: 3427, column: 11, scope: !3531)
!3537 = !DILocation(line: 3428, column: 13, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3531, file: !16, line: 3428, column: 13)
!3539 = !DILocation(line: 3428, column: 15, scope: !3538)
!3540 = !DILocation(line: 3428, column: 13, scope: !3531)
!3541 = !DILocation(line: 3429, column: 33, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !16, line: 3429, column: 17)
!3543 = distinct !DILexicalBlock(scope: !3538, file: !16, line: 3428, column: 20)
!3544 = !DILocation(line: 3429, column: 18, scope: !3542)
!3545 = !DILocation(line: 3429, column: 17, scope: !3543)
!3546 = !DILocation(line: 3430, column: 22, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !16, line: 3430, column: 21)
!3548 = distinct !DILexicalBlock(scope: !3542, file: !16, line: 3429, column: 44)
!3549 = !DILocation(line: 3430, column: 21, scope: !3548)
!3550 = !DILocation(line: 3431, column: 38, scope: !3547)
!3551 = !DILocation(line: 3431, column: 21, scope: !3547)
!3552 = !DILocation(line: 3432, column: 17, scope: !3548)
!3553 = !DILocation(line: 3434, column: 28, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3542, file: !16, line: 3433, column: 20)
!3555 = !DILocation(line: 3434, column: 17, scope: !3554)
!3556 = !DILocation(line: 3436, column: 36, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3554, file: !16, line: 3436, column: 21)
!3558 = !DILocation(line: 3436, column: 21, scope: !3557)
!3559 = !DILocation(line: 3437, column: 21, scope: !3557)
!3560 = !DILocation(line: 3437, column: 45, scope: !3561)
!3561 = !DILexicalBlockFile(scope: !3557, file: !16, discriminator: 1)
!3562 = !DILocation(line: 3437, column: 24, scope: !3561)
!3563 = !DILocation(line: 3437, column: 49, scope: !3561)
!3564 = !DILocation(line: 3436, column: 21, scope: !3565)
!3565 = !DILexicalBlockFile(scope: !3554, file: !16, discriminator: 1)
!3566 = !DILocation(line: 3438, column: 32, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3557, file: !16, line: 3437, column: 58)
!3568 = !DILocation(line: 3438, column: 21, scope: !3567)
!3569 = !DILocation(line: 3439, column: 57, scope: !3567)
!3570 = !DILocation(line: 3439, column: 21, scope: !3567)
!3571 = !DILocation(line: 3441, column: 66, scope: !3567)
!3572 = !DILocation(line: 3442, column: 66, scope: !3567)
!3573 = !DILocation(line: 3441, column: 25, scope: !3567)
!3574 = !DILocation(line: 3440, column: 44, scope: !3567)
!3575 = !DILocation(line: 3443, column: 43, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3567, file: !16, line: 3443, column: 25)
!3577 = !DILocation(line: 3443, column: 25, scope: !3576)
!3578 = !DILocation(line: 3443, column: 25, scope: !3567)
!3579 = !DILocation(line: 3444, column: 36, scope: !3576)
!3580 = !DILocation(line: 3445, column: 54, scope: !3576)
!3581 = !DILocation(line: 3445, column: 60, scope: !3576)
!3582 = !DILocation(line: 3444, column: 25, scope: !3576)
!3583 = !DILocation(line: 3447, column: 36, scope: !3576)
!3584 = !DILocation(line: 3447, column: 25, scope: !3576)
!3585 = !DILocation(line: 3448, column: 21, scope: !3567)
!3586 = distinct !{!3586, !3529}
!3587 = !DILocation(line: 3452, column: 17, scope: !3554)
!3588 = !DILocation(line: 3454, column: 17, scope: !3554)
!3589 = !DILocation(line: 3456, column: 20, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3538, file: !16, line: 3456, column: 20)
!3591 = !DILocation(line: 3456, column: 22, scope: !3590)
!3592 = !DILocation(line: 3456, column: 20, scope: !3538)
!3593 = !DILocation(line: 3457, column: 17, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3590, file: !16, line: 3456, column: 28)
!3595 = !DILocation(line: 3458, column: 24, scope: !3594)
!3596 = !DILocation(line: 3458, column: 13, scope: !3594)
!3597 = !DILocation(line: 3459, column: 13, scope: !3594)
!3598 = !DILocalVariable(name: "p", scope: !3599, file: !16, line: 3461, type: !241)
!3599 = distinct !DILexicalBlock(scope: !3590, file: !16, line: 3460, column: 16)
!3600 = !DILocation(line: 3461, column: 19, scope: !3599)
!3601 = !DILocation(line: 3461, column: 23, scope: !3599)
!3602 = !DILocation(line: 3461, column: 29, scope: !3599)
!3603 = !DILocation(line: 3461, column: 27, scope: !3599)
!3604 = !DILocation(line: 3461, column: 31, scope: !3599)
!3605 = !DILocation(line: 3462, column: 13, scope: !3599)
!3606 = !DILocation(line: 3462, column: 20, scope: !3607)
!3607 = !DILexicalBlockFile(scope: !3599, file: !16, discriminator: 1)
!3608 = !DILocation(line: 3462, column: 22, scope: !3607)
!3609 = !DILocation(line: 3462, column: 27, scope: !3610)
!3610 = !DILexicalBlockFile(scope: !3599, file: !16, discriminator: 2)
!3611 = !DILocation(line: 3462, column: 26, scope: !3610)
!3612 = !DILocation(line: 3462, column: 29, scope: !3610)
!3613 = !DILocation(line: 3462, column: 37, scope: !3610)
!3614 = !DILocation(line: 3462, column: 41, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3599, file: !16, discriminator: 3)
!3616 = !DILocation(line: 3462, column: 40, scope: !3615)
!3617 = !DILocation(line: 3462, column: 43, scope: !3615)
!3618 = !DILocation(line: 3462, column: 37, scope: !3615)
!3619 = !DILocation(line: 3462, column: 13, scope: !3620)
!3620 = !DILexicalBlockFile(scope: !3599, file: !16, discriminator: 4)
!3621 = !DILocation(line: 3463, column: 18, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3599, file: !16, line: 3462, column: 53)
!3623 = !DILocation(line: 3464, column: 18, scope: !3622)
!3624 = !DILocation(line: 3462, column: 13, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3599, file: !16, discriminator: 5)
!3626 = distinct !{!3626, !3605}
!3627 = !DILocation(line: 3466, column: 18, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3599, file: !16, line: 3466, column: 17)
!3629 = !DILocation(line: 3466, column: 28, scope: !3628)
!3630 = !DILocation(line: 3466, column: 32, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3628, file: !16, discriminator: 1)
!3632 = !DILocation(line: 3466, column: 34, scope: !3631)
!3633 = !DILocation(line: 3466, column: 40, scope: !3631)
!3634 = !DILocation(line: 3466, column: 52, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !3628, file: !16, discriminator: 2)
!3636 = !DILocation(line: 3466, column: 44, scope: !3635)
!3637 = !DILocation(line: 3466, column: 69, scope: !3635)
!3638 = !DILocation(line: 3466, column: 17, scope: !3635)
!3639 = !DILocation(line: 3467, column: 21, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3628, file: !16, line: 3466, column: 76)
!3641 = !DILocation(line: 3468, column: 28, scope: !3640)
!3642 = !DILocation(line: 3468, column: 17, scope: !3640)
!3643 = !DILocation(line: 3469, column: 17, scope: !3640)
!3644 = !DILocation(line: 3471, column: 42, scope: !3599)
!3645 = !DILocation(line: 3471, column: 52, scope: !3599)
!3646 = !DILocation(line: 3471, column: 13, scope: !3599)
!3647 = !DILocation(line: 3472, column: 17, scope: !3599)
!3648 = !DILocation(line: 3472, column: 13, scope: !3599)
!3649 = !DILocation(line: 3472, column: 20, scope: !3599)
!3650 = !DILocation(line: 3473, column: 23, scope: !3599)
!3651 = !DILocation(line: 3473, column: 27, scope: !3599)
!3652 = !DILocation(line: 3473, column: 32, scope: !3599)
!3653 = !DILocation(line: 3473, column: 34, scope: !3599)
!3654 = !DILocation(line: 3473, column: 13, scope: !3599)
!3655 = !DILocation(line: 3474, column: 13, scope: !3599)
!3656 = !DILocation(line: 3475, column: 35, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3658, file: !16, line: 3474, column: 22)
!3658 = distinct !DILexicalBlock(scope: !3659, file: !16, line: 3474, column: 13)
!3659 = distinct !DILexicalBlock(scope: !3599, file: !16, line: 3474, column: 13)
!3660 = !DILocation(line: 3475, column: 26, scope: !3657)
!3661 = !DILocation(line: 3475, column: 21, scope: !3657)
!3662 = !DILocation(line: 3475, column: 19, scope: !3657)
!3663 = !DILocation(line: 3476, column: 21, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3657, file: !16, line: 3476, column: 21)
!3665 = !DILocation(line: 3476, column: 23, scope: !3664)
!3666 = !DILocation(line: 3476, column: 21, scope: !3657)
!3667 = !DILocation(line: 3477, column: 21, scope: !3664)
!3668 = !DILocation(line: 3478, column: 37, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3657, file: !16, line: 3478, column: 21)
!3670 = !DILocation(line: 3478, column: 22, scope: !3669)
!3671 = !DILocation(line: 3478, column: 21, scope: !3657)
!3672 = !DILocation(line: 3479, column: 21, scope: !3669)
!3673 = !DILocation(line: 3474, column: 13, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3658, file: !16, discriminator: 1)
!3675 = distinct !{!3675, !3655}
!3676 = !DILocation(line: 3426, column: 5, scope: !3677)
!3677 = !DILexicalBlockFile(scope: !3532, file: !16, discriminator: 1)
!3678 = !DILocation(line: 3485, column: 22, scope: !3341)
!3679 = !DILocation(line: 3485, column: 5, scope: !3341)
!3680 = !DILocation(line: 3489, column: 17, scope: !3341)
!3681 = !DILocation(line: 3489, column: 5, scope: !3341)
!3682 = !DILocation(line: 3490, column: 18, scope: !3341)
!3683 = !DILocation(line: 3490, column: 5, scope: !3341)
!3684 = !DILocation(line: 3491, column: 12, scope: !3341)
!3685 = !DILocation(line: 3491, column: 5, scope: !3341)
!3686 = !DILocalVariable(name: "s", arg: 1, scope: !411, file: !16, line: 2952, type: !239)
!3687 = !DILocation(line: 2952, column: 25, scope: !411)
!3688 = !DILocalVariable(name: "stype", arg: 2, scope: !411, file: !16, line: 2952, type: !239)
!3689 = !DILocation(line: 2952, column: 32, scope: !411)
!3690 = !DILocalVariable(name: "prot", arg: 3, scope: !411, file: !16, line: 2952, type: !239)
!3691 = !DILocation(line: 2952, column: 43, scope: !411)
!3692 = !DILocalVariable(name: "context", arg: 4, scope: !411, file: !16, line: 2952, type: !237)
!3693 = !DILocation(line: 2952, column: 64, scope: !411)
!3694 = !DILocalVariable(name: "buf", scope: !411, file: !16, line: 2954, type: !241)
!3695 = !DILocation(line: 2954, column: 11, scope: !411)
!3696 = !DILocalVariable(name: "ret", scope: !411, file: !16, line: 2955, type: !239)
!3697 = !DILocation(line: 2955, column: 9, scope: !411)
!3698 = !DILocalVariable(name: "i", scope: !411, file: !16, line: 2956, type: !239)
!3699 = !DILocation(line: 2956, column: 9, scope: !411)
!3700 = !DILocalVariable(name: "j", scope: !411, file: !16, line: 2956, type: !239)
!3701 = !DILocation(line: 2956, column: 12, scope: !411)
!3702 = !DILocalVariable(name: "k", scope: !411, file: !16, line: 2956, type: !239)
!3703 = !DILocation(line: 2956, column: 15, scope: !411)
!3704 = !DILocalVariable(name: "dot", scope: !411, file: !16, line: 2956, type: !239)
!3705 = !DILocation(line: 2956, column: 18, scope: !411)
!3706 = !DILocalVariable(name: "con", scope: !411, file: !16, line: 2957, type: !2608)
!3707 = !DILocation(line: 2957, column: 10, scope: !411)
!3708 = !DILocalVariable(name: "c", scope: !411, file: !16, line: 2958, type: !334)
!3709 = !DILocation(line: 2958, column: 23, scope: !411)
!3710 = !DILocalVariable(name: "io", scope: !411, file: !16, line: 2959, type: !265)
!3711 = !DILocation(line: 2959, column: 10, scope: !411)
!3712 = !DILocalVariable(name: "ssl_bio", scope: !411, file: !16, line: 2959, type: !265)
!3713 = !DILocation(line: 2959, column: 15, scope: !411)
!3714 = !DILocalVariable(name: "sbio", scope: !411, file: !16, line: 2959, type: !265)
!3715 = !DILocation(line: 2959, column: 25, scope: !411)
!3716 = !DILocalVariable(name: "width", scope: !411, file: !16, line: 2963, type: !239)
!3717 = !DILocation(line: 2963, column: 9, scope: !411)
!3718 = !DILocalVariable(name: "readfds", scope: !411, file: !16, line: 2964, type: !3719)
!3719 = !DIDerivedType(tag: DW_TAG_typedef, name: "fd_set", file: !333, line: 75, baseType: !3720)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 64, size: 1024, align: 64, elements: !3721)
!3721 = !{!3722}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "__fds_bits", scope: !3720, file: !333, line: 72, baseType: !3723, size: 1024, align: 64)
!3723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 1024, align: 64, elements: !3724)
!3724 = !{!3725}
!3725 = !DISubrange(count: 16)
!3726 = !DILocation(line: 2964, column: 12, scope: !411)
!3727 = !DILocation(line: 2967, column: 13, scope: !411)
!3728 = !DILocation(line: 2967, column: 15, scope: !411)
!3729 = !DILocation(line: 2967, column: 11, scope: !411)
!3730 = !DILocation(line: 2969, column: 11, scope: !411)
!3731 = !DILocation(line: 2969, column: 9, scope: !411)
!3732 = !DILocation(line: 2970, column: 18, scope: !411)
!3733 = !DILocation(line: 2970, column: 10, scope: !3734)
!3734 = !DILexicalBlockFile(scope: !411, file: !16, discriminator: 1)
!3735 = !DILocation(line: 2970, column: 8, scope: !411)
!3736 = !DILocation(line: 2971, column: 23, scope: !411)
!3737 = !DILocation(line: 2971, column: 15, scope: !3734)
!3738 = !DILocation(line: 2971, column: 13, scope: !411)
!3739 = !DILocation(line: 2972, column: 10, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !411, file: !16, line: 2972, column: 9)
!3741 = !DILocation(line: 2972, column: 13, scope: !3740)
!3742 = !DILocation(line: 2972, column: 21, scope: !3740)
!3743 = !DILocation(line: 2972, column: 25, scope: !3744)
!3744 = !DILexicalBlockFile(scope: !3740, file: !16, discriminator: 1)
!3745 = !DILocation(line: 2972, column: 33, scope: !3744)
!3746 = !DILocation(line: 2972, column: 9, scope: !3744)
!3747 = !DILocation(line: 2973, column: 9, scope: !3740)
!3748 = !DILocation(line: 2975, column: 9, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !411, file: !16, line: 2975, column: 9)
!3750 = !DILocation(line: 2975, column: 9, scope: !411)
!3751 = !DILocation(line: 2976, column: 30, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !16, line: 2976, column: 13)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !16, line: 2975, column: 17)
!3754 = !DILocation(line: 2976, column: 14, scope: !3752)
!3755 = !DILocation(line: 2976, column: 13, scope: !3753)
!3756 = !DILocation(line: 2977, column: 30, scope: !3752)
!3757 = !DILocation(line: 2977, column: 13, scope: !3752)
!3758 = !DILocation(line: 2978, column: 19, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3752, file: !16, line: 2978, column: 18)
!3760 = !DILocation(line: 2978, column: 18, scope: !3752)
!3761 = !DILocation(line: 2979, column: 24, scope: !3759)
!3762 = !DILocation(line: 2979, column: 13, scope: !3759)
!3763 = !DILocation(line: 2980, column: 5, scope: !3753)
!3764 = !DILocation(line: 2983, column: 23, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !411, file: !16, line: 2983, column: 9)
!3766 = !DILocation(line: 2983, column: 10, scope: !3765)
!3767 = !DILocation(line: 2983, column: 9, scope: !411)
!3768 = !DILocation(line: 2984, column: 9, scope: !3765)
!3769 = !DILocation(line: 2986, column: 24, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !411, file: !16, line: 2986, column: 9)
!3771 = !DILocation(line: 2986, column: 16, scope: !3770)
!3772 = !DILocation(line: 2986, column: 14, scope: !3770)
!3773 = !DILocation(line: 2986, column: 30, scope: !3770)
!3774 = !DILocation(line: 2986, column: 9, scope: !411)
!3775 = !DILocation(line: 2987, column: 9, scope: !3770)
!3776 = !DILocation(line: 2989, column: 9, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !411, file: !16, line: 2989, column: 9)
!3778 = !DILocation(line: 2989, column: 9, scope: !411)
!3779 = !DILocation(line: 2990, column: 27, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !16, line: 2989, column: 24)
!3781 = !DILocation(line: 2990, column: 9, scope: !3780)
!3782 = !DILocation(line: 2991, column: 18, scope: !3780)
!3783 = !DILocation(line: 2991, column: 27, scope: !3780)
!3784 = !DILocation(line: 2991, column: 9, scope: !3780)
!3785 = !DILocation(line: 2992, column: 5, scope: !3780)
!3786 = !DILocation(line: 2994, column: 9, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !411, file: !16, line: 2994, column: 9)
!3788 = !DILocation(line: 2994, column: 17, scope: !3787)
!3789 = !DILocation(line: 2995, column: 8, scope: !3787)
!3790 = !DILocation(line: 2995, column: 39, scope: !3791)
!3791 = !DILexicalBlockFile(scope: !3787, file: !16, discriminator: 1)
!3792 = !DILocation(line: 2995, column: 44, scope: !3791)
!3793 = !DILocation(line: 2996, column: 55, scope: !3787)
!3794 = !DILocation(line: 2996, column: 40, scope: !3787)
!3795 = !DILocation(line: 2995, column: 12, scope: !3791)
!3796 = !DILocation(line: 2994, column: 9, scope: !3734)
!3797 = !DILocation(line: 2997, column: 18, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3787, file: !16, line: 2996, column: 66)
!3799 = !DILocation(line: 2997, column: 9, scope: !3798)
!3800 = !DILocation(line: 2998, column: 9, scope: !3798)
!3801 = !DILocation(line: 3001, column: 27, scope: !411)
!3802 = !DILocation(line: 3001, column: 12, scope: !411)
!3803 = !DILocation(line: 3001, column: 10, scope: !411)
!3804 = !DILocation(line: 3002, column: 9, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !411, file: !16, line: 3002, column: 9)
!3806 = !DILocation(line: 3002, column: 9, scope: !411)
!3807 = !DILocalVariable(name: "test", scope: !3808, file: !16, line: 3003, type: !265)
!3808 = distinct !DILexicalBlock(scope: !3805, file: !16, line: 3002, column: 22)
!3809 = !DILocation(line: 3003, column: 14, scope: !3808)
!3810 = !DILocation(line: 3005, column: 24, scope: !3808)
!3811 = !DILocation(line: 3005, column: 16, scope: !3812)
!3812 = !DILexicalBlockFile(scope: !3808, file: !16, discriminator: 1)
!3813 = !DILocation(line: 3005, column: 14, scope: !3808)
!3814 = !DILocation(line: 3006, column: 25, scope: !3808)
!3815 = !DILocation(line: 3006, column: 31, scope: !3808)
!3816 = !DILocation(line: 3006, column: 16, scope: !3808)
!3817 = !DILocation(line: 3006, column: 14, scope: !3808)
!3818 = !DILocation(line: 3007, column: 5, scope: !3808)
!3819 = !DILocation(line: 3008, column: 17, scope: !411)
!3820 = !DILocation(line: 3008, column: 22, scope: !411)
!3821 = !DILocation(line: 3008, column: 28, scope: !411)
!3822 = !DILocation(line: 3008, column: 5, scope: !411)
!3823 = !DILocation(line: 3009, column: 26, scope: !411)
!3824 = !DILocation(line: 3009, column: 5, scope: !411)
!3825 = !DILocation(line: 3012, column: 14, scope: !411)
!3826 = !DILocation(line: 3012, column: 40, scope: !411)
!3827 = !DILocation(line: 3012, column: 31, scope: !411)
!3828 = !DILocation(line: 3012, column: 5, scope: !411)
!3829 = !DILocation(line: 3013, column: 14, scope: !411)
!3830 = !DILocation(line: 3013, column: 18, scope: !411)
!3831 = !DILocation(line: 3013, column: 5, scope: !411)
!3832 = !DILocation(line: 3018, column: 9, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !411, file: !16, line: 3018, column: 9)
!3834 = !DILocation(line: 3018, column: 9, scope: !411)
!3835 = !DILocation(line: 3019, column: 39, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3833, file: !16, line: 3018, column: 18)
!3837 = !DILocation(line: 3019, column: 26, scope: !3836)
!3838 = !DILocation(line: 3019, column: 9, scope: !3839)
!3839 = !DILexicalBlockFile(scope: !3836, file: !16, discriminator: 1)
!3840 = !DILocation(line: 3020, column: 43, scope: !3836)
!3841 = !DILocation(line: 3020, column: 30, scope: !3836)
!3842 = !DILocation(line: 3020, column: 57, scope: !3836)
!3843 = !DILocation(line: 3020, column: 49, scope: !3836)
!3844 = !DILocation(line: 3020, column: 9, scope: !3839)
!3845 = !DILocation(line: 3021, column: 5, scope: !3836)
!3846 = !DILocation(line: 3022, column: 9, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !411, file: !16, line: 3022, column: 9)
!3848 = !DILocation(line: 3022, column: 9, scope: !411)
!3849 = !DILocation(line: 3028, column: 34, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3847, file: !16, line: 3022, column: 16)
!3851 = !DILocation(line: 3028, column: 13, scope: !3850)
!3852 = !DILocation(line: 3029, column: 19, scope: !3850)
!3853 = !DILocation(line: 3029, column: 33, scope: !3850)
!3854 = !DILocation(line: 3029, column: 45, scope: !3855)
!3855 = !DILexicalBlockFile(scope: !3850, file: !16, discriminator: 1)
!3856 = !DILocation(line: 3029, column: 33, scope: !3855)
!3857 = !DILocation(line: 3029, column: 57, scope: !3858)
!3858 = !DILexicalBlockFile(scope: !3850, file: !16, discriminator: 2)
!3859 = !DILocation(line: 3029, column: 33, scope: !3858)
!3860 = !DILocation(line: 3029, column: 33, scope: !3861)
!3861 = !DILexicalBlockFile(scope: !3850, file: !16, discriminator: 3)
!3862 = !DILocation(line: 3029, column: 32, scope: !3861)
!3863 = !DILocation(line: 3029, column: 9, scope: !3861)
!3864 = !DILocation(line: 3030, column: 5, scope: !3850)
!3865 = !DILocation(line: 3032, column: 5, scope: !411)
!3866 = !DILocation(line: 3033, column: 22, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3868, file: !16, line: 3032, column: 14)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !16, line: 3032, column: 5)
!3869 = distinct !DILexicalBlock(scope: !411, file: !16, line: 3032, column: 5)
!3870 = !DILocation(line: 3033, column: 26, scope: !3867)
!3871 = !DILocation(line: 3033, column: 13, scope: !3867)
!3872 = !DILocation(line: 3033, column: 11, scope: !3867)
!3873 = !DILocation(line: 3034, column: 13, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3867, file: !16, line: 3034, column: 13)
!3875 = !DILocation(line: 3034, column: 15, scope: !3874)
!3876 = !DILocation(line: 3034, column: 13, scope: !3867)
!3877 = !DILocation(line: 3035, column: 33, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !16, line: 3035, column: 17)
!3879 = distinct !DILexicalBlock(scope: !3874, file: !16, line: 3034, column: 20)
!3880 = !DILocation(line: 3035, column: 18, scope: !3878)
!3881 = !DILocation(line: 3035, column: 43, scope: !3878)
!3882 = !DILocation(line: 3035, column: 69, scope: !3883)
!3883 = !DILexicalBlockFile(scope: !3878, file: !16, discriminator: 1)
!3884 = !DILocation(line: 3035, column: 47, scope: !3883)
!3885 = !DILocation(line: 3035, column: 17, scope: !3883)
!3886 = !DILocation(line: 3036, column: 22, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3888, file: !16, line: 3036, column: 21)
!3888 = distinct !DILexicalBlock(scope: !3878, file: !16, line: 3035, column: 75)
!3889 = !DILocation(line: 3036, column: 21, scope: !3888)
!3890 = !DILocation(line: 3037, column: 38, scope: !3887)
!3891 = !DILocation(line: 3037, column: 21, scope: !3887)
!3892 = !DILocation(line: 3038, column: 17, scope: !3888)
!3893 = !DILocation(line: 3040, column: 28, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3878, file: !16, line: 3039, column: 20)
!3895 = !DILocation(line: 3040, column: 17, scope: !3894)
!3896 = !DILocation(line: 3042, column: 36, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3894, file: !16, line: 3042, column: 21)
!3898 = !DILocation(line: 3042, column: 21, scope: !3897)
!3899 = !DILocation(line: 3043, column: 21, scope: !3897)
!3900 = !DILocation(line: 3043, column: 45, scope: !3901)
!3901 = !DILexicalBlockFile(scope: !3897, file: !16, discriminator: 1)
!3902 = !DILocation(line: 3043, column: 24, scope: !3901)
!3903 = !DILocation(line: 3043, column: 49, scope: !3901)
!3904 = !DILocation(line: 3042, column: 21, scope: !3905)
!3905 = !DILexicalBlockFile(scope: !3894, file: !16, discriminator: 1)
!3906 = !DILocation(line: 3044, column: 32, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3897, file: !16, line: 3043, column: 58)
!3908 = !DILocation(line: 3044, column: 21, scope: !3907)
!3909 = !DILocation(line: 3045, column: 57, scope: !3907)
!3910 = !DILocation(line: 3045, column: 21, scope: !3907)
!3911 = !DILocation(line: 3047, column: 66, scope: !3907)
!3912 = !DILocation(line: 3048, column: 66, scope: !3907)
!3913 = !DILocation(line: 3047, column: 25, scope: !3907)
!3914 = !DILocation(line: 3046, column: 44, scope: !3907)
!3915 = !DILocation(line: 3049, column: 43, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3907, file: !16, line: 3049, column: 25)
!3917 = !DILocation(line: 3049, column: 25, scope: !3916)
!3918 = !DILocation(line: 3049, column: 25, scope: !3907)
!3919 = !DILocation(line: 3050, column: 36, scope: !3916)
!3920 = !DILocation(line: 3051, column: 54, scope: !3916)
!3921 = !DILocation(line: 3051, column: 60, scope: !3916)
!3922 = !DILocation(line: 3050, column: 25, scope: !3916)
!3923 = !DILocation(line: 3053, column: 36, scope: !3916)
!3924 = !DILocation(line: 3053, column: 25, scope: !3916)
!3925 = !DILocation(line: 3054, column: 21, scope: !3907)
!3926 = distinct !{!3926, !3865}
!3927 = !DILocation(line: 3058, column: 17, scope: !3894)
!3928 = !DILocation(line: 3060, column: 17, scope: !3894)
!3929 = !DILocation(line: 3062, column: 20, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3874, file: !16, line: 3062, column: 20)
!3931 = !DILocation(line: 3062, column: 22, scope: !3930)
!3932 = !DILocation(line: 3062, column: 20, scope: !3874)
!3933 = !DILocation(line: 3063, column: 17, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3930, file: !16, line: 3062, column: 28)
!3935 = !DILocation(line: 3064, column: 13, scope: !3934)
!3936 = !DILocation(line: 3068, column: 15, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3867, file: !16, line: 3068, column: 13)
!3938 = !DILocation(line: 3068, column: 19, scope: !3937)
!3939 = !DILocation(line: 3068, column: 25, scope: !3937)
!3940 = !DILocation(line: 3068, column: 45, scope: !3941)
!3941 = !DILexicalBlockFile(scope: !3937, file: !16, discriminator: 1)
!3942 = !DILocation(line: 3068, column: 29, scope: !3941)
!3943 = !DILocation(line: 3068, column: 53, scope: !3941)
!3944 = !DILocation(line: 3068, column: 60, scope: !3941)
!3945 = !DILocation(line: 3069, column: 15, scope: !3937)
!3946 = !DILocation(line: 3069, column: 19, scope: !3937)
!3947 = !DILocation(line: 3069, column: 25, scope: !3937)
!3948 = !DILocation(line: 3069, column: 52, scope: !3941)
!3949 = !DILocation(line: 3069, column: 29, scope: !3941)
!3950 = !DILocation(line: 3069, column: 61, scope: !3941)
!3951 = !DILocation(line: 3068, column: 13, scope: !3952)
!3952 = !DILexicalBlockFile(scope: !3867, file: !16, discriminator: 2)
!3953 = !DILocalVariable(name: "p", scope: !3954, file: !16, line: 3070, type: !241)
!3954 = distinct !DILexicalBlock(scope: !3937, file: !16, line: 3069, column: 69)
!3955 = !DILocation(line: 3070, column: 19, scope: !3954)
!3956 = !DILocalVariable(name: "peer", scope: !3954, file: !16, line: 3071, type: !476)
!3957 = !DILocation(line: 3071, column: 19, scope: !3954)
!3958 = !DILocalVariable(name: "sk", scope: !3954, file: !16, line: 3072, type: !3959)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64, align: 64)
!3960 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_SSL_CIPHER", file: !337, line: 218, flags: DIFlagFwdDecl)
!3961 = !DILocation(line: 3072, column: 41, scope: !3954)
!3962 = !DILocation(line: 3075, column: 17, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 3075, column: 17)
!3964 = !DILocation(line: 3075, column: 21, scope: !3963)
!3965 = !DILocation(line: 3075, column: 26, scope: !3963)
!3966 = !DILocation(line: 3075, column: 51, scope: !3967)
!3967 = !DILexicalBlockFile(scope: !3963, file: !16, discriminator: 1)
!3968 = !DILocation(line: 3075, column: 29, scope: !3967)
!3969 = !DILocation(line: 3075, column: 60, scope: !3967)
!3970 = !DILocation(line: 3075, column: 17, scope: !3967)
!3971 = !DILocation(line: 3076, column: 47, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !16, line: 3076, column: 21)
!3973 = distinct !DILexicalBlock(scope: !3963, file: !16, line: 3075, column: 66)
!3974 = !DILocation(line: 3076, column: 21, scope: !3972)
!3975 = !DILocation(line: 3076, column: 56, scope: !3972)
!3976 = !DILocation(line: 3076, column: 21, scope: !3973)
!3977 = !DILocation(line: 3077, column: 36, scope: !3972)
!3978 = !DILocation(line: 3077, column: 21, scope: !3972)
!3979 = !DILocation(line: 3080, column: 37, scope: !3973)
!3980 = !DILocation(line: 3080, column: 21, scope: !3973)
!3981 = !DILocation(line: 3080, column: 19, scope: !3973)
!3982 = !DILocation(line: 3081, column: 28, scope: !3973)
!3983 = !DILocation(line: 3081, column: 66, scope: !3973)
!3984 = !DILocation(line: 3081, column: 17, scope: !3973)
!3985 = !DILocation(line: 3083, column: 38, scope: !3973)
!3986 = !DILocation(line: 3083, column: 21, scope: !3973)
!3987 = !DILocation(line: 3083, column: 19, scope: !3973)
!3988 = !DILocation(line: 3084, column: 21, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3973, file: !16, line: 3084, column: 21)
!3990 = !DILocation(line: 3084, column: 23, scope: !3989)
!3991 = !DILocation(line: 3084, column: 21, scope: !3973)
!3992 = !DILocation(line: 3085, column: 32, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3989, file: !16, line: 3084, column: 29)
!3994 = !DILocation(line: 3086, column: 46, scope: !3993)
!3995 = !DILocation(line: 3086, column: 51, scope: !3993)
!3996 = !DILocation(line: 3086, column: 32, scope: !3993)
!3997 = !DILocation(line: 3085, column: 21, scope: !3993)
!3998 = !DILocation(line: 3087, column: 38, scope: !3993)
!3999 = !DILocation(line: 3087, column: 21, scope: !3993)
!4000 = !DILocation(line: 3088, column: 21, scope: !3993)
!4001 = !DILocation(line: 3091, column: 16, scope: !3973)
!4002 = distinct !{!4002, !4001}
!4003 = !DILocalVariable(name: "__d0", scope: !4004, file: !16, line: 3091, type: !239)
!4004 = distinct !DILexicalBlock(scope: !3973, file: !16, line: 3091, column: 19)
!4005 = !DILocation(line: 3091, column: 25, scope: !4004)
!4006 = !DILocalVariable(name: "__d1", scope: !4004, file: !16, line: 3091, type: !239)
!4007 = !DILocation(line: 3091, column: 31, scope: !4004)
!4008 = !DILocation(line: 3091, column: 19, scope: !4009)
!4009 = !DILexicalBlockFile(scope: !4004, file: !16, discriminator: 1)
!4010 = !DILocation(line: 3091, column: 168, scope: !4009)
!4011 = !DILocation(line: 3091, column: 37, scope: !4009)
!4012 = !{i32 1010983}
!4013 = !DILocation(line: 3091, column: 48, scope: !4009)
!4014 = !DILocation(line: 3092, column: 16, scope: !3973)
!4015 = !DILocation(line: 3092, column: 18, scope: !3973)
!4016 = !DILocation(line: 3092, column: 74, scope: !3973)
!4017 = !DILocation(line: 3092, column: 25, scope: !3973)
!4018 = !DILocation(line: 3092, column: 19, scope: !3973)
!4019 = !DILocation(line: 3092, column: 53, scope: !3973)
!4020 = !DILocation(line: 3093, column: 28, scope: !3973)
!4021 = !DILocation(line: 3093, column: 35, scope: !3973)
!4022 = !DILocation(line: 3093, column: 21, scope: !3973)
!4023 = !DILocation(line: 3093, column: 19, scope: !3973)
!4024 = !DILocation(line: 3094, column: 21, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3973, file: !16, line: 3094, column: 21)
!4026 = !DILocation(line: 3094, column: 23, scope: !4025)
!4027 = !DILocation(line: 3094, column: 28, scope: !4025)
!4028 = !DILocation(line: 3094, column: 31, scope: !4029)
!4029 = !DILexicalBlockFile(scope: !4025, file: !16, discriminator: 1)
!4030 = !DILocation(line: 3094, column: 33, scope: !4029)
!4031 = !DILocation(line: 3094, column: 34, scope: !4029)
!4032 = !DILocation(line: 3094, column: 88, scope: !4029)
!4033 = !DILocation(line: 3094, column: 68, scope: !4029)
!4034 = !DILocation(line: 3094, column: 70, scope: !4029)
!4035 = !DILocation(line: 3094, column: 21, scope: !4029)
!4036 = !DILocation(line: 3095, column: 32, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4025, file: !16, line: 3094, column: 54)
!4038 = !DILocation(line: 3095, column: 21, scope: !4037)
!4039 = !DILocation(line: 3097, column: 38, scope: !4037)
!4040 = !DILocation(line: 3097, column: 21, scope: !4037)
!4041 = !DILocation(line: 3098, column: 21, scope: !4037)
!4042 = !DILocation(line: 3106, column: 26, scope: !3973)
!4043 = !DILocation(line: 3106, column: 30, scope: !3973)
!4044 = !DILocation(line: 3106, column: 17, scope: !3973)
!4045 = !DILocation(line: 3107, column: 13, scope: !3973)
!4046 = !DILocation(line: 3109, column: 22, scope: !3954)
!4047 = !DILocation(line: 3109, column: 13, scope: !3954)
!4048 = !DILocation(line: 3111, column: 22, scope: !3954)
!4049 = !DILocation(line: 3111, column: 13, scope: !3954)
!4050 = !DILocation(line: 3112, column: 22, scope: !3954)
!4051 = !DILocation(line: 3112, column: 13, scope: !3954)
!4052 = !DILocation(line: 3114, column: 22, scope: !3954)
!4053 = !DILocation(line: 3114, column: 13, scope: !3954)
!4054 = !DILocation(line: 3115, column: 20, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 3115, column: 13)
!4056 = !DILocation(line: 3115, column: 18, scope: !4055)
!4057 = !DILocation(line: 3115, column: 25, scope: !4058)
!4058 = !DILexicalBlockFile(scope: !4059, file: !16, discriminator: 1)
!4059 = distinct !DILexicalBlock(scope: !4055, file: !16, line: 3115, column: 13)
!4060 = !DILocation(line: 3115, column: 29, scope: !4058)
!4061 = !DILocation(line: 3115, column: 27, scope: !4058)
!4062 = !DILocation(line: 3115, column: 13, scope: !4058)
!4063 = !DILocalVariable(name: "myp", scope: !4064, file: !16, line: 3116, type: !349)
!4064 = distinct !DILexicalBlock(scope: !4059, file: !16, line: 3115, column: 46)
!4065 = !DILocation(line: 3116, column: 29, scope: !4064)
!4066 = !DILocation(line: 3117, column: 39, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4064, file: !16, line: 3117, column: 17)
!4068 = !DILocation(line: 3117, column: 28, scope: !4067)
!4069 = !DILocation(line: 3117, column: 26, scope: !4067)
!4070 = !DILocation(line: 3117, column: 22, scope: !4067)
!4071 = !DILocation(line: 3117, column: 44, scope: !4072)
!4072 = !DILexicalBlockFile(scope: !4073, file: !16, discriminator: 1)
!4073 = distinct !DILexicalBlock(scope: !4067, file: !16, line: 3117, column: 17)
!4074 = !DILocation(line: 3117, column: 43, scope: !4072)
!4075 = !DILocation(line: 3117, column: 17, scope: !4072)
!4076 = !DILocation(line: 3118, column: 30, scope: !4073)
!4077 = !DILocation(line: 3118, column: 29, scope: !4073)
!4078 = !DILocation(line: 3118, column: 21, scope: !4073)
!4079 = !DILocation(line: 3120, column: 34, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !4073, file: !16, line: 3118, column: 35)
!4081 = !DILocation(line: 3120, column: 25, scope: !4080)
!4082 = !DILocation(line: 3121, column: 25, scope: !4080)
!4083 = !DILocation(line: 3123, column: 34, scope: !4080)
!4084 = !DILocation(line: 3123, column: 25, scope: !4080)
!4085 = !DILocation(line: 3124, column: 25, scope: !4080)
!4086 = !DILocation(line: 3126, column: 34, scope: !4080)
!4087 = !DILocation(line: 3126, column: 25, scope: !4080)
!4088 = !DILocation(line: 3127, column: 25, scope: !4080)
!4089 = !DILocation(line: 3129, column: 35, scope: !4080)
!4090 = !DILocation(line: 3129, column: 39, scope: !4080)
!4091 = !DILocation(line: 3129, column: 25, scope: !4080)
!4092 = !DILocation(line: 3130, column: 25, scope: !4080)
!4093 = !DILocation(line: 3131, column: 21, scope: !4080)
!4094 = !DILocation(line: 3117, column: 52, scope: !4095)
!4095 = !DILexicalBlockFile(scope: !4073, file: !16, discriminator: 2)
!4096 = !DILocation(line: 3117, column: 17, scope: !4095)
!4097 = distinct !{!4097, !4098}
!4098 = !DILocation(line: 3117, column: 17, scope: !4064)
!4099 = !DILocation(line: 3132, column: 27, scope: !4064)
!4100 = !DILocation(line: 3132, column: 17, scope: !4064)
!4101 = !DILocation(line: 3133, column: 13, scope: !4064)
!4102 = !DILocation(line: 3115, column: 42, scope: !4103)
!4103 = !DILexicalBlockFile(scope: !4059, file: !16, discriminator: 2)
!4104 = !DILocation(line: 3115, column: 13, scope: !4103)
!4105 = distinct !{!4105, !4106}
!4106 = !DILocation(line: 3115, column: 13, scope: !3954)
!4107 = !DILocation(line: 3134, column: 22, scope: !3954)
!4108 = !DILocation(line: 3134, column: 13, scope: !3954)
!4109 = !DILocation(line: 3136, column: 24, scope: !3954)
!4110 = !DILocation(line: 3138, column: 34, scope: !3954)
!4111 = !DILocation(line: 3138, column: 24, scope: !3954)
!4112 = !DILocation(line: 3136, column: 13, scope: !3954)
!4113 = !DILocation(line: 3144, column: 24, scope: !3954)
!4114 = !DILocation(line: 3144, column: 13, scope: !3954)
!4115 = !DILocation(line: 3145, column: 34, scope: !3954)
!4116 = !DILocation(line: 3145, column: 18, scope: !3954)
!4117 = !DILocation(line: 3145, column: 16, scope: !3954)
!4118 = !DILocation(line: 3146, column: 35, scope: !3954)
!4119 = !DILocation(line: 3146, column: 17, scope: !3954)
!4120 = !DILocation(line: 3146, column: 15, scope: !3954)
!4121 = !DILocation(line: 3147, column: 20, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 3147, column: 13)
!4123 = !DILocation(line: 3147, column: 18, scope: !4122)
!4124 = !DILocation(line: 3147, column: 25, scope: !4125)
!4125 = !DILexicalBlockFile(scope: !4126, file: !16, discriminator: 1)
!4126 = distinct !DILexicalBlock(scope: !4122, file: !16, line: 3147, column: 13)
!4127 = !DILocation(line: 3147, column: 29, scope: !4125)
!4128 = !DILocation(line: 3147, column: 27, scope: !4125)
!4129 = !DILocation(line: 3147, column: 13, scope: !4125)
!4130 = !DILocation(line: 3148, column: 41, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4126, file: !16, line: 3147, column: 37)
!4132 = !DILocation(line: 3148, column: 45, scope: !4131)
!4133 = !DILocation(line: 3148, column: 21, scope: !4131)
!4134 = !DILocation(line: 3148, column: 19, scope: !4131)
!4135 = !DILocation(line: 3149, column: 28, scope: !4131)
!4136 = !DILocation(line: 3150, column: 51, scope: !4131)
!4137 = !DILocation(line: 3150, column: 28, scope: !4131)
!4138 = !DILocation(line: 3150, column: 75, scope: !4131)
!4139 = !DILocation(line: 3150, column: 55, scope: !4140)
!4140 = !DILexicalBlockFile(scope: !4131, file: !16, discriminator: 1)
!4141 = !DILocation(line: 3149, column: 17, scope: !4131)
!4142 = !DILocation(line: 3151, column: 24, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4131, file: !16, line: 3151, column: 21)
!4144 = !DILocation(line: 3151, column: 26, scope: !4143)
!4145 = !DILocation(line: 3151, column: 31, scope: !4143)
!4146 = !DILocation(line: 3151, column: 36, scope: !4143)
!4147 = !DILocation(line: 3151, column: 42, scope: !4143)
!4148 = !DILocation(line: 3151, column: 46, scope: !4149)
!4149 = !DILexicalBlockFile(scope: !4143, file: !16, discriminator: 1)
!4150 = !DILocation(line: 3151, column: 48, scope: !4149)
!4151 = !DILocation(line: 3151, column: 55, scope: !4149)
!4152 = !DILocation(line: 3151, column: 52, scope: !4149)
!4153 = !DILocation(line: 3151, column: 21, scope: !4149)
!4154 = !DILocation(line: 3152, column: 30, scope: !4143)
!4155 = !DILocation(line: 3152, column: 21, scope: !4143)
!4156 = !DILocation(line: 3153, column: 13, scope: !4131)
!4157 = !DILocation(line: 3147, column: 33, scope: !4158)
!4158 = !DILexicalBlockFile(scope: !4126, file: !16, discriminator: 2)
!4159 = !DILocation(line: 3147, column: 13, scope: !4158)
!4160 = distinct !{!4160, !4161}
!4161 = !DILocation(line: 3147, column: 13, scope: !3954)
!4162 = !DILocation(line: 3154, column: 22, scope: !3954)
!4163 = !DILocation(line: 3154, column: 13, scope: !3954)
!4164 = !DILocation(line: 3155, column: 40, scope: !3954)
!4165 = !DILocation(line: 3155, column: 45, scope: !3954)
!4166 = !DILocation(line: 3155, column: 17, scope: !3954)
!4167 = !DILocation(line: 3155, column: 15, scope: !3954)
!4168 = !DILocation(line: 3156, column: 17, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 3156, column: 17)
!4170 = !DILocation(line: 3156, column: 19, scope: !4169)
!4171 = !DILocation(line: 3156, column: 17, scope: !3954)
!4172 = !DILocation(line: 3157, column: 28, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4169, file: !16, line: 3156, column: 27)
!4174 = !DILocation(line: 3157, column: 17, scope: !4173)
!4175 = !DILocation(line: 3159, column: 23, scope: !4173)
!4176 = !DILocation(line: 3159, column: 19, scope: !4173)
!4177 = !DILocation(line: 3160, column: 17, scope: !4173)
!4178 = !DILocation(line: 3160, column: 25, scope: !4179)
!4179 = !DILexicalBlockFile(scope: !4173, file: !16, discriminator: 1)
!4180 = !DILocation(line: 3160, column: 24, scope: !4179)
!4181 = !DILocation(line: 3160, column: 17, scope: !4179)
!4182 = !DILocation(line: 3161, column: 26, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !16, line: 3161, column: 25)
!4184 = distinct !DILexicalBlock(scope: !4173, file: !16, line: 3160, column: 28)
!4185 = !DILocation(line: 3161, column: 25, scope: !4183)
!4186 = !DILocation(line: 3161, column: 28, scope: !4183)
!4187 = !DILocation(line: 3161, column: 25, scope: !4184)
!4188 = !DILocation(line: 3162, column: 35, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4183, file: !16, line: 3161, column: 36)
!4190 = !DILocation(line: 3162, column: 39, scope: !4189)
!4191 = !DILocation(line: 3162, column: 51, scope: !4189)
!4192 = !DILocation(line: 3162, column: 49, scope: !4189)
!4193 = !DILocation(line: 3162, column: 25, scope: !4189)
!4194 = !DILocation(line: 3163, column: 26, scope: !4189)
!4195 = !DILocation(line: 3164, column: 27, scope: !4189)
!4196 = !DILocation(line: 3165, column: 35, scope: !4189)
!4197 = !DILocation(line: 3165, column: 41, scope: !4189)
!4198 = !DILocation(line: 3165, column: 43, scope: !4189)
!4199 = !DILocation(line: 3165, column: 40, scope: !4189)
!4200 = !DILocation(line: 3165, column: 25, scope: !4189)
!4201 = !DILocation(line: 3166, column: 21, scope: !4189)
!4202 = !DILocation(line: 3167, column: 35, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4183, file: !16, line: 3166, column: 28)
!4204 = !DILocation(line: 3167, column: 39, scope: !4203)
!4205 = !DILocation(line: 3167, column: 25, scope: !4203)
!4206 = !DILocation(line: 3168, column: 26, scope: !4203)
!4207 = !DILocation(line: 3170, column: 22, scope: !4184)
!4208 = !DILocation(line: 3160, column: 17, scope: !4209)
!4209 = !DILexicalBlockFile(scope: !4173, file: !16, discriminator: 2)
!4210 = distinct !{!4210, !4177}
!4211 = !DILocation(line: 3172, column: 26, scope: !4173)
!4212 = !DILocation(line: 3172, column: 17, scope: !4173)
!4213 = !DILocation(line: 3173, column: 13, scope: !4173)
!4214 = !DILocation(line: 3174, column: 31, scope: !3954)
!4215 = !DILocation(line: 3174, column: 35, scope: !3954)
!4216 = !DILocation(line: 3174, column: 13, scope: !3954)
!4217 = !DILocation(line: 3176, column: 30, scope: !3954)
!4218 = !DILocation(line: 3176, column: 34, scope: !3954)
!4219 = !DILocation(line: 3176, column: 13, scope: !3954)
!4220 = !DILocation(line: 3178, column: 28, scope: !3954)
!4221 = !DILocation(line: 3178, column: 32, scope: !3954)
!4222 = !DILocation(line: 3178, column: 13, scope: !3954)
!4223 = !DILocation(line: 3179, column: 24, scope: !3954)
!4224 = !DILocation(line: 3179, column: 48, scope: !3954)
!4225 = !DILocation(line: 3179, column: 29, scope: !3954)
!4226 = !DILocation(line: 3179, column: 13, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !3954, file: !16, discriminator: 1)
!4228 = !DILocation(line: 3181, column: 40, scope: !3954)
!4229 = !DILocation(line: 3181, column: 17, scope: !3954)
!4230 = !DILocation(line: 3181, column: 15, scope: !3954)
!4231 = !DILocation(line: 3182, column: 24, scope: !3954)
!4232 = !DILocation(line: 3183, column: 47, scope: !3954)
!4233 = !DILocation(line: 3183, column: 24, scope: !3954)
!4234 = !DILocation(line: 3183, column: 71, scope: !3954)
!4235 = !DILocation(line: 3183, column: 51, scope: !4227)
!4236 = !DILocation(line: 3182, column: 13, scope: !3954)
!4237 = !DILocation(line: 3184, column: 31, scope: !3954)
!4238 = !DILocation(line: 3184, column: 51, scope: !3954)
!4239 = !DILocation(line: 3184, column: 35, scope: !3954)
!4240 = !DILocation(line: 3184, column: 13, scope: !4227)
!4241 = !DILocation(line: 3185, column: 24, scope: !3954)
!4242 = !DILocation(line: 3185, column: 13, scope: !3954)
!4243 = !DILocation(line: 3186, column: 25, scope: !3954)
!4244 = !DILocation(line: 3186, column: 45, scope: !3954)
!4245 = !DILocation(line: 3186, column: 29, scope: !3954)
!4246 = !DILocation(line: 3186, column: 13, scope: !4227)
!4247 = !DILocation(line: 3187, column: 24, scope: !3954)
!4248 = !DILocation(line: 3187, column: 13, scope: !3954)
!4249 = !DILocation(line: 3188, column: 45, scope: !3954)
!4250 = !DILocation(line: 3188, column: 20, scope: !3954)
!4251 = !DILocation(line: 3188, column: 18, scope: !3954)
!4252 = !DILocation(line: 3189, column: 17, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !3954, file: !16, line: 3189, column: 17)
!4254 = !DILocation(line: 3189, column: 22, scope: !4253)
!4255 = !DILocation(line: 3189, column: 17, scope: !3954)
!4256 = !DILocation(line: 3190, column: 28, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4253, file: !16, line: 3189, column: 30)
!4258 = !DILocation(line: 3190, column: 17, scope: !4257)
!4259 = !DILocation(line: 3191, column: 28, scope: !4257)
!4260 = !DILocation(line: 3191, column: 32, scope: !4257)
!4261 = !DILocation(line: 3191, column: 17, scope: !4257)
!4262 = !DILocation(line: 3192, column: 36, scope: !4257)
!4263 = !DILocation(line: 3192, column: 40, scope: !4257)
!4264 = !DILocation(line: 3192, column: 17, scope: !4257)
!4265 = !DILocation(line: 3193, column: 27, scope: !4257)
!4266 = !DILocation(line: 3193, column: 17, scope: !4257)
!4267 = !DILocation(line: 3194, column: 22, scope: !4257)
!4268 = !DILocation(line: 3195, column: 13, scope: !4257)
!4269 = !DILocation(line: 3196, column: 26, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4253, file: !16, line: 3195, column: 20)
!4271 = !DILocation(line: 3196, column: 17, scope: !4270)
!4272 = !DILocation(line: 3198, column: 22, scope: !3954)
!4273 = !DILocation(line: 3198, column: 13, scope: !3954)
!4274 = !DILocation(line: 3199, column: 13, scope: !3954)
!4275 = !DILocation(line: 3200, column: 21, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !3937, file: !16, line: 3200, column: 20)
!4277 = !DILocation(line: 3200, column: 25, scope: !4276)
!4278 = !DILocation(line: 3200, column: 30, scope: !4276)
!4279 = !DILocation(line: 3200, column: 33, scope: !4280)
!4280 = !DILexicalBlockFile(scope: !4276, file: !16, discriminator: 1)
!4281 = !DILocation(line: 3200, column: 37, scope: !4280)
!4282 = !DILocation(line: 3201, column: 20, scope: !4276)
!4283 = !DILocation(line: 3201, column: 41, scope: !4280)
!4284 = !DILocation(line: 3201, column: 24, scope: !4280)
!4285 = !DILocation(line: 3201, column: 49, scope: !4280)
!4286 = !DILocation(line: 3200, column: 20, scope: !4287)
!4287 = !DILexicalBlockFile(scope: !3937, file: !16, discriminator: 2)
!4288 = !DILocalVariable(name: "file", scope: !4289, file: !16, line: 3202, type: !265)
!4289 = distinct !DILexicalBlock(scope: !4276, file: !16, line: 3201, column: 56)
!4290 = !DILocation(line: 3202, column: 18, scope: !4289)
!4291 = !DILocalVariable(name: "p", scope: !4289, file: !16, line: 3203, type: !241)
!4292 = !DILocation(line: 3203, column: 19, scope: !4289)
!4293 = !DILocalVariable(name: "e", scope: !4289, file: !16, line: 3203, type: !241)
!4294 = !DILocation(line: 3203, column: 23, scope: !4289)
!4295 = !DILocation(line: 3208, column: 19, scope: !4289)
!4296 = !DILocation(line: 3208, column: 15, scope: !4289)
!4297 = !DILocation(line: 3210, column: 17, scope: !4289)
!4298 = !DILocation(line: 3211, column: 22, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3211, column: 13)
!4300 = !DILocation(line: 3211, column: 20, scope: !4299)
!4301 = !DILocation(line: 3211, column: 18, scope: !4299)
!4302 = !DILocation(line: 3211, column: 26, scope: !4303)
!4303 = !DILexicalBlockFile(scope: !4304, file: !16, discriminator: 1)
!4304 = distinct !DILexicalBlock(scope: !4299, file: !16, line: 3211, column: 13)
!4305 = !DILocation(line: 3211, column: 25, scope: !4303)
!4306 = !DILocation(line: 3211, column: 28, scope: !4303)
!4307 = !DILocation(line: 3211, column: 13, scope: !4303)
!4308 = !DILocation(line: 3212, column: 21, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !16, line: 3212, column: 21)
!4310 = distinct !DILexicalBlock(scope: !4304, file: !16, line: 3211, column: 42)
!4311 = !DILocation(line: 3212, column: 26, scope: !4309)
!4312 = !DILocation(line: 3212, column: 21, scope: !4310)
!4313 = !DILocation(line: 3213, column: 21, scope: !4309)
!4314 = !DILocation(line: 3215, column: 25, scope: !4310)
!4315 = !DILocation(line: 3215, column: 17, scope: !4310)
!4316 = !DILocation(line: 3217, column: 28, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4310, file: !16, line: 3215, column: 30)
!4318 = !DILocation(line: 3217, column: 33, scope: !4317)
!4319 = !DILocation(line: 3217, column: 27, scope: !4317)
!4320 = !DILocation(line: 3217, column: 25, scope: !4317)
!4321 = !DILocation(line: 3218, column: 21, scope: !4317)
!4322 = !DILocation(line: 3220, column: 28, scope: !4317)
!4323 = !DILocation(line: 3220, column: 33, scope: !4317)
!4324 = !DILocation(line: 3220, column: 27, scope: !4317)
!4325 = !DILocation(line: 3220, column: 25, scope: !4317)
!4326 = !DILocation(line: 3221, column: 21, scope: !4317)
!4327 = !DILocation(line: 3223, column: 28, scope: !4317)
!4328 = !DILocation(line: 3223, column: 33, scope: !4317)
!4329 = !DILocation(line: 3223, column: 27, scope: !4317)
!4330 = !DILocation(line: 3223, column: 25, scope: !4317)
!4331 = !DILocation(line: 3224, column: 21, scope: !4317)
!4332 = !DILocation(line: 3226, column: 21, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4310, file: !16, line: 3226, column: 21)
!4334 = !DILocation(line: 3226, column: 25, scope: !4333)
!4335 = !DILocation(line: 3226, column: 21, scope: !4310)
!4336 = !DILocation(line: 3227, column: 28, scope: !4333)
!4337 = !DILocation(line: 3227, column: 33, scope: !4333)
!4338 = !DILocation(line: 3227, column: 27, scope: !4333)
!4339 = !DILocation(line: 3227, column: 25, scope: !4333)
!4340 = !DILocation(line: 3227, column: 21, scope: !4333)
!4341 = !DILocation(line: 3228, column: 13, scope: !4310)
!4342 = !DILocation(line: 3211, column: 38, scope: !4343)
!4343 = !DILexicalBlockFile(scope: !4304, file: !16, discriminator: 2)
!4344 = !DILocation(line: 3211, column: 13, scope: !4343)
!4345 = distinct !{!4345, !4346}
!4346 = !DILocation(line: 3211, column: 13, scope: !4289)
!4347 = !DILocation(line: 3229, column: 20, scope: !4289)
!4348 = !DILocation(line: 3229, column: 24, scope: !4289)
!4349 = !DILocation(line: 3229, column: 30, scope: !4289)
!4350 = !DILocation(line: 3229, column: 34, scope: !4351)
!4351 = !DILexicalBlockFile(scope: !4289, file: !16, discriminator: 1)
!4352 = !DILocation(line: 3229, column: 38, scope: !4351)
!4353 = !DILocation(line: 3229, column: 30, scope: !4351)
!4354 = !DILocation(line: 3229, column: 30, scope: !4355)
!4355 = !DILexicalBlockFile(scope: !4289, file: !16, discriminator: 2)
!4356 = !DILocation(line: 3229, column: 17, scope: !4355)
!4357 = !DILocation(line: 3232, column: 18, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3232, column: 17)
!4359 = !DILocation(line: 3232, column: 17, scope: !4358)
!4360 = !DILocation(line: 3232, column: 20, scope: !4358)
!4361 = !DILocation(line: 3232, column: 17, scope: !4289)
!4362 = !DILocation(line: 3233, column: 26, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4358, file: !16, line: 3232, column: 29)
!4364 = !DILocation(line: 3233, column: 30, scope: !4363)
!4365 = !DILocation(line: 3233, column: 17, scope: !4363)
!4366 = !DILocation(line: 3234, column: 28, scope: !4363)
!4367 = !DILocation(line: 3234, column: 68, scope: !4363)
!4368 = !DILocation(line: 3234, column: 17, scope: !4363)
!4369 = !DILocation(line: 3235, column: 17, scope: !4363)
!4370 = !DILocation(line: 3237, column: 14, scope: !4289)
!4371 = !DILocation(line: 3237, column: 16, scope: !4289)
!4372 = !DILocation(line: 3239, column: 17, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3239, column: 17)
!4374 = !DILocation(line: 3239, column: 17, scope: !4289)
!4375 = !DILocation(line: 3240, column: 26, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4373, file: !16, line: 3239, column: 22)
!4377 = !DILocation(line: 3240, column: 30, scope: !4376)
!4378 = !DILocation(line: 3240, column: 17, scope: !4376)
!4379 = !DILocation(line: 3241, column: 28, scope: !4376)
!4380 = !DILocation(line: 3241, column: 68, scope: !4376)
!4381 = !DILocation(line: 3241, column: 17, scope: !4376)
!4382 = !DILocation(line: 3242, column: 17, scope: !4376)
!4383 = !DILocation(line: 3245, column: 18, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3245, column: 17)
!4385 = !DILocation(line: 3245, column: 17, scope: !4384)
!4386 = !DILocation(line: 3245, column: 20, scope: !4384)
!4387 = !DILocation(line: 3245, column: 17, scope: !4289)
!4388 = !DILocation(line: 3246, column: 26, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4384, file: !16, line: 3245, column: 28)
!4390 = !DILocation(line: 3246, column: 30, scope: !4389)
!4391 = !DILocation(line: 3246, column: 17, scope: !4389)
!4392 = !DILocation(line: 3247, column: 28, scope: !4389)
!4393 = !DILocation(line: 3247, column: 63, scope: !4389)
!4394 = !DILocation(line: 3247, column: 17, scope: !4389)
!4395 = !DILocation(line: 3248, column: 17, scope: !4389)
!4396 = !DILocation(line: 3252, column: 27, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3252, column: 17)
!4398 = !DILocation(line: 3252, column: 17, scope: !4397)
!4399 = !DILocation(line: 3252, column: 30, scope: !4397)
!4400 = !DILocation(line: 3252, column: 17, scope: !4289)
!4401 = !DILocation(line: 3253, column: 26, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4397, file: !16, line: 3252, column: 35)
!4403 = !DILocation(line: 3253, column: 30, scope: !4402)
!4404 = !DILocation(line: 3253, column: 17, scope: !4402)
!4405 = !DILocation(line: 3254, column: 28, scope: !4402)
!4406 = !DILocation(line: 3254, column: 59, scope: !4402)
!4407 = !DILocation(line: 3254, column: 17, scope: !4402)
!4408 = !DILocation(line: 3255, column: 17, scope: !4402)
!4409 = !DILocation(line: 3258, column: 38, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3258, column: 17)
!4411 = !DILocation(line: 3258, column: 25, scope: !4410)
!4412 = !DILocation(line: 3258, column: 23, scope: !4410)
!4413 = !DILocation(line: 3258, column: 47, scope: !4410)
!4414 = !DILocation(line: 3258, column: 17, scope: !4289)
!4415 = !DILocation(line: 3259, column: 26, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4410, file: !16, line: 3258, column: 55)
!4417 = !DILocation(line: 3259, column: 30, scope: !4416)
!4418 = !DILocation(line: 3259, column: 17, scope: !4416)
!4419 = !DILocation(line: 3260, column: 28, scope: !4416)
!4420 = !DILocation(line: 3260, column: 58, scope: !4416)
!4421 = !DILocation(line: 3260, column: 17, scope: !4416)
!4422 = !DILocation(line: 3261, column: 34, scope: !4416)
!4423 = !DILocation(line: 3261, column: 17, scope: !4416)
!4424 = !DILocation(line: 3262, column: 17, scope: !4416)
!4425 = !DILocation(line: 3265, column: 18, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3265, column: 17)
!4427 = !DILocation(line: 3265, column: 17, scope: !4289)
!4428 = !DILocation(line: 3266, column: 28, scope: !4426)
!4429 = !DILocation(line: 3266, column: 50, scope: !4426)
!4430 = !DILocation(line: 3266, column: 17, scope: !4426)
!4431 = !DILocation(line: 3268, column: 17, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3268, column: 17)
!4433 = !DILocation(line: 3268, column: 21, scope: !4432)
!4434 = !DILocation(line: 3268, column: 17, scope: !4289)
!4435 = !DILocation(line: 3269, column: 28, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4432, file: !16, line: 3268, column: 27)
!4437 = !DILocation(line: 3269, column: 21, scope: !4436)
!4438 = !DILocation(line: 3269, column: 19, scope: !4436)
!4439 = !DILocation(line: 3270, column: 23, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4436, file: !16, line: 3270, column: 21)
!4441 = !DILocation(line: 3270, column: 25, scope: !4440)
!4442 = !DILocation(line: 3270, column: 30, scope: !4440)
!4443 = !DILocation(line: 3270, column: 45, scope: !4444)
!4444 = !DILexicalBlockFile(scope: !4440, file: !16, discriminator: 1)
!4445 = !DILocation(line: 3270, column: 47, scope: !4444)
!4446 = !DILocation(line: 3270, column: 43, scope: !4444)
!4447 = !DILocation(line: 3270, column: 34, scope: !4444)
!4448 = !DILocation(line: 3270, column: 63, scope: !4444)
!4449 = !DILocation(line: 3270, column: 70, scope: !4444)
!4450 = !DILocation(line: 3271, column: 23, scope: !4440)
!4451 = !DILocation(line: 3271, column: 25, scope: !4440)
!4452 = !DILocation(line: 3271, column: 30, scope: !4440)
!4453 = !DILocation(line: 3271, column: 45, scope: !4444)
!4454 = !DILocation(line: 3271, column: 47, scope: !4444)
!4455 = !DILocation(line: 3271, column: 43, scope: !4444)
!4456 = !DILocation(line: 3271, column: 34, scope: !4444)
!4457 = !DILocation(line: 3271, column: 62, scope: !4444)
!4458 = !DILocation(line: 3271, column: 69, scope: !4444)
!4459 = !DILocation(line: 3272, column: 23, scope: !4440)
!4460 = !DILocation(line: 3272, column: 25, scope: !4440)
!4461 = !DILocation(line: 3272, column: 30, scope: !4440)
!4462 = !DILocation(line: 3272, column: 45, scope: !4444)
!4463 = !DILocation(line: 3272, column: 47, scope: !4444)
!4464 = !DILocation(line: 3272, column: 43, scope: !4444)
!4465 = !DILocation(line: 3272, column: 34, scope: !4444)
!4466 = !DILocation(line: 3272, column: 62, scope: !4444)
!4467 = !DILocation(line: 3270, column: 21, scope: !4468)
!4468 = !DILexicalBlockFile(scope: !4436, file: !16, discriminator: 2)
!4469 = !DILocation(line: 3273, column: 30, scope: !4440)
!4470 = !DILocation(line: 3273, column: 21, scope: !4440)
!4471 = !DILocation(line: 3276, column: 30, scope: !4440)
!4472 = !DILocation(line: 3276, column: 21, scope: !4440)
!4473 = !DILocation(line: 3278, column: 13, scope: !4436)
!4474 = !DILocation(line: 3280, column: 13, scope: !4289)
!4475 = !DILocation(line: 3281, column: 30, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !16, line: 3280, column: 22)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !16, line: 3280, column: 13)
!4478 = distinct !DILexicalBlock(scope: !4289, file: !16, line: 3280, column: 13)
!4479 = !DILocation(line: 3281, column: 36, scope: !4476)
!4480 = !DILocation(line: 3281, column: 21, scope: !4476)
!4481 = !DILocation(line: 3281, column: 19, scope: !4476)
!4482 = !DILocation(line: 3282, column: 21, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4476, file: !16, line: 3282, column: 21)
!4484 = !DILocation(line: 3282, column: 23, scope: !4483)
!4485 = !DILocation(line: 3282, column: 21, scope: !4476)
!4486 = !DILocation(line: 3283, column: 21, scope: !4483)
!4487 = !DILocation(line: 3295, column: 24, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4476, file: !16, line: 3295, column: 17)
!4489 = !DILocation(line: 3295, column: 22, scope: !4488)
!4490 = !DILocation(line: 3295, column: 29, scope: !4491)
!4491 = !DILexicalBlockFile(scope: !4492, file: !16, discriminator: 1)
!4492 = distinct !DILexicalBlock(scope: !4488, file: !16, line: 3295, column: 17)
!4493 = !DILocation(line: 3295, column: 33, scope: !4491)
!4494 = !DILocation(line: 3295, column: 31, scope: !4491)
!4495 = !DILocation(line: 3295, column: 17, scope: !4491)
!4496 = !DILocation(line: 3302, column: 35, scope: !4497)
!4497 = distinct !DILexicalBlock(scope: !4492, file: !16, line: 3295, column: 37)
!4498 = !DILocation(line: 3302, column: 45, scope: !4497)
!4499 = !DILocation(line: 3302, column: 41, scope: !4497)
!4500 = !DILocation(line: 3302, column: 50, scope: !4497)
!4501 = !DILocation(line: 3302, column: 54, scope: !4497)
!4502 = !DILocation(line: 3302, column: 52, scope: !4497)
!4503 = !DILocation(line: 3302, column: 25, scope: !4497)
!4504 = !DILocation(line: 3302, column: 23, scope: !4497)
!4505 = !DILocation(line: 3303, column: 25, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4497, file: !16, line: 3303, column: 25)
!4507 = !DILocation(line: 3303, column: 27, scope: !4506)
!4508 = !DILocation(line: 3303, column: 25, scope: !4497)
!4509 = !DILocation(line: 3304, column: 45, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4511, file: !16, line: 3304, column: 29)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !16, line: 3303, column: 33)
!4512 = !DILocation(line: 3304, column: 30, scope: !4510)
!4513 = !DILocation(line: 3305, column: 29, scope: !4510)
!4514 = !DILocation(line: 3305, column: 55, scope: !4515)
!4515 = !DILexicalBlockFile(scope: !4510, file: !16, discriminator: 1)
!4516 = !DILocation(line: 3305, column: 33, scope: !4515)
!4517 = !DILocation(line: 3304, column: 29, scope: !4518)
!4518 = !DILexicalBlockFile(scope: !4511, file: !16, discriminator: 1)
!4519 = !DILocation(line: 3306, column: 29, scope: !4510)
!4520 = !DILocation(line: 3308, column: 40, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4510, file: !16, line: 3307, column: 30)
!4522 = !DILocation(line: 3308, column: 29, scope: !4521)
!4523 = !DILocation(line: 3310, column: 21, scope: !4511)
!4524 = !DILocation(line: 3311, column: 30, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4506, file: !16, line: 3310, column: 28)
!4526 = !DILocation(line: 3311, column: 27, scope: !4525)
!4527 = !DILocation(line: 3295, column: 17, scope: !4528)
!4528 = !DILexicalBlockFile(scope: !4492, file: !16, discriminator: 2)
!4529 = distinct !{!4529, !4530}
!4530 = !DILocation(line: 3295, column: 17, scope: !4476)
!4531 = !DILocation(line: 3280, column: 13, scope: !4532)
!4532 = !DILexicalBlockFile(scope: !4477, file: !16, discriminator: 1)
!4533 = distinct !{!4533, !4474}
!4534 = !DILocation(line: 3314, column: 13, scope: !4478)
!4535 = !DILocation(line: 3316, column: 22, scope: !4289)
!4536 = !DILocation(line: 3316, column: 13, scope: !4289)
!4537 = !DILocation(line: 3317, column: 13, scope: !4289)
!4538 = !DILocation(line: 3032, column: 5, scope: !4539)
!4539 = !DILexicalBlockFile(scope: !3868, file: !16, discriminator: 1)
!4540 = !DILocation(line: 3321, column: 5, scope: !411)
!4541 = !DILocation(line: 3322, column: 32, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !16, line: 3321, column: 14)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !16, line: 3321, column: 5)
!4544 = distinct !DILexicalBlock(scope: !411, file: !16, line: 3321, column: 5)
!4545 = !DILocation(line: 3322, column: 23, scope: !4542)
!4546 = !DILocation(line: 3322, column: 18, scope: !4542)
!4547 = !DILocation(line: 3322, column: 11, scope: !4542)
!4548 = !DILocation(line: 3323, column: 13, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4542, file: !16, line: 3323, column: 13)
!4550 = !DILocation(line: 3323, column: 15, scope: !4549)
!4551 = !DILocation(line: 3323, column: 13, scope: !4542)
!4552 = !DILocation(line: 3324, column: 33, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4554, file: !16, line: 3324, column: 17)
!4554 = distinct !DILexicalBlock(scope: !4549, file: !16, line: 3323, column: 21)
!4555 = !DILocation(line: 3324, column: 18, scope: !4553)
!4556 = !DILocation(line: 3324, column: 17, scope: !4554)
!4557 = !DILocation(line: 3325, column: 17, scope: !4553)
!4558 = !DILocation(line: 3326, column: 9, scope: !4554)
!4559 = !DILocation(line: 3327, column: 13, scope: !4549)
!4560 = !DILocation(line: 3321, column: 5, scope: !4561)
!4561 = !DILexicalBlockFile(scope: !4543, file: !16, discriminator: 1)
!4562 = distinct !{!4562, !4540}
!4563 = !DILocation(line: 3328, column: 5, scope: !4544)
!4564 = !DILocation(line: 3331, column: 22, scope: !411)
!4565 = !DILocation(line: 3331, column: 5, scope: !411)
!4566 = !DILocation(line: 3334, column: 17, scope: !411)
!4567 = !DILocation(line: 3334, column: 5, scope: !411)
!4568 = !DILocation(line: 3335, column: 18, scope: !411)
!4569 = !DILocation(line: 3335, column: 5, scope: !411)
!4570 = !DILocation(line: 3336, column: 12, scope: !411)
!4571 = !DILocation(line: 3336, column: 5, scope: !411)
!4572 = !DILocalVariable(name: "s", arg: 1, scope: !406, file: !16, line: 2231, type: !239)
!4573 = !DILocation(line: 2231, column: 24, scope: !406)
!4574 = !DILocalVariable(name: "stype", arg: 2, scope: !406, file: !16, line: 2231, type: !239)
!4575 = !DILocation(line: 2231, column: 31, scope: !406)
!4576 = !DILocalVariable(name: "prot", arg: 3, scope: !406, file: !16, line: 2231, type: !239)
!4577 = !DILocation(line: 2231, column: 42, scope: !406)
!4578 = !DILocalVariable(name: "context", arg: 4, scope: !406, file: !16, line: 2231, type: !237)
!4579 = !DILocation(line: 2231, column: 63, scope: !406)
!4580 = !DILocalVariable(name: "buf", scope: !406, file: !16, line: 2233, type: !241)
!4581 = !DILocation(line: 2233, column: 11, scope: !406)
!4582 = !DILocalVariable(name: "readfds", scope: !406, file: !16, line: 2234, type: !3719)
!4583 = !DILocation(line: 2234, column: 12, scope: !406)
!4584 = !DILocalVariable(name: "ret", scope: !406, file: !16, line: 2235, type: !239)
!4585 = !DILocation(line: 2235, column: 9, scope: !406)
!4586 = !DILocalVariable(name: "width", scope: !406, file: !16, line: 2235, type: !239)
!4587 = !DILocation(line: 2235, column: 18, scope: !406)
!4588 = !DILocalVariable(name: "k", scope: !406, file: !16, line: 2236, type: !239)
!4589 = !DILocation(line: 2236, column: 9, scope: !406)
!4590 = !DILocalVariable(name: "i", scope: !406, file: !16, line: 2236, type: !239)
!4591 = !DILocation(line: 2236, column: 12, scope: !406)
!4592 = !DILocalVariable(name: "l", scope: !406, file: !16, line: 2237, type: !593)
!4593 = !DILocation(line: 2237, column: 19, scope: !406)
!4594 = !DILocalVariable(name: "con", scope: !406, file: !16, line: 2238, type: !2608)
!4595 = !DILocation(line: 2238, column: 10, scope: !406)
!4596 = !DILocalVariable(name: "sbio", scope: !406, file: !16, line: 2239, type: !265)
!4597 = !DILocation(line: 2239, column: 10, scope: !406)
!4598 = !DILocalVariable(name: "timeout", scope: !406, file: !16, line: 2240, type: !4599)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !4600, line: 30, size: 128, align: 64, elements: !4601)
!4600 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!4601 = !{!4602, !4605}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4599, file: !4600, line: 32, baseType: !4603, size: 64, align: 64)
!4603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !4604, line: 139, baseType: !321)
!4604 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4599, file: !4600, line: 33, baseType: !4606, size: 64, align: 64, offset: 64)
!4606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !4604, line: 141, baseType: !321)
!4607 = !DILocation(line: 2240, column: 20, scope: !406)
!4608 = !DILocalVariable(name: "timeoutp", scope: !406, file: !16, line: 2242, type: !4609)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64, align: 64)
!4610 = !DILocation(line: 2242, column: 21, scope: !406)
!4611 = !DILocalVariable(name: "isdtls", scope: !406, file: !16, line: 2248, type: !239)
!4612 = !DILocation(line: 2248, column: 9, scope: !406)
!4613 = !DILocation(line: 2248, column: 19, scope: !406)
!4614 = !DILocation(line: 2248, column: 25, scope: !406)
!4615 = !DILocation(line: 2252, column: 11, scope: !406)
!4616 = !DILocation(line: 2252, column: 9, scope: !406)
!4617 = !DILocation(line: 2253, column: 9, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2253, column: 9)
!4619 = !DILocation(line: 2253, column: 9, scope: !406)
!4620 = !DILocation(line: 2254, column: 30, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !16, line: 2254, column: 13)
!4622 = distinct !DILexicalBlock(scope: !4618, file: !16, line: 2253, column: 17)
!4623 = !DILocation(line: 2254, column: 14, scope: !4621)
!4624 = !DILocation(line: 2254, column: 13, scope: !4622)
!4625 = !DILocation(line: 2255, column: 30, scope: !4621)
!4626 = !DILocation(line: 2255, column: 13, scope: !4621)
!4627 = !DILocation(line: 2256, column: 19, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4621, file: !16, line: 2256, column: 18)
!4629 = !DILocation(line: 2256, column: 18, scope: !4621)
!4630 = !DILocation(line: 2257, column: 24, scope: !4628)
!4631 = !DILocation(line: 2257, column: 13, scope: !4628)
!4632 = !DILocation(line: 2258, column: 5, scope: !4622)
!4633 = !DILocation(line: 2260, column: 19, scope: !406)
!4634 = !DILocation(line: 2260, column: 11, scope: !406)
!4635 = !DILocation(line: 2260, column: 9, scope: !406)
!4636 = !DILocation(line: 2261, column: 9, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2261, column: 9)
!4638 = !DILocation(line: 2261, column: 13, scope: !4637)
!4639 = !DILocation(line: 2261, column: 9, scope: !406)
!4640 = !DILocation(line: 2262, column: 13, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !16, line: 2261, column: 21)
!4642 = !DILocation(line: 2263, column: 9, scope: !4641)
!4643 = !DILocation(line: 2266, column: 9, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2266, column: 9)
!4645 = !DILocation(line: 2266, column: 9, scope: !406)
!4646 = !DILocation(line: 2267, column: 27, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !16, line: 2266, column: 24)
!4648 = !DILocation(line: 2267, column: 9, scope: !4647)
!4649 = !DILocation(line: 2268, column: 18, scope: !4647)
!4650 = !DILocation(line: 2268, column: 27, scope: !4647)
!4651 = !DILocation(line: 2268, column: 9, scope: !4647)
!4652 = !DILocation(line: 2269, column: 5, scope: !4647)
!4653 = !DILocation(line: 2271, column: 9, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2271, column: 9)
!4655 = !DILocation(line: 2271, column: 17, scope: !4654)
!4656 = !DILocation(line: 2272, column: 8, scope: !4654)
!4657 = !DILocation(line: 2272, column: 39, scope: !4658)
!4658 = !DILexicalBlockFile(scope: !4654, file: !16, discriminator: 1)
!4659 = !DILocation(line: 2272, column: 44, scope: !4658)
!4660 = !DILocation(line: 2273, column: 55, scope: !4654)
!4661 = !DILocation(line: 2273, column: 40, scope: !4654)
!4662 = !DILocation(line: 2272, column: 12, scope: !4658)
!4663 = !DILocation(line: 2271, column: 9, scope: !4664)
!4664 = !DILexicalBlockFile(scope: !406, file: !16, discriminator: 1)
!4665 = !DILocation(line: 2274, column: 20, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4654, file: !16, line: 2273, column: 66)
!4667 = !DILocation(line: 2274, column: 9, scope: !4666)
!4668 = !DILocation(line: 2275, column: 13, scope: !4666)
!4669 = !DILocation(line: 2276, column: 9, scope: !4666)
!4670 = !DILocation(line: 2279, column: 20, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2279, column: 9)
!4672 = !DILocation(line: 2279, column: 10, scope: !4671)
!4673 = !DILocation(line: 2279, column: 9, scope: !406)
!4674 = !DILocation(line: 2280, column: 20, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4671, file: !16, line: 2279, column: 26)
!4676 = !DILocation(line: 2280, column: 9, scope: !4675)
!4677 = !DILocation(line: 2281, column: 13, scope: !4675)
!4678 = !DILocation(line: 2282, column: 9, scope: !4675)
!4679 = !DILocation(line: 2285, column: 9, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2285, column: 9)
!4681 = !DILocation(line: 2285, column: 9, scope: !406)
!4682 = !DILocation(line: 2291, column: 34, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4680, file: !16, line: 2285, column: 17)
!4684 = !DILocation(line: 2291, column: 20, scope: !4683)
!4685 = !DILocation(line: 2291, column: 18, scope: !4683)
!4686 = !DILocation(line: 2293, column: 13, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4683, file: !16, line: 2293, column: 13)
!4688 = !DILocation(line: 2293, column: 13, scope: !4683)
!4689 = !DILocation(line: 2294, column: 21, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4687, file: !16, line: 2293, column: 30)
!4691 = !DILocation(line: 2294, column: 28, scope: !4690)
!4692 = !DILocation(line: 2295, column: 21, scope: !4690)
!4693 = !DILocation(line: 2295, column: 29, scope: !4690)
!4694 = !DILocation(line: 2296, column: 22, scope: !4690)
!4695 = !DILocation(line: 2296, column: 35, scope: !4690)
!4696 = !DILocation(line: 2296, column: 13, scope: !4690)
!4697 = !DILocation(line: 2298, column: 21, scope: !4690)
!4698 = !DILocation(line: 2298, column: 28, scope: !4690)
!4699 = !DILocation(line: 2299, column: 21, scope: !4690)
!4700 = !DILocation(line: 2299, column: 29, scope: !4690)
!4701 = !DILocation(line: 2300, column: 22, scope: !4690)
!4702 = !DILocation(line: 2300, column: 35, scope: !4690)
!4703 = !DILocation(line: 2300, column: 13, scope: !4690)
!4704 = !DILocation(line: 2301, column: 9, scope: !4690)
!4705 = !DILocation(line: 2303, column: 13, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4683, file: !16, line: 2303, column: 13)
!4707 = !DILocation(line: 2303, column: 13, scope: !4683)
!4708 = !DILocation(line: 2304, column: 17, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !16, line: 2304, column: 17)
!4710 = distinct !DILexicalBlock(scope: !4706, file: !16, line: 2303, column: 25)
!4711 = !DILocation(line: 2304, column: 40, scope: !4709)
!4712 = !DILocation(line: 2304, column: 30, scope: !4709)
!4713 = !DILocation(line: 2304, column: 28, scope: !4709)
!4714 = !DILocation(line: 2304, column: 17, scope: !4710)
!4715 = !DILocation(line: 2305, column: 28, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4709, file: !16, line: 2304, column: 32)
!4717 = !DILocation(line: 2306, column: 38, scope: !4716)
!4718 = !DILocation(line: 2306, column: 28, scope: !4716)
!4719 = !DILocation(line: 2305, column: 17, scope: !4716)
!4720 = !DILocation(line: 2307, column: 21, scope: !4716)
!4721 = !DILocation(line: 2308, column: 26, scope: !4716)
!4722 = !DILocation(line: 2308, column: 17, scope: !4716)
!4723 = !DILocation(line: 2309, column: 17, scope: !4716)
!4724 = !DILocation(line: 2311, column: 29, scope: !4710)
!4725 = !DILocation(line: 2311, column: 13, scope: !4710)
!4726 = !DILocation(line: 2312, column: 28, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4710, file: !16, line: 2312, column: 17)
!4728 = !DILocation(line: 2312, column: 38, scope: !4727)
!4729 = !DILocation(line: 2312, column: 18, scope: !4727)
!4730 = !DILocation(line: 2312, column: 17, scope: !4710)
!4731 = !DILocation(line: 2313, column: 28, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4727, file: !16, line: 2312, column: 20)
!4733 = !DILocation(line: 2313, column: 17, scope: !4732)
!4734 = !DILocation(line: 2314, column: 21, scope: !4732)
!4735 = !DILocation(line: 2315, column: 26, scope: !4732)
!4736 = !DILocation(line: 2315, column: 17, scope: !4732)
!4737 = !DILocation(line: 2316, column: 17, scope: !4732)
!4738 = !DILocation(line: 2318, column: 9, scope: !4710)
!4739 = !DILocation(line: 2320, column: 22, scope: !4706)
!4740 = !DILocation(line: 2320, column: 13, scope: !4706)
!4741 = !DILocation(line: 2326, column: 29, scope: !4683)
!4742 = !DILocation(line: 2326, column: 13, scope: !4683)
!4743 = !DILocation(line: 2327, column: 5, scope: !4683)
!4744 = !DILocation(line: 2329, column: 31, scope: !4680)
!4745 = !DILocation(line: 2329, column: 16, scope: !4680)
!4746 = !DILocation(line: 2329, column: 14, scope: !4680)
!4747 = !DILocation(line: 2331, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2331, column: 9)
!4749 = !DILocation(line: 2331, column: 14, scope: !4748)
!4750 = !DILocation(line: 2331, column: 9, scope: !406)
!4751 = !DILocation(line: 2332, column: 20, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4748, file: !16, line: 2331, column: 22)
!4753 = !DILocation(line: 2332, column: 9, scope: !4752)
!4754 = !DILocation(line: 2333, column: 26, scope: !4752)
!4755 = !DILocation(line: 2333, column: 9, scope: !4752)
!4756 = !DILocation(line: 2334, column: 9, scope: !4752)
!4757 = !DILocation(line: 2337, column: 9, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2337, column: 9)
!4759 = !DILocation(line: 2337, column: 9, scope: !406)
!4760 = !DILocalVariable(name: "test", scope: !4761, file: !16, line: 2338, type: !265)
!4761 = distinct !DILexicalBlock(scope: !4758, file: !16, line: 2337, column: 22)
!4762 = !DILocation(line: 2338, column: 14, scope: !4761)
!4763 = !DILocation(line: 2340, column: 24, scope: !4761)
!4764 = !DILocation(line: 2340, column: 16, scope: !4765)
!4765 = !DILexicalBlockFile(scope: !4761, file: !16, discriminator: 1)
!4766 = !DILocation(line: 2340, column: 14, scope: !4761)
!4767 = !DILocation(line: 2341, column: 25, scope: !4761)
!4768 = !DILocation(line: 2341, column: 31, scope: !4761)
!4769 = !DILocation(line: 2341, column: 16, scope: !4761)
!4770 = !DILocation(line: 2341, column: 14, scope: !4761)
!4771 = !DILocation(line: 2342, column: 5, scope: !4761)
!4772 = !DILocation(line: 2344, column: 17, scope: !406)
!4773 = !DILocation(line: 2344, column: 22, scope: !406)
!4774 = !DILocation(line: 2344, column: 28, scope: !406)
!4775 = !DILocation(line: 2344, column: 5, scope: !406)
!4776 = !DILocation(line: 2345, column: 26, scope: !406)
!4777 = !DILocation(line: 2345, column: 5, scope: !406)
!4778 = !DILocation(line: 2348, column: 9, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2348, column: 9)
!4780 = !DILocation(line: 2348, column: 9, scope: !406)
!4781 = !DILocation(line: 2349, column: 39, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4779, file: !16, line: 2348, column: 18)
!4783 = !DILocation(line: 2349, column: 26, scope: !4782)
!4784 = !DILocation(line: 2349, column: 9, scope: !4785)
!4785 = !DILexicalBlockFile(scope: !4782, file: !16, discriminator: 1)
!4786 = !DILocation(line: 2350, column: 43, scope: !4782)
!4787 = !DILocation(line: 2350, column: 30, scope: !4782)
!4788 = !DILocation(line: 2350, column: 57, scope: !4782)
!4789 = !DILocation(line: 2350, column: 49, scope: !4782)
!4790 = !DILocation(line: 2350, column: 9, scope: !4785)
!4791 = !DILocation(line: 2351, column: 5, scope: !4782)
!4792 = !DILocation(line: 2352, column: 9, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2352, column: 9)
!4794 = !DILocation(line: 2352, column: 9, scope: !406)
!4795 = !DILocation(line: 2358, column: 34, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4793, file: !16, line: 2352, column: 16)
!4797 = !DILocation(line: 2358, column: 13, scope: !4796)
!4798 = !DILocation(line: 2359, column: 19, scope: !4796)
!4799 = !DILocation(line: 2359, column: 33, scope: !4796)
!4800 = !DILocation(line: 2359, column: 45, scope: !4801)
!4801 = !DILexicalBlockFile(scope: !4796, file: !16, discriminator: 1)
!4802 = !DILocation(line: 2359, column: 33, scope: !4801)
!4803 = !DILocation(line: 2359, column: 57, scope: !4804)
!4804 = !DILexicalBlockFile(scope: !4796, file: !16, discriminator: 2)
!4805 = !DILocation(line: 2359, column: 33, scope: !4804)
!4806 = !DILocation(line: 2359, column: 33, scope: !4807)
!4807 = !DILexicalBlockFile(scope: !4796, file: !16, discriminator: 3)
!4808 = !DILocation(line: 2359, column: 32, scope: !4807)
!4809 = !DILocation(line: 2359, column: 9, scope: !4807)
!4810 = !DILocation(line: 2360, column: 5, scope: !4796)
!4811 = !DILocation(line: 2362, column: 9, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2362, column: 9)
!4813 = !DILocation(line: 2362, column: 9, scope: !406)
!4814 = !DILocation(line: 2363, column: 27, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4812, file: !16, line: 2362, column: 24)
!4816 = !DILocation(line: 2363, column: 9, scope: !4815)
!4817 = !DILocation(line: 2364, column: 18, scope: !4815)
!4818 = !DILocation(line: 2364, column: 27, scope: !4815)
!4819 = !DILocation(line: 2364, column: 9, scope: !4815)
!4820 = !DILocation(line: 2365, column: 5, scope: !4815)
!4821 = !DILocation(line: 2367, column: 9, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2367, column: 9)
!4823 = !DILocation(line: 2367, column: 9, scope: !406)
!4824 = !DILocalVariable(name: "write_header", scope: !4825, file: !16, line: 2368, type: !239)
!4825 = distinct !DILexicalBlock(scope: !4822, file: !16, line: 2367, column: 21)
!4826 = !DILocation(line: 2368, column: 13, scope: !4825)
!4827 = !DILocalVariable(name: "edret", scope: !4825, file: !16, line: 2368, type: !239)
!4828 = !DILocation(line: 2368, column: 31, scope: !4825)
!4829 = !DILocalVariable(name: "readbytes", scope: !4825, file: !16, line: 2369, type: !591)
!4830 = !DILocation(line: 2369, column: 16, scope: !4825)
!4831 = !DILocation(line: 2371, column: 9, scope: !4825)
!4832 = !DILocation(line: 2371, column: 16, scope: !4833)
!4833 = !DILexicalBlockFile(scope: !4825, file: !16, discriminator: 1)
!4834 = !DILocation(line: 2371, column: 22, scope: !4833)
!4835 = !DILocation(line: 2371, column: 9, scope: !4833)
!4836 = !DILocation(line: 2372, column: 13, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4825, file: !16, line: 2371, column: 28)
!4838 = !DILocation(line: 2373, column: 45, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !16, line: 2372, column: 22)
!4840 = distinct !DILexicalBlock(scope: !4841, file: !16, line: 2372, column: 13)
!4841 = distinct !DILexicalBlock(scope: !4837, file: !16, line: 2372, column: 13)
!4842 = !DILocation(line: 2373, column: 50, scope: !4839)
!4843 = !DILocation(line: 2373, column: 25, scope: !4839)
!4844 = !DILocation(line: 2373, column: 23, scope: !4839)
!4845 = !DILocation(line: 2374, column: 21, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4839, file: !16, line: 2374, column: 21)
!4847 = !DILocation(line: 2374, column: 27, scope: !4846)
!4848 = !DILocation(line: 2374, column: 21, scope: !4839)
!4849 = !DILocation(line: 2375, column: 21, scope: !4846)
!4850 = !DILocation(line: 2377, column: 39, scope: !4839)
!4851 = !DILocation(line: 2377, column: 25, scope: !4839)
!4852 = !DILocation(line: 2377, column: 17, scope: !4839)
!4853 = !DILocation(line: 2382, column: 21, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4839, file: !16, line: 2377, column: 48)
!4855 = distinct !{!4855, !4836}
!4856 = !DILocation(line: 2384, column: 32, scope: !4854)
!4857 = !DILocation(line: 2384, column: 21, scope: !4854)
!4858 = !DILocation(line: 2385, column: 38, scope: !4854)
!4859 = !DILocation(line: 2385, column: 21, scope: !4854)
!4860 = !DILocation(line: 2386, column: 21, scope: !4854)
!4861 = !DILocation(line: 2389, column: 17, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4837, file: !16, line: 2389, column: 17)
!4863 = !DILocation(line: 2389, column: 27, scope: !4862)
!4864 = !DILocation(line: 2389, column: 17, scope: !4837)
!4865 = !DILocation(line: 2390, column: 21, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !16, line: 2390, column: 21)
!4867 = distinct !DILexicalBlock(scope: !4862, file: !16, line: 2389, column: 32)
!4868 = !DILocation(line: 2390, column: 21, scope: !4867)
!4869 = !DILocation(line: 2391, column: 32, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4866, file: !16, line: 2390, column: 35)
!4871 = !DILocation(line: 2391, column: 21, scope: !4870)
!4872 = !DILocation(line: 2392, column: 34, scope: !4870)
!4873 = !DILocation(line: 2393, column: 17, scope: !4870)
!4874 = !DILocation(line: 2394, column: 34, scope: !4867)
!4875 = !DILocation(line: 2394, column: 53, scope: !4867)
!4876 = !DILocation(line: 2394, column: 39, scope: !4867)
!4877 = !DILocation(line: 2394, column: 17, scope: !4867)
!4878 = !DILocation(line: 2395, column: 37, scope: !4867)
!4879 = !DILocation(line: 2395, column: 28, scope: !4867)
!4880 = !DILocation(line: 2395, column: 23, scope: !4867)
!4881 = !DILocation(line: 2396, column: 13, scope: !4867)
!4882 = !DILocation(line: 2371, column: 9, scope: !4883)
!4883 = !DILexicalBlockFile(scope: !4825, file: !16, discriminator: 2)
!4884 = distinct !{!4884, !4831}
!4885 = !DILocation(line: 2398, column: 13, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4825, file: !16, line: 2398, column: 13)
!4887 = !DILocation(line: 2398, column: 13, scope: !4825)
!4888 = !DILocation(line: 2399, column: 43, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !16, line: 2399, column: 17)
!4890 = distinct !DILexicalBlock(scope: !4886, file: !16, line: 2398, column: 27)
!4891 = !DILocation(line: 2399, column: 17, scope: !4889)
!4892 = !DILocation(line: 2399, column: 48, scope: !4889)
!4893 = !DILocation(line: 2399, column: 17, scope: !4890)
!4894 = !DILocation(line: 2400, column: 28, scope: !4889)
!4895 = !DILocation(line: 2400, column: 17, scope: !4889)
!4896 = !DILocation(line: 2402, column: 28, scope: !4889)
!4897 = !DILocation(line: 2402, column: 17, scope: !4889)
!4898 = !DILocation(line: 2403, column: 9, scope: !4890)
!4899 = !DILocation(line: 2404, column: 24, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4886, file: !16, line: 2403, column: 16)
!4901 = !DILocation(line: 2404, column: 13, scope: !4900)
!4902 = !DILocation(line: 2406, column: 34, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4825, file: !16, line: 2406, column: 13)
!4904 = !DILocation(line: 2406, column: 13, scope: !4903)
!4905 = !DILocation(line: 2406, column: 13, scope: !4825)
!4906 = !DILocation(line: 2407, column: 35, scope: !4903)
!4907 = !DILocation(line: 2407, column: 13, scope: !4903)
!4908 = !DILocation(line: 2408, column: 5, scope: !4825)
!4909 = !DILocation(line: 2410, column: 9, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2410, column: 9)
!4911 = !DILocation(line: 2410, column: 26, scope: !4910)
!4912 = !DILocation(line: 2410, column: 24, scope: !4910)
!4913 = !DILocation(line: 2410, column: 9, scope: !406)
!4914 = !DILocation(line: 2411, column: 17, scope: !4910)
!4915 = !DILocation(line: 2411, column: 32, scope: !4910)
!4916 = !DILocation(line: 2411, column: 15, scope: !4910)
!4917 = !DILocation(line: 2411, column: 9, scope: !4910)
!4918 = !DILocation(line: 2413, column: 17, scope: !4910)
!4919 = !DILocation(line: 2413, column: 19, scope: !4910)
!4920 = !DILocation(line: 2413, column: 15, scope: !4910)
!4921 = !DILocation(line: 2414, column: 5, scope: !406)
!4922 = !DILocalVariable(name: "read_from_terminal", scope: !4923, file: !16, line: 2415, type: !239)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !16, line: 2414, column: 14)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !16, line: 2414, column: 5)
!4925 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2414, column: 5)
!4926 = !DILocation(line: 2415, column: 13, scope: !4923)
!4927 = !DILocalVariable(name: "read_from_sslcon", scope: !4923, file: !16, line: 2416, type: !239)
!4928 = !DILocation(line: 2416, column: 13, scope: !4923)
!4929 = !DILocation(line: 2418, column: 28, scope: !4923)
!4930 = !DILocation(line: 2419, column: 44, scope: !4923)
!4931 = !DILocation(line: 2419, column: 28, scope: !4923)
!4932 = !DILocation(line: 2420, column: 28, scope: !4923)
!4933 = !DILocation(line: 2420, column: 32, scope: !4934)
!4934 = !DILexicalBlockFile(scope: !4923, file: !16, discriminator: 1)
!4935 = !DILocation(line: 2420, column: 38, scope: !4934)
!4936 = !DILocation(line: 2420, column: 63, scope: !4937)
!4937 = !DILexicalBlockFile(scope: !4923, file: !16, discriminator: 2)
!4938 = !DILocation(line: 2420, column: 41, scope: !4937)
!4939 = !DILocation(line: 2420, column: 38, scope: !4937)
!4940 = !DILocation(line: 2420, column: 28, scope: !4941)
!4941 = !DILexicalBlockFile(scope: !4923, file: !16, discriminator: 3)
!4942 = !DILocation(line: 2420, column: 28, scope: !4943)
!4943 = !DILexicalBlockFile(scope: !4923, file: !16, discriminator: 4)
!4944 = !DILocation(line: 2419, column: 26, scope: !4934)
!4945 = !DILocation(line: 2422, column: 14, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 2422, column: 13)
!4947 = !DILocation(line: 2422, column: 13, scope: !4923)
!4948 = !DILocation(line: 2423, column: 12, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4946, file: !16, line: 2422, column: 32)
!4950 = distinct !{!4950, !4948}
!4951 = !DILocalVariable(name: "__d0", scope: !4952, file: !16, line: 2423, type: !239)
!4952 = distinct !DILexicalBlock(scope: !4949, file: !16, line: 2423, column: 15)
!4953 = !DILocation(line: 2423, column: 21, scope: !4952)
!4954 = !DILocalVariable(name: "__d1", scope: !4952, file: !16, line: 2423, type: !239)
!4955 = !DILocation(line: 2423, column: 27, scope: !4952)
!4956 = !DILocation(line: 2423, column: 15, scope: !4957)
!4957 = !DILexicalBlockFile(scope: !4952, file: !16, discriminator: 1)
!4958 = !DILocation(line: 2423, column: 164, scope: !4957)
!4959 = !DILocation(line: 2423, column: 33, scope: !4957)
!4960 = !{i32 984162}
!4961 = !DILocation(line: 2423, column: 44, scope: !4957)
!4962 = !DILocation(line: 2425, column: 12, scope: !4949)
!4963 = !DILocation(line: 2425, column: 14, scope: !4949)
!4964 = !DILocation(line: 2425, column: 70, scope: !4949)
!4965 = !DILocation(line: 2425, column: 12, scope: !4966)
!4966 = !DILexicalBlockFile(scope: !4949, file: !16, discriminator: 1)
!4967 = !DILocation(line: 2425, column: 21, scope: !4949)
!4968 = !DILocation(line: 2425, column: 15, scope: !4949)
!4969 = !DILocation(line: 2425, column: 49, scope: !4949)
!4970 = !DILocation(line: 2427, column: 12, scope: !4949)
!4971 = !DILocation(line: 2427, column: 14, scope: !4949)
!4972 = !DILocation(line: 2427, column: 70, scope: !4949)
!4973 = !DILocation(line: 2427, column: 21, scope: !4949)
!4974 = !DILocation(line: 2427, column: 15, scope: !4949)
!4975 = !DILocation(line: 2427, column: 49, scope: !4949)
!4976 = !DILocation(line: 2450, column: 29, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4949, file: !16, line: 2450, column: 17)
!4978 = !DILocation(line: 2450, column: 17, scope: !4977)
!4979 = !DILocation(line: 2450, column: 34, scope: !4977)
!4980 = !DILocation(line: 2450, column: 46, scope: !4981)
!4981 = !DILexicalBlockFile(scope: !4977, file: !16, discriminator: 1)
!4982 = !DILocation(line: 2450, column: 56, scope: !4981)
!4983 = !DILocation(line: 2450, column: 37, scope: !4981)
!4984 = !DILocation(line: 2450, column: 17, scope: !4981)
!4985 = !DILocation(line: 2451, column: 26, scope: !4977)
!4986 = !DILocation(line: 2451, column: 17, scope: !4977)
!4987 = !DILocation(line: 2453, column: 26, scope: !4977)
!4988 = !DILocation(line: 2455, column: 24, scope: !4949)
!4989 = !DILocation(line: 2455, column: 31, scope: !4949)
!4990 = !DILocation(line: 2455, column: 60, scope: !4949)
!4991 = !DILocation(line: 2455, column: 17, scope: !4949)
!4992 = !DILocation(line: 2455, column: 15, scope: !4949)
!4993 = !DILocation(line: 2457, column: 30, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4949, file: !16, line: 2457, column: 17)
!4995 = !DILocation(line: 2457, column: 18, scope: !4994)
!4996 = !DILocation(line: 2457, column: 36, scope: !4994)
!4997 = !DILocation(line: 2457, column: 48, scope: !4998)
!4998 = !DILexicalBlockFile(scope: !4994, file: !16, discriminator: 1)
!4999 = !DILocation(line: 2457, column: 39, scope: !4998)
!5000 = !DILocation(line: 2457, column: 40, scope: !4998)
!5001 = !DILocation(line: 2457, column: 17, scope: !4998)
!5002 = !DILocation(line: 2458, column: 28, scope: !4994)
!5003 = !DILocation(line: 2458, column: 17, scope: !4994)
!5004 = !DILocation(line: 2460, column: 17, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4949, file: !16, line: 2460, column: 17)
!5006 = !DILocation(line: 2460, column: 19, scope: !5005)
!5007 = !DILocation(line: 2460, column: 17, scope: !4949)
!5008 = !DILocation(line: 2461, column: 17, scope: !5005)
!5009 = distinct !{!5009, !4921}
!5010 = !DILocation(line: 2462, column: 16, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4949, file: !16, line: 2462, column: 16)
!5012 = !DILocation(line: 2462, column: 18, scope: !5011)
!5013 = !DILocation(line: 2462, column: 19, scope: !5011)
!5014 = !DILocation(line: 2462, column: 16, scope: !5015)
!5015 = !DILexicalBlockFile(scope: !5011, file: !16, discriminator: 1)
!5016 = !DILocation(line: 2462, column: 73, scope: !5011)
!5017 = !DILocation(line: 2462, column: 53, scope: !5011)
!5018 = !DILocation(line: 2462, column: 55, scope: !5011)
!5019 = !DILocation(line: 2462, column: 16, scope: !4949)
!5020 = !DILocation(line: 2463, column: 36, scope: !5011)
!5021 = !DILocation(line: 2463, column: 17, scope: !5011)
!5022 = !DILocation(line: 2465, column: 16, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4949, file: !16, line: 2465, column: 16)
!5024 = !DILocation(line: 2465, column: 18, scope: !5023)
!5025 = !DILocation(line: 2465, column: 19, scope: !5023)
!5026 = !DILocation(line: 2465, column: 73, scope: !5023)
!5027 = !DILocation(line: 2465, column: 53, scope: !5023)
!5028 = !DILocation(line: 2465, column: 55, scope: !5023)
!5029 = !DILocation(line: 2465, column: 16, scope: !4949)
!5030 = !DILocation(line: 2466, column: 34, scope: !5023)
!5031 = !DILocation(line: 2466, column: 17, scope: !5023)
!5032 = !DILocation(line: 2467, column: 9, scope: !4949)
!5033 = !DILocation(line: 2468, column: 13, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 2468, column: 13)
!5035 = !DILocation(line: 2468, column: 13, scope: !4923)
!5036 = !DILocation(line: 2469, column: 17, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5038, file: !16, line: 2469, column: 17)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !16, line: 2468, column: 33)
!5039 = !DILocation(line: 2469, column: 17, scope: !5038)
!5040 = !DILocalVariable(name: "j", scope: !5041, file: !16, line: 2470, type: !239)
!5041 = distinct !DILexicalBlock(scope: !5037, file: !16, line: 2469, column: 25)
!5042 = !DILocation(line: 2470, column: 21, scope: !5041)
!5043 = !DILocalVariable(name: "lf_num", scope: !5041, file: !16, line: 2470, type: !239)
!5044 = !DILocation(line: 2470, column: 24, scope: !5041)
!5045 = !DILocation(line: 2472, column: 36, scope: !5041)
!5046 = !DILocation(line: 2472, column: 21, scope: !5041)
!5047 = !DILocation(line: 2472, column: 19, scope: !5041)
!5048 = !DILocation(line: 2473, column: 24, scope: !5041)
!5049 = !DILocation(line: 2475, column: 24, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5041, file: !16, line: 2475, column: 17)
!5051 = !DILocation(line: 2475, column: 22, scope: !5050)
!5052 = !DILocation(line: 2475, column: 29, scope: !5053)
!5053 = !DILexicalBlockFile(scope: !5054, file: !16, discriminator: 1)
!5054 = distinct !DILexicalBlock(scope: !5050, file: !16, line: 2475, column: 17)
!5055 = !DILocation(line: 2475, column: 33, scope: !5053)
!5056 = !DILocation(line: 2475, column: 31, scope: !5053)
!5057 = !DILocation(line: 2475, column: 17, scope: !5053)
!5058 = !DILocation(line: 2476, column: 29, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5054, file: !16, line: 2476, column: 25)
!5060 = !DILocation(line: 2476, column: 25, scope: !5059)
!5061 = !DILocation(line: 2476, column: 32, scope: !5059)
!5062 = !DILocation(line: 2476, column: 25, scope: !5054)
!5063 = !DILocation(line: 2477, column: 31, scope: !5059)
!5064 = !DILocation(line: 2477, column: 25, scope: !5059)
!5065 = !DILocation(line: 2476, column: 35, scope: !5066)
!5066 = !DILexicalBlockFile(scope: !5059, file: !16, discriminator: 1)
!5067 = !DILocation(line: 2475, column: 37, scope: !5068)
!5068 = !DILexicalBlockFile(scope: !5054, file: !16, discriminator: 2)
!5069 = !DILocation(line: 2475, column: 17, scope: !5068)
!5070 = distinct !{!5070, !5071}
!5071 = !DILocation(line: 2475, column: 17, scope: !5041)
!5072 = !DILocation(line: 2478, column: 26, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5041, file: !16, line: 2478, column: 17)
!5074 = !DILocation(line: 2478, column: 28, scope: !5073)
!5075 = !DILocation(line: 2478, column: 24, scope: !5073)
!5076 = !DILocation(line: 2478, column: 22, scope: !5073)
!5077 = !DILocation(line: 2478, column: 33, scope: !5078)
!5078 = !DILexicalBlockFile(scope: !5079, file: !16, discriminator: 1)
!5079 = distinct !DILexicalBlock(scope: !5073, file: !16, line: 2478, column: 17)
!5080 = !DILocation(line: 2478, column: 35, scope: !5078)
!5081 = !DILocation(line: 2478, column: 17, scope: !5078)
!5082 = !DILocation(line: 2479, column: 43, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5079, file: !16, line: 2478, column: 46)
!5084 = !DILocation(line: 2479, column: 39, scope: !5083)
!5085 = !DILocation(line: 2479, column: 25, scope: !5083)
!5086 = !DILocation(line: 2479, column: 29, scope: !5083)
!5087 = !DILocation(line: 2479, column: 27, scope: !5083)
!5088 = !DILocation(line: 2479, column: 21, scope: !5083)
!5089 = !DILocation(line: 2479, column: 37, scope: !5083)
!5090 = !DILocation(line: 2480, column: 29, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5083, file: !16, line: 2480, column: 25)
!5092 = !DILocation(line: 2480, column: 25, scope: !5091)
!5093 = !DILocation(line: 2480, column: 32, scope: !5091)
!5094 = !DILocation(line: 2480, column: 25, scope: !5083)
!5095 = !DILocation(line: 2481, column: 31, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5091, file: !16, line: 2480, column: 41)
!5097 = !DILocation(line: 2482, column: 26, scope: !5096)
!5098 = !DILocation(line: 2483, column: 29, scope: !5096)
!5099 = !DILocation(line: 2483, column: 33, scope: !5096)
!5100 = !DILocation(line: 2483, column: 31, scope: !5096)
!5101 = !DILocation(line: 2483, column: 25, scope: !5096)
!5102 = !DILocation(line: 2483, column: 41, scope: !5096)
!5103 = !DILocation(line: 2484, column: 21, scope: !5096)
!5104 = !DILocation(line: 2485, column: 17, scope: !5083)
!5105 = !DILocation(line: 2478, column: 42, scope: !5106)
!5106 = !DILexicalBlockFile(scope: !5079, file: !16, discriminator: 2)
!5107 = !DILocation(line: 2478, column: 17, scope: !5106)
!5108 = distinct !{!5108, !5109}
!5109 = !DILocation(line: 2478, column: 17, scope: !5041)
!5110 = !DILocation(line: 2487, column: 13, scope: !5041)
!5111 = !DILocation(line: 2488, column: 36, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5037, file: !16, line: 2487, column: 20)
!5113 = !DILocation(line: 2488, column: 21, scope: !5112)
!5114 = !DILocation(line: 2488, column: 19, scope: !5112)
!5115 = !DILocation(line: 2491, column: 18, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5038, file: !16, line: 2491, column: 17)
!5117 = !DILocation(line: 2491, column: 26, scope: !5116)
!5118 = !DILocation(line: 2491, column: 30, scope: !5119)
!5119 = !DILexicalBlockFile(scope: !5116, file: !16, discriminator: 1)
!5120 = !DILocation(line: 2491, column: 17, scope: !5119)
!5121 = !DILocation(line: 2492, column: 22, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2492, column: 21)
!5123 = distinct !DILexicalBlock(scope: !5116, file: !16, line: 2491, column: 39)
!5124 = !DILocation(line: 2492, column: 24, scope: !5122)
!5125 = !DILocation(line: 2492, column: 30, scope: !5122)
!5126 = !DILocation(line: 2492, column: 34, scope: !5127)
!5127 = !DILexicalBlockFile(scope: !5122, file: !16, discriminator: 1)
!5128 = !DILocation(line: 2492, column: 41, scope: !5127)
!5129 = !DILocation(line: 2492, column: 21, scope: !5127)
!5130 = !DILocation(line: 2493, column: 32, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5122, file: !16, line: 2492, column: 50)
!5132 = !DILocation(line: 2493, column: 21, scope: !5131)
!5133 = !DILocation(line: 2494, column: 41, scope: !5131)
!5134 = !DILocation(line: 2494, column: 32, scope: !5131)
!5135 = !DILocation(line: 2494, column: 27, scope: !5131)
!5136 = !DILocation(line: 2495, column: 37, scope: !5131)
!5137 = !DILocation(line: 2495, column: 21, scope: !5131)
!5138 = !DILocation(line: 2496, column: 21, scope: !5131)
!5139 = !DILocation(line: 2497, column: 25, scope: !5131)
!5140 = !DILocation(line: 2498, column: 21, scope: !5131)
!5141 = !DILocation(line: 2500, column: 22, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2500, column: 21)
!5143 = !DILocation(line: 2500, column: 24, scope: !5142)
!5144 = !DILocation(line: 2500, column: 30, scope: !5142)
!5145 = !DILocation(line: 2500, column: 34, scope: !5146)
!5146 = !DILexicalBlockFile(scope: !5142, file: !16, discriminator: 1)
!5147 = !DILocation(line: 2500, column: 41, scope: !5146)
!5148 = !DILocation(line: 2500, column: 21, scope: !5146)
!5149 = !DILocation(line: 2501, column: 32, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5142, file: !16, line: 2500, column: 50)
!5151 = !DILocation(line: 2501, column: 21, scope: !5150)
!5152 = !DILocation(line: 2502, column: 41, scope: !5150)
!5153 = !DILocation(line: 2502, column: 32, scope: !5150)
!5154 = !DILocation(line: 2502, column: 27, scope: !5150)
!5155 = !DILocation(line: 2503, column: 37, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5150, file: !16, line: 2503, column: 25)
!5157 = !DILocation(line: 2503, column: 25, scope: !5156)
!5158 = !DILocation(line: 2503, column: 42, scope: !5156)
!5159 = !DILocation(line: 2503, column: 25, scope: !5150)
!5160 = !DILocation(line: 2504, column: 41, scope: !5156)
!5161 = !DILocation(line: 2504, column: 25, scope: !5156)
!5162 = !DILocation(line: 2508, column: 21, scope: !5150)
!5163 = !DILocation(line: 2518, column: 22, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2518, column: 21)
!5165 = !DILocation(line: 2518, column: 29, scope: !5164)
!5166 = !DILocation(line: 2518, column: 37, scope: !5164)
!5167 = !DILocation(line: 2518, column: 42, scope: !5168)
!5168 = !DILexicalBlockFile(scope: !5164, file: !16, discriminator: 1)
!5169 = !DILocation(line: 2518, column: 49, scope: !5168)
!5170 = !DILocation(line: 2518, column: 58, scope: !5168)
!5171 = !DILocation(line: 2518, column: 62, scope: !5172)
!5172 = !DILexicalBlockFile(scope: !5164, file: !16, discriminator: 2)
!5173 = !DILocation(line: 2518, column: 69, scope: !5172)
!5174 = !DILocation(line: 2518, column: 21, scope: !5172)
!5175 = !DILocation(line: 2519, column: 37, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5164, file: !16, line: 2518, column: 80)
!5177 = !DILocation(line: 2519, column: 21, scope: !5176)
!5178 = !DILocation(line: 2520, column: 42, scope: !5176)
!5179 = !DILocation(line: 2520, column: 25, scope: !5176)
!5180 = !DILocation(line: 2520, column: 23, scope: !5176)
!5181 = !DILocation(line: 2521, column: 56, scope: !5176)
!5182 = !DILocation(line: 2521, column: 21, scope: !5176)
!5183 = !DILocation(line: 2522, column: 23, scope: !5176)
!5184 = !DILocation(line: 2523, column: 21, scope: !5176)
!5185 = !DILocation(line: 2525, column: 22, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2525, column: 21)
!5187 = !DILocation(line: 2525, column: 29, scope: !5186)
!5188 = !DILocation(line: 2525, column: 37, scope: !5186)
!5189 = !DILocation(line: 2525, column: 42, scope: !5190)
!5190 = !DILexicalBlockFile(scope: !5186, file: !16, discriminator: 1)
!5191 = !DILocation(line: 2525, column: 49, scope: !5190)
!5192 = !DILocation(line: 2525, column: 58, scope: !5190)
!5193 = !DILocation(line: 2525, column: 62, scope: !5194)
!5194 = !DILexicalBlockFile(scope: !5186, file: !16, discriminator: 2)
!5195 = !DILocation(line: 2525, column: 69, scope: !5194)
!5196 = !DILocation(line: 2525, column: 21, scope: !5194)
!5197 = !DILocation(line: 2526, column: 36, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5186, file: !16, line: 2525, column: 80)
!5199 = !DILocation(line: 2526, column: 21, scope: !5198)
!5200 = !DILocation(line: 2529, column: 37, scope: !5198)
!5201 = !DILocation(line: 2529, column: 21, scope: !5198)
!5202 = !DILocation(line: 2530, column: 42, scope: !5198)
!5203 = !DILocation(line: 2530, column: 25, scope: !5198)
!5204 = !DILocation(line: 2530, column: 23, scope: !5198)
!5205 = !DILocation(line: 2531, column: 56, scope: !5198)
!5206 = !DILocation(line: 2531, column: 21, scope: !5198)
!5207 = !DILocation(line: 2532, column: 23, scope: !5198)
!5208 = !DILocation(line: 2533, column: 21, scope: !5198)
!5209 = !DILocation(line: 2535, column: 22, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2535, column: 21)
!5211 = !DILocation(line: 2535, column: 29, scope: !5210)
!5212 = !DILocation(line: 2535, column: 36, scope: !5210)
!5213 = !DILocation(line: 2535, column: 39, scope: !5214)
!5214 = !DILexicalBlockFile(scope: !5210, file: !16, discriminator: 1)
!5215 = !DILocation(line: 2535, column: 46, scope: !5214)
!5216 = !DILocation(line: 2536, column: 25, scope: !5210)
!5217 = !DILocation(line: 2536, column: 30, scope: !5214)
!5218 = !DILocation(line: 2536, column: 37, scope: !5214)
!5219 = !DILocation(line: 2536, column: 46, scope: !5214)
!5220 = !DILocation(line: 2536, column: 50, scope: !5221)
!5221 = !DILexicalBlockFile(scope: !5210, file: !16, discriminator: 2)
!5222 = !DILocation(line: 2536, column: 57, scope: !5221)
!5223 = !DILocation(line: 2535, column: 21, scope: !5224)
!5224 = !DILexicalBlockFile(scope: !5123, file: !16, discriminator: 2)
!5225 = !DILocation(line: 2537, column: 36, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5210, file: !16, line: 2536, column: 68)
!5227 = !DILocation(line: 2537, column: 41, scope: !5226)
!5228 = !DILocation(line: 2537, column: 48, scope: !5226)
!5229 = !DILocation(line: 2537, column: 21, scope: !5226)
!5230 = !DILocation(line: 2540, column: 42, scope: !5226)
!5231 = !DILocation(line: 2540, column: 25, scope: !5226)
!5232 = !DILocation(line: 2540, column: 23, scope: !5226)
!5233 = !DILocation(line: 2541, column: 56, scope: !5226)
!5234 = !DILocation(line: 2541, column: 21, scope: !5226)
!5235 = !DILocation(line: 2542, column: 23, scope: !5226)
!5236 = !DILocation(line: 2543, column: 21, scope: !5226)
!5237 = !DILocation(line: 2545, column: 21, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2545, column: 21)
!5239 = !DILocation(line: 2545, column: 28, scope: !5238)
!5240 = !DILocation(line: 2545, column: 35, scope: !5238)
!5241 = !DILocation(line: 2545, column: 40, scope: !5242)
!5242 = !DILexicalBlockFile(scope: !5238, file: !16, discriminator: 1)
!5243 = !DILocation(line: 2545, column: 47, scope: !5242)
!5244 = !DILocation(line: 2545, column: 56, scope: !5242)
!5245 = !DILocation(line: 2545, column: 60, scope: !5246)
!5246 = !DILexicalBlockFile(scope: !5238, file: !16, discriminator: 2)
!5247 = !DILocation(line: 2545, column: 67, scope: !5246)
!5248 = !DILocation(line: 2545, column: 21, scope: !5246)
!5249 = !DILocation(line: 2546, column: 36, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5238, file: !16, line: 2545, column: 78)
!5251 = !DILocation(line: 2546, column: 21, scope: !5250)
!5252 = !DILocation(line: 2547, column: 58, scope: !5250)
!5253 = !DILocation(line: 2547, column: 25, scope: !5250)
!5254 = !DILocation(line: 2547, column: 23, scope: !5250)
!5255 = !DILocation(line: 2548, column: 25, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5250, file: !16, line: 2548, column: 25)
!5257 = !DILocation(line: 2548, column: 27, scope: !5256)
!5258 = !DILocation(line: 2548, column: 25, scope: !5250)
!5259 = !DILocation(line: 2549, column: 25, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5256, file: !16, line: 2548, column: 33)
!5261 = !DILocation(line: 2550, column: 42, scope: !5260)
!5262 = !DILocation(line: 2550, column: 25, scope: !5260)
!5263 = !DILocation(line: 2551, column: 21, scope: !5260)
!5264 = !DILocation(line: 2552, column: 46, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5256, file: !16, line: 2551, column: 28)
!5266 = !DILocation(line: 2552, column: 29, scope: !5265)
!5267 = !DILocation(line: 2552, column: 27, scope: !5265)
!5268 = !DILocation(line: 2553, column: 60, scope: !5265)
!5269 = !DILocation(line: 2553, column: 25, scope: !5265)
!5270 = !DILocation(line: 2554, column: 27, scope: !5265)
!5271 = !DILocation(line: 2556, column: 21, scope: !5250)
!5272 = !DILocation(line: 2558, column: 21, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2558, column: 21)
!5274 = !DILocation(line: 2558, column: 28, scope: !5273)
!5275 = !DILocation(line: 2558, column: 21, scope: !5123)
!5276 = !DILocation(line: 2560, column: 44, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5273, file: !16, line: 2558, column: 36)
!5278 = !DILocation(line: 2560, column: 31, scope: !5277)
!5279 = !DILocation(line: 2560, column: 50, scope: !5277)
!5280 = !DILocation(line: 2560, column: 62, scope: !5277)
!5281 = !DILocation(line: 2560, column: 55, scope: !5282)
!5282 = !DILexicalBlockFile(scope: !5277, file: !16, discriminator: 1)
!5283 = !DILocation(line: 2560, column: 55, scope: !5277)
!5284 = !DILocation(line: 2560, column: 21, scope: !5285)
!5285 = !DILexicalBlockFile(scope: !5277, file: !16, discriminator: 2)
!5286 = !DILocation(line: 2561, column: 17, scope: !5277)
!5287 = !DILocation(line: 2562, column: 21, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5123, file: !16, line: 2562, column: 21)
!5289 = !DILocation(line: 2562, column: 28, scope: !5288)
!5290 = !DILocation(line: 2562, column: 21, scope: !5123)
!5291 = !DILocation(line: 2563, column: 33, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5288, file: !16, line: 2562, column: 36)
!5293 = !DILocation(line: 2563, column: 60, scope: !5292)
!5294 = !DILocation(line: 2563, column: 44, scope: !5292)
!5295 = !DILocation(line: 2563, column: 21, scope: !5296)
!5296 = !DILexicalBlockFile(scope: !5292, file: !16, discriminator: 1)
!5297 = !DILocation(line: 2564, column: 17, scope: !5292)
!5298 = !DILocation(line: 2565, column: 13, scope: !5123)
!5299 = !DILocation(line: 2569, column: 19, scope: !5038)
!5300 = !DILocation(line: 2569, column: 15, scope: !5038)
!5301 = !DILocation(line: 2570, column: 13, scope: !5038)
!5302 = !DILocation(line: 2579, column: 31, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5304, file: !16, line: 2570, column: 22)
!5304 = distinct !DILexicalBlock(scope: !5305, file: !16, line: 2570, column: 13)
!5305 = distinct !DILexicalBlock(scope: !5038, file: !16, line: 2570, column: 13)
!5306 = !DILocation(line: 2579, column: 42, scope: !5303)
!5307 = !DILocation(line: 2579, column: 38, scope: !5303)
!5308 = !DILocation(line: 2579, column: 61, scope: !5303)
!5309 = !DILocation(line: 2579, column: 21, scope: !5303)
!5310 = !DILocation(line: 2579, column: 19, scope: !5303)
!5311 = !DILocation(line: 2581, column: 17, scope: !5303)
!5312 = !DILocation(line: 2581, column: 38, scope: !5313)
!5313 = !DILexicalBlockFile(scope: !5303, file: !16, discriminator: 1)
!5314 = !DILocation(line: 2581, column: 43, scope: !5313)
!5315 = !DILocation(line: 2581, column: 24, scope: !5313)
!5316 = !DILocation(line: 2581, column: 46, scope: !5313)
!5317 = !DILocation(line: 2581, column: 17, scope: !5313)
!5318 = !DILocation(line: 2582, column: 32, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5303, file: !16, line: 2581, column: 52)
!5320 = !DILocation(line: 2582, column: 21, scope: !5319)
!5321 = !DILocation(line: 2583, column: 57, scope: !5319)
!5322 = !DILocation(line: 2583, column: 21, scope: !5319)
!5323 = !DILocation(line: 2585, column: 66, scope: !5319)
!5324 = !DILocation(line: 2586, column: 66, scope: !5319)
!5325 = !DILocation(line: 2585, column: 25, scope: !5319)
!5326 = !DILocation(line: 2584, column: 44, scope: !5319)
!5327 = !DILocation(line: 2587, column: 43, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5319, file: !16, line: 2587, column: 25)
!5329 = !DILocation(line: 2587, column: 25, scope: !5328)
!5330 = !DILocation(line: 2587, column: 25, scope: !5319)
!5331 = !DILocation(line: 2588, column: 36, scope: !5328)
!5332 = !DILocation(line: 2589, column: 54, scope: !5328)
!5333 = !DILocation(line: 2589, column: 60, scope: !5328)
!5334 = !DILocation(line: 2588, column: 25, scope: !5328)
!5335 = !DILocation(line: 2591, column: 36, scope: !5328)
!5336 = !DILocation(line: 2591, column: 25, scope: !5328)
!5337 = !DILocation(line: 2592, column: 35, scope: !5319)
!5338 = !DILocation(line: 2592, column: 46, scope: !5319)
!5339 = !DILocation(line: 2592, column: 42, scope: !5319)
!5340 = !DILocation(line: 2592, column: 65, scope: !5319)
!5341 = !DILocation(line: 2592, column: 25, scope: !5319)
!5342 = !DILocation(line: 2592, column: 23, scope: !5319)
!5343 = !DILocation(line: 2581, column: 17, scope: !5344)
!5344 = !DILexicalBlockFile(scope: !5303, file: !16, discriminator: 2)
!5345 = distinct !{!5345, !5311}
!5346 = !DILocation(line: 2595, column: 39, scope: !5303)
!5347 = !DILocation(line: 2595, column: 44, scope: !5303)
!5348 = !DILocation(line: 2595, column: 25, scope: !5303)
!5349 = !DILocation(line: 2595, column: 17, scope: !5303)
!5350 = !DILocation(line: 2597, column: 21, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5303, file: !16, line: 2595, column: 48)
!5352 = !DILocation(line: 2599, column: 32, scope: !5351)
!5353 = !DILocation(line: 2599, column: 21, scope: !5351)
!5354 = !DILocation(line: 2600, column: 41, scope: !5351)
!5355 = !DILocation(line: 2600, column: 32, scope: !5351)
!5356 = !DILocation(line: 2600, column: 27, scope: !5351)
!5357 = !DILocation(line: 2601, column: 36, scope: !5351)
!5358 = !DILocation(line: 2601, column: 21, scope: !5351)
!5359 = !DILocation(line: 2602, column: 21, scope: !5351)
!5360 = !DILocation(line: 2606, column: 32, scope: !5351)
!5361 = !DILocation(line: 2606, column: 21, scope: !5351)
!5362 = !DILocation(line: 2607, column: 41, scope: !5351)
!5363 = !DILocation(line: 2607, column: 32, scope: !5351)
!5364 = !DILocation(line: 2607, column: 27, scope: !5351)
!5365 = !DILocation(line: 2608, column: 21, scope: !5351)
!5366 = !DILocation(line: 2615, column: 32, scope: !5351)
!5367 = !DILocation(line: 2615, column: 21, scope: !5351)
!5368 = !DILocation(line: 2616, column: 41, scope: !5351)
!5369 = !DILocation(line: 2616, column: 32, scope: !5351)
!5370 = !DILocation(line: 2616, column: 27, scope: !5351)
!5371 = !DILocation(line: 2617, column: 38, scope: !5351)
!5372 = !DILocation(line: 2617, column: 21, scope: !5351)
!5373 = !DILocation(line: 2618, column: 25, scope: !5351)
!5374 = !DILocation(line: 2619, column: 21, scope: !5351)
!5375 = !DILocation(line: 2622, column: 32, scope: !5351)
!5376 = !DILocation(line: 2622, column: 21, scope: !5351)
!5377 = !DILocation(line: 2623, column: 41, scope: !5351)
!5378 = !DILocation(line: 2623, column: 32, scope: !5351)
!5379 = !DILocation(line: 2623, column: 27, scope: !5351)
!5380 = !DILocation(line: 2624, column: 25, scope: !5351)
!5381 = !DILocation(line: 2625, column: 21, scope: !5351)
!5382 = !DILocation(line: 2627, column: 21, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5303, file: !16, line: 2627, column: 21)
!5384 = !DILocation(line: 2627, column: 23, scope: !5383)
!5385 = !DILocation(line: 2627, column: 21, scope: !5303)
!5386 = !DILocation(line: 2628, column: 26, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5383, file: !16, line: 2627, column: 28)
!5388 = !DILocation(line: 2628, column: 23, scope: !5387)
!5389 = !DILocation(line: 2629, column: 26, scope: !5387)
!5390 = !DILocation(line: 2629, column: 23, scope: !5387)
!5391 = !DILocation(line: 2630, column: 17, scope: !5387)
!5392 = !DILocation(line: 2631, column: 21, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5303, file: !16, line: 2631, column: 21)
!5394 = !DILocation(line: 2631, column: 23, scope: !5393)
!5395 = !DILocation(line: 2631, column: 21, scope: !5303)
!5396 = !DILocation(line: 2632, column: 21, scope: !5393)
!5397 = !DILocation(line: 2570, column: 13, scope: !5398)
!5398 = !DILexicalBlockFile(scope: !5304, file: !16, discriminator: 1)
!5399 = distinct !{!5399, !5301}
!5400 = !DILocation(line: 2634, column: 9, scope: !5038)
!5401 = !DILocation(line: 2635, column: 13, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !4923, file: !16, line: 2635, column: 13)
!5403 = !DILocation(line: 2635, column: 13, scope: !4923)
!5404 = !DILocation(line: 2641, column: 19, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !16, line: 2641, column: 17)
!5406 = distinct !DILexicalBlock(scope: !5402, file: !16, line: 2635, column: 31)
!5407 = !DILocation(line: 2641, column: 25, scope: !5405)
!5408 = !DILocation(line: 2641, column: 51, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !5405, file: !16, discriminator: 1)
!5410 = !DILocation(line: 2641, column: 29, scope: !5409)
!5411 = !DILocation(line: 2642, column: 21, scope: !5405)
!5412 = !DILocation(line: 2642, column: 46, scope: !5409)
!5413 = !DILocation(line: 2642, column: 25, scope: !5409)
!5414 = !DILocation(line: 2641, column: 17, scope: !5415)
!5415 = !DILexicalBlockFile(scope: !5406, file: !16, discriminator: 2)
!5416 = !DILocation(line: 2643, column: 41, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5405, file: !16, line: 2642, column: 52)
!5418 = !DILocation(line: 2643, column: 21, scope: !5417)
!5419 = !DILocation(line: 2643, column: 19, scope: !5417)
!5420 = !DILocation(line: 2645, column: 21, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5417, file: !16, line: 2645, column: 21)
!5422 = !DILocation(line: 2645, column: 23, scope: !5421)
!5423 = !DILocation(line: 2645, column: 21, scope: !5417)
!5424 = !DILocation(line: 2646, column: 25, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5421, file: !16, line: 2645, column: 28)
!5426 = !DILocation(line: 2647, column: 21, scope: !5425)
!5427 = !DILocation(line: 2648, column: 28, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5421, file: !16, line: 2648, column: 28)
!5429 = !DILocation(line: 2648, column: 30, scope: !5428)
!5430 = !DILocation(line: 2648, column: 28, scope: !5421)
!5431 = !DILocation(line: 2649, column: 25, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5428, file: !16, line: 2648, column: 36)
!5433 = !DILocation(line: 2650, column: 21, scope: !5432)
!5434 = !DILocation(line: 2652, column: 13, scope: !5417)
!5435 = !DILocation(line: 2652, column: 20, scope: !5409)
!5436 = !DILocation(line: 2654, column: 30, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5405, file: !16, line: 2652, column: 20)
!5438 = !DILocation(line: 2654, column: 43, scope: !5437)
!5439 = !DILocation(line: 2654, column: 21, scope: !5437)
!5440 = !DILocation(line: 2654, column: 19, scope: !5437)
!5441 = !DILocation(line: 2656, column: 17, scope: !5437)
!5442 = !DILocation(line: 2656, column: 38, scope: !5443)
!5443 = !DILexicalBlockFile(scope: !5437, file: !16, discriminator: 1)
!5444 = !DILocation(line: 2656, column: 43, scope: !5443)
!5445 = !DILocation(line: 2656, column: 24, scope: !5443)
!5446 = !DILocation(line: 2656, column: 46, scope: !5443)
!5447 = !DILocation(line: 2656, column: 17, scope: !5443)
!5448 = !DILocation(line: 2657, column: 32, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5437, file: !16, line: 2656, column: 52)
!5450 = !DILocation(line: 2657, column: 21, scope: !5449)
!5451 = !DILocation(line: 2658, column: 57, scope: !5449)
!5452 = !DILocation(line: 2658, column: 21, scope: !5449)
!5453 = !DILocation(line: 2660, column: 66, scope: !5449)
!5454 = !DILocation(line: 2661, column: 66, scope: !5449)
!5455 = !DILocation(line: 2660, column: 25, scope: !5449)
!5456 = !DILocation(line: 2659, column: 44, scope: !5449)
!5457 = !DILocation(line: 2662, column: 43, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5449, file: !16, line: 2662, column: 25)
!5459 = !DILocation(line: 2662, column: 25, scope: !5458)
!5460 = !DILocation(line: 2662, column: 25, scope: !5449)
!5461 = !DILocation(line: 2663, column: 36, scope: !5458)
!5462 = !DILocation(line: 2664, column: 54, scope: !5458)
!5463 = !DILocation(line: 2664, column: 60, scope: !5458)
!5464 = !DILocation(line: 2663, column: 25, scope: !5458)
!5465 = !DILocation(line: 2666, column: 36, scope: !5458)
!5466 = !DILocation(line: 2666, column: 25, scope: !5458)
!5467 = !DILocation(line: 2667, column: 34, scope: !5449)
!5468 = !DILocation(line: 2667, column: 47, scope: !5449)
!5469 = !DILocation(line: 2667, column: 25, scope: !5449)
!5470 = !DILocation(line: 2667, column: 23, scope: !5449)
!5471 = !DILocation(line: 2656, column: 17, scope: !5472)
!5472 = !DILexicalBlockFile(scope: !5437, file: !16, discriminator: 2)
!5473 = distinct !{!5473, !5441}
!5474 = !DILocation(line: 2670, column: 39, scope: !5437)
!5475 = !DILocation(line: 2670, column: 44, scope: !5437)
!5476 = !DILocation(line: 2670, column: 25, scope: !5437)
!5477 = !DILocation(line: 2670, column: 17, scope: !5437)
!5478 = !DILocation(line: 2675, column: 38, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5437, file: !16, line: 2670, column: 48)
!5480 = !DILocation(line: 2675, column: 57, scope: !5479)
!5481 = !DILocation(line: 2675, column: 21, scope: !5479)
!5482 = !DILocation(line: 2676, column: 41, scope: !5479)
!5483 = !DILocation(line: 2676, column: 32, scope: !5479)
!5484 = !DILocation(line: 2676, column: 27, scope: !5479)
!5485 = !DILocation(line: 2677, column: 41, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5479, file: !16, line: 2677, column: 25)
!5487 = !DILocation(line: 2677, column: 25, scope: !5486)
!5488 = !DILocation(line: 2677, column: 25, scope: !5479)
!5489 = !DILocation(line: 2678, column: 25, scope: !5486)
!5490 = !DILocation(line: 2679, column: 21, scope: !5479)
!5491 = !DILocation(line: 2681, column: 32, scope: !5479)
!5492 = !DILocation(line: 2681, column: 21, scope: !5479)
!5493 = !DILocation(line: 2682, column: 41, scope: !5479)
!5494 = !DILocation(line: 2682, column: 32, scope: !5479)
!5495 = !DILocation(line: 2682, column: 27, scope: !5479)
!5496 = !DILocation(line: 2683, column: 36, scope: !5479)
!5497 = !DILocation(line: 2683, column: 21, scope: !5479)
!5498 = !DILocation(line: 2684, column: 21, scope: !5479)
!5499 = !DILocation(line: 2687, column: 32, scope: !5479)
!5500 = !DILocation(line: 2687, column: 21, scope: !5479)
!5501 = !DILocation(line: 2688, column: 41, scope: !5479)
!5502 = !DILocation(line: 2688, column: 32, scope: !5479)
!5503 = !DILocation(line: 2688, column: 27, scope: !5479)
!5504 = !DILocation(line: 2689, column: 21, scope: !5479)
!5505 = !DILocation(line: 2696, column: 32, scope: !5479)
!5506 = !DILocation(line: 2696, column: 21, scope: !5479)
!5507 = !DILocation(line: 2697, column: 41, scope: !5479)
!5508 = !DILocation(line: 2697, column: 32, scope: !5479)
!5509 = !DILocation(line: 2697, column: 27, scope: !5479)
!5510 = !DILocation(line: 2698, column: 38, scope: !5479)
!5511 = !DILocation(line: 2698, column: 21, scope: !5479)
!5512 = !DILocation(line: 2699, column: 25, scope: !5479)
!5513 = !DILocation(line: 2700, column: 21, scope: !5479)
!5514 = !DILocation(line: 2702, column: 32, scope: !5479)
!5515 = !DILocation(line: 2702, column: 21, scope: !5479)
!5516 = !DILocation(line: 2703, column: 41, scope: !5479)
!5517 = !DILocation(line: 2703, column: 32, scope: !5479)
!5518 = !DILocation(line: 2703, column: 27, scope: !5479)
!5519 = !DILocation(line: 2704, column: 25, scope: !5479)
!5520 = !DILocation(line: 2705, column: 21, scope: !5479)
!5521 = !DILocation(line: 2708, column: 9, scope: !5406)
!5522 = !DILocation(line: 2414, column: 5, scope: !5523)
!5523 = !DILexicalBlockFile(scope: !4924, file: !16, discriminator: 1)
!5524 = !DILocation(line: 2711, column: 9, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !406, file: !16, line: 2711, column: 9)
!5526 = !DILocation(line: 2711, column: 13, scope: !5525)
!5527 = !DILocation(line: 2711, column: 9, scope: !406)
!5528 = !DILocation(line: 2712, column: 20, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5525, file: !16, line: 2711, column: 21)
!5530 = !DILocation(line: 2712, column: 9, scope: !5529)
!5531 = !DILocation(line: 2713, column: 26, scope: !5529)
!5532 = !DILocation(line: 2713, column: 9, scope: !5529)
!5533 = !DILocation(line: 2714, column: 18, scope: !5529)
!5534 = !DILocation(line: 2714, column: 9, scope: !5529)
!5535 = !DILocation(line: 2715, column: 5, scope: !5529)
!5536 = !DILocation(line: 2716, column: 16, scope: !406)
!5537 = !DILocation(line: 2716, column: 5, scope: !406)
!5538 = !DILocation(line: 2717, column: 23, scope: !406)
!5539 = !DILocation(line: 2717, column: 5, scope: !406)
!5540 = !DILocation(line: 2718, column: 12, scope: !406)
!5541 = !DILocation(line: 2718, column: 5, scope: !406)
!5542 = distinct !DISubprogram(name: "print_stats", scope: !16, file: !16, line: 2203, type: !5543, isLocal: true, isDefinition: true, scopeLine: 2204, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{null, !265, !362}
!5545 = !DILocalVariable(name: "bio", arg: 1, scope: !5542, file: !16, line: 2203, type: !265)
!5546 = !DILocation(line: 2203, column: 30, scope: !5542)
!5547 = !DILocalVariable(name: "ssl_ctx", arg: 2, scope: !5542, file: !16, line: 2203, type: !362)
!5548 = !DILocation(line: 2203, column: 44, scope: !5542)
!5549 = !DILocation(line: 2205, column: 16, scope: !5542)
!5550 = !DILocation(line: 2206, column: 29, scope: !5542)
!5551 = !DILocation(line: 2206, column: 16, scope: !5542)
!5552 = !DILocation(line: 2205, column: 5, scope: !5542)
!5553 = !DILocation(line: 2207, column: 16, scope: !5542)
!5554 = !DILocation(line: 2208, column: 29, scope: !5542)
!5555 = !DILocation(line: 2208, column: 16, scope: !5542)
!5556 = !DILocation(line: 2207, column: 5, scope: !5542)
!5557 = !DILocation(line: 2209, column: 16, scope: !5542)
!5558 = !DILocation(line: 2210, column: 29, scope: !5542)
!5559 = !DILocation(line: 2210, column: 16, scope: !5542)
!5560 = !DILocation(line: 2209, column: 5, scope: !5542)
!5561 = !DILocation(line: 2211, column: 16, scope: !5542)
!5562 = !DILocation(line: 2212, column: 29, scope: !5542)
!5563 = !DILocation(line: 2212, column: 16, scope: !5542)
!5564 = !DILocation(line: 2211, column: 5, scope: !5542)
!5565 = !DILocation(line: 2213, column: 16, scope: !5542)
!5566 = !DILocation(line: 2214, column: 29, scope: !5542)
!5567 = !DILocation(line: 2214, column: 16, scope: !5542)
!5568 = !DILocation(line: 2213, column: 5, scope: !5542)
!5569 = !DILocation(line: 2215, column: 16, scope: !5542)
!5570 = !DILocation(line: 2216, column: 29, scope: !5542)
!5571 = !DILocation(line: 2216, column: 16, scope: !5542)
!5572 = !DILocation(line: 2215, column: 5, scope: !5542)
!5573 = !DILocation(line: 2217, column: 16, scope: !5542)
!5574 = !DILocation(line: 2218, column: 29, scope: !5542)
!5575 = !DILocation(line: 2218, column: 16, scope: !5542)
!5576 = !DILocation(line: 2217, column: 5, scope: !5542)
!5577 = !DILocation(line: 2219, column: 16, scope: !5542)
!5578 = !DILocation(line: 2219, column: 63, scope: !5542)
!5579 = !DILocation(line: 2219, column: 50, scope: !5542)
!5580 = !DILocation(line: 2219, column: 5, scope: !5581)
!5581 = !DILexicalBlockFile(scope: !5542, file: !16, discriminator: 1)
!5582 = !DILocation(line: 2220, column: 16, scope: !5542)
!5583 = !DILocation(line: 2221, column: 29, scope: !5542)
!5584 = !DILocation(line: 2221, column: 16, scope: !5542)
!5585 = !DILocation(line: 2220, column: 5, scope: !5542)
!5586 = !DILocation(line: 2222, column: 16, scope: !5542)
!5587 = !DILocation(line: 2223, column: 29, scope: !5542)
!5588 = !DILocation(line: 2223, column: 16, scope: !5542)
!5589 = !DILocation(line: 2222, column: 5, scope: !5542)
!5590 = !DILocation(line: 2224, column: 16, scope: !5542)
!5591 = !DILocation(line: 2225, column: 29, scope: !5542)
!5592 = !DILocation(line: 2225, column: 16, scope: !5542)
!5593 = !DILocation(line: 2224, column: 5, scope: !5542)
!5594 = !DILocation(line: 2226, column: 16, scope: !5542)
!5595 = !DILocation(line: 2227, column: 29, scope: !5542)
!5596 = !DILocation(line: 2227, column: 16, scope: !5542)
!5597 = !DILocation(line: 2228, column: 29, scope: !5542)
!5598 = !DILocation(line: 2228, column: 16, scope: !5542)
!5599 = !DILocation(line: 2226, column: 5, scope: !5542)
!5600 = !DILocation(line: 2229, column: 1, scope: !5542)
!5601 = distinct !DISubprogram(name: "sk_X509_CRL_pop_free", scope: !257, file: !257, line: 228, type: !5602, isLocal: true, isDefinition: true, scopeLine: 228, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{null, !255, !5604}
!5604 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_X509_CRL_freefunc", file: !257, line: 228, baseType: !5605)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64, align: 64)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{null, !1565}
!5608 = !DILocalVariable(name: "sk", arg: 1, scope: !5601, file: !257, line: 228, type: !255)
!5609 = !DILocation(line: 228, column: 2674, scope: !5601)
!5610 = !DILocalVariable(name: "freefunc", arg: 2, scope: !5601, file: !257, line: 228, type: !5604)
!5611 = !DILocation(line: 228, column: 2699, scope: !5601)
!5612 = !DILocation(line: 228, column: 2748, scope: !5601)
!5613 = !DILocation(line: 228, column: 2731, scope: !5601)
!5614 = !DILocation(line: 228, column: 2773, scope: !5601)
!5615 = !DILocation(line: 228, column: 2752, scope: !5601)
!5616 = !DILocation(line: 228, column: 2711, scope: !5601)
!5617 = !DILocation(line: 228, column: 2784, scope: !5601)
!5618 = distinct !DISubprogram(name: "sk_X509_pop_free", scope: !257, file: !257, line: 99, type: !5619, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{null, !468, !5621}
!5621 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_X509_freefunc", file: !257, line: 99, baseType: !5622)
!5622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5623, size: 64, align: 64)
!5623 = !DISubroutineType(types: !5624)
!5624 = !{null, !476}
!5625 = !DILocalVariable(name: "sk", arg: 1, scope: !5618, file: !257, line: 99, type: !468)
!5626 = !DILocation(line: 99, column: 2446, scope: !5618)
!5627 = !DILocalVariable(name: "freefunc", arg: 2, scope: !5618, file: !257, line: 99, type: !5621)
!5628 = !DILocation(line: 99, column: 2467, scope: !5618)
!5629 = !DILocation(line: 99, column: 2516, scope: !5618)
!5630 = !DILocation(line: 99, column: 2499, scope: !5618)
!5631 = !DILocation(line: 99, column: 2541, scope: !5618)
!5632 = !DILocation(line: 99, column: 2520, scope: !5618)
!5633 = !DILocation(line: 99, column: 2479, scope: !5618)
!5634 = !DILocation(line: 99, column: 2552, scope: !5618)
!5635 = distinct !DISubprogram(name: "free_sessions", scope: !16, file: !16, line: 3623, type: !244, isLocal: true, isDefinition: true, scopeLine: 3624, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5636 = !DILocalVariable(name: "sess", scope: !5635, file: !16, line: 3625, type: !414)
!5637 = !DILocation(line: 3625, column: 25, scope: !5635)
!5638 = !DILocalVariable(name: "tsess", scope: !5635, file: !16, line: 3625, type: !414)
!5639 = !DILocation(line: 3625, column: 32, scope: !5635)
!5640 = !DILocation(line: 3626, column: 17, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5635, file: !16, line: 3626, column: 5)
!5642 = !DILocation(line: 3626, column: 15, scope: !5641)
!5643 = !DILocation(line: 3626, column: 10, scope: !5641)
!5644 = !DILocation(line: 3626, column: 24, scope: !5645)
!5645 = !DILexicalBlockFile(scope: !5646, file: !16, discriminator: 1)
!5646 = distinct !DILexicalBlock(scope: !5641, file: !16, line: 3626, column: 5)
!5647 = !DILocation(line: 3626, column: 5, scope: !5645)
!5648 = !DILocation(line: 3627, column: 21, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5646, file: !16, line: 3626, column: 31)
!5650 = !DILocation(line: 3627, column: 27, scope: !5649)
!5651 = !DILocation(line: 3627, column: 9, scope: !5649)
!5652 = !DILocation(line: 3628, column: 21, scope: !5649)
!5653 = !DILocation(line: 3628, column: 27, scope: !5649)
!5654 = !DILocation(line: 3628, column: 9, scope: !5649)
!5655 = !DILocation(line: 3629, column: 17, scope: !5649)
!5656 = !DILocation(line: 3629, column: 15, scope: !5649)
!5657 = !DILocation(line: 3630, column: 16, scope: !5649)
!5658 = !DILocation(line: 3630, column: 22, scope: !5649)
!5659 = !DILocation(line: 3630, column: 14, scope: !5649)
!5660 = !DILocation(line: 3631, column: 21, scope: !5649)
!5661 = !DILocation(line: 3631, column: 9, scope: !5649)
!5662 = !DILocation(line: 3626, column: 5, scope: !5663)
!5663 = !DILexicalBlockFile(scope: !5646, file: !16, discriminator: 2)
!5664 = distinct !{!5664, !5665}
!5665 = !DILocation(line: 3626, column: 5, scope: !5635)
!5666 = !DILocation(line: 3633, column: 11, scope: !5635)
!5667 = !DILocation(line: 3634, column: 1, scope: !5635)
!5668 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_free", scope: !248, file: !248, line: 159, type: !5669, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{null, !246}
!5671 = !DILocalVariable(name: "sk", arg: 1, scope: !5668, file: !248, line: 159, type: !246)
!5672 = !DILocation(line: 159, column: 1482, scope: !5668)
!5673 = !DILocation(line: 159, column: 1521, scope: !5668)
!5674 = !DILocation(line: 159, column: 1504, scope: !5668)
!5675 = !DILocation(line: 159, column: 1488, scope: !5668)
!5676 = !DILocation(line: 159, column: 1526, scope: !5668)
!5677 = distinct !DISubprogram(name: "get_ocsp_resp_from_responder", scope: !16, file: !16, line: 511, type: !5678, isLocal: true, isDefinition: true, scopeLine: 513, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{!239, !2608, !3245, !5680}
!5680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64, align: 64)
!5681 = !DILocalVariable(name: "s", arg: 1, scope: !5677, file: !16, line: 511, type: !2608)
!5682 = !DILocation(line: 511, column: 46, scope: !5677)
!5683 = !DILocalVariable(name: "srctx", arg: 2, scope: !5677, file: !16, line: 511, type: !3245)
!5684 = !DILocation(line: 511, column: 66, scope: !5677)
!5685 = !DILocalVariable(name: "resp", arg: 3, scope: !5677, file: !16, line: 512, type: !5680)
!5686 = !DILocation(line: 512, column: 57, scope: !5677)
!5687 = !DILocalVariable(name: "host", scope: !5677, file: !16, line: 514, type: !241)
!5688 = !DILocation(line: 514, column: 11, scope: !5677)
!5689 = !DILocalVariable(name: "port", scope: !5677, file: !16, line: 514, type: !241)
!5690 = !DILocation(line: 514, column: 24, scope: !5677)
!5691 = !DILocalVariable(name: "path", scope: !5677, file: !16, line: 514, type: !241)
!5692 = !DILocation(line: 514, column: 38, scope: !5677)
!5693 = !DILocalVariable(name: "use_ssl", scope: !5677, file: !16, line: 515, type: !239)
!5694 = !DILocation(line: 515, column: 9, scope: !5677)
!5695 = !DILocalVariable(name: "aia", scope: !5677, file: !16, line: 516, type: !246)
!5696 = !DILocation(line: 516, column: 37, scope: !5677)
!5697 = !DILocalVariable(name: "x", scope: !5677, file: !16, line: 517, type: !476)
!5698 = !DILocation(line: 517, column: 11, scope: !5677)
!5699 = !DILocalVariable(name: "inctx", scope: !5677, file: !16, line: 518, type: !5700)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64, align: 64)
!5701 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_STORE_CTX", file: !267, line: 132, baseType: !5702)
!5702 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_store_ctx_st", file: !267, line: 132, flags: DIFlagFwdDecl)
!5703 = !DILocation(line: 518, column: 21, scope: !5677)
!5704 = !DILocalVariable(name: "obj", scope: !5677, file: !16, line: 519, type: !5705)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64, align: 64)
!5706 = !DIDerivedType(tag: DW_TAG_typedef, name: "X509_OBJECT", file: !267, line: 134, baseType: !5707)
!5707 = !DICompositeType(tag: DW_TAG_structure_type, name: "x509_object_st", file: !267, line: 134, flags: DIFlagFwdDecl)
!5708 = !DILocation(line: 519, column: 18, scope: !5677)
!5709 = !DILocalVariable(name: "req", scope: !5677, file: !16, line: 520, type: !5710)
!5710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5711, size: 64, align: 64)
!5711 = !DIDerivedType(tag: DW_TAG_typedef, name: "OCSP_REQUEST", file: !5712, line: 81, baseType: !5713)
!5712 = !DIFile(filename: "include/openssl/ocsp.h", directory: "/home/ubuntu_1604/Desktop/openssl_bcmake_outputs/[task]apps--openssl")
!5713 = !DICompositeType(tag: DW_TAG_structure_type, name: "ocsp_request_st", file: !5712, line: 81, flags: DIFlagFwdDecl)
!5714 = !DILocation(line: 520, column: 19, scope: !5677)
!5715 = !DILocalVariable(name: "id", scope: !5677, file: !16, line: 521, type: !5716)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64, align: 64)
!5717 = !DIDerivedType(tag: DW_TAG_typedef, name: "OCSP_CERTID", file: !5712, line: 71, baseType: !5718)
!5718 = !DICompositeType(tag: DW_TAG_structure_type, name: "ocsp_cert_id_st", file: !5712, line: 71, flags: DIFlagFwdDecl)
!5719 = !DILocation(line: 521, column: 18, scope: !5677)
!5720 = !DILocalVariable(name: "exts", scope: !5677, file: !16, line: 522, type: !5721)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64, align: 64)
!5722 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_st_X509_EXTENSION", file: !257, line: 83, flags: DIFlagFwdDecl)
!5723 = !DILocation(line: 522, column: 37, scope: !5677)
!5724 = !DILocalVariable(name: "ret", scope: !5677, file: !16, line: 523, type: !239)
!5725 = !DILocation(line: 523, column: 9, scope: !5677)
!5726 = !DILocalVariable(name: "i", scope: !5677, file: !16, line: 524, type: !239)
!5727 = !DILocation(line: 524, column: 9, scope: !5677)
!5728 = !DILocation(line: 527, column: 29, scope: !5677)
!5729 = !DILocation(line: 527, column: 9, scope: !5677)
!5730 = !DILocation(line: 527, column: 7, scope: !5677)
!5731 = !DILocation(line: 528, column: 26, scope: !5677)
!5732 = !DILocation(line: 528, column: 11, scope: !5677)
!5733 = !DILocation(line: 528, column: 9, scope: !5677)
!5734 = !DILocation(line: 529, column: 9, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 529, column: 9)
!5736 = !DILocation(line: 529, column: 13, scope: !5735)
!5737 = !DILocation(line: 529, column: 9, scope: !5677)
!5738 = !DILocation(line: 530, column: 53, scope: !5739)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !16, line: 530, column: 13)
!5740 = distinct !DILexicalBlock(scope: !5735, file: !16, line: 529, column: 21)
!5741 = !DILocation(line: 530, column: 29, scope: !5739)
!5742 = !DILocation(line: 530, column: 14, scope: !5743)
!5743 = !DILexicalBlockFile(scope: !5739, file: !16, discriminator: 1)
!5744 = !DILocation(line: 530, column: 14, scope: !5739)
!5745 = !DILocation(line: 530, column: 13, scope: !5740)
!5746 = !DILocation(line: 532, column: 22, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5739, file: !16, line: 531, column: 61)
!5748 = !DILocation(line: 532, column: 13, scope: !5747)
!5749 = !DILocation(line: 533, column: 13, scope: !5747)
!5750 = !DILocation(line: 535, column: 13, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5740, file: !16, line: 535, column: 13)
!5752 = !DILocation(line: 535, column: 20, scope: !5751)
!5753 = !DILocation(line: 535, column: 13, scope: !5740)
!5754 = !DILocation(line: 536, column: 24, scope: !5751)
!5755 = !DILocation(line: 537, column: 48, scope: !5751)
!5756 = !DILocation(line: 537, column: 24, scope: !5751)
!5757 = !DILocation(line: 536, column: 13, scope: !5751)
!5758 = !DILocation(line: 538, column: 5, scope: !5740)
!5759 = !DILocation(line: 539, column: 13, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5761, file: !16, line: 539, column: 13)
!5761 = distinct !DILexicalBlock(scope: !5735, file: !16, line: 538, column: 12)
!5762 = !DILocation(line: 539, column: 20, scope: !5760)
!5763 = !DILocation(line: 539, column: 25, scope: !5760)
!5764 = !DILocation(line: 539, column: 13, scope: !5761)
!5765 = !DILocation(line: 540, column: 22, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5760, file: !16, line: 539, column: 33)
!5767 = !DILocation(line: 540, column: 13, scope: !5766)
!5768 = !DILocation(line: 542, column: 13, scope: !5766)
!5769 = !DILocation(line: 544, column: 16, scope: !5761)
!5770 = !DILocation(line: 544, column: 23, scope: !5761)
!5771 = !DILocation(line: 544, column: 14, scope: !5761)
!5772 = !DILocation(line: 545, column: 16, scope: !5761)
!5773 = !DILocation(line: 545, column: 23, scope: !5761)
!5774 = !DILocation(line: 545, column: 14, scope: !5761)
!5775 = !DILocation(line: 546, column: 16, scope: !5761)
!5776 = !DILocation(line: 546, column: 23, scope: !5761)
!5777 = !DILocation(line: 546, column: 14, scope: !5761)
!5778 = !DILocation(line: 547, column: 19, scope: !5761)
!5779 = !DILocation(line: 547, column: 26, scope: !5761)
!5780 = !DILocation(line: 547, column: 17, scope: !5761)
!5781 = !DILocation(line: 550, column: 13, scope: !5677)
!5782 = !DILocation(line: 550, column: 11, scope: !5677)
!5783 = !DILocation(line: 551, column: 9, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 551, column: 9)
!5785 = !DILocation(line: 551, column: 15, scope: !5784)
!5786 = !DILocation(line: 551, column: 9, scope: !5677)
!5787 = !DILocation(line: 552, column: 9, scope: !5784)
!5788 = !DILocation(line: 553, column: 30, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 553, column: 9)
!5790 = !DILocation(line: 554, column: 69, scope: !5789)
!5791 = !DILocation(line: 554, column: 53, scope: !5789)
!5792 = !DILocation(line: 554, column: 30, scope: !5793)
!5793 = !DILexicalBlockFile(scope: !5789, file: !16, discriminator: 1)
!5794 = !DILocation(line: 553, column: 10, scope: !5789)
!5795 = !DILocation(line: 553, column: 9, scope: !5677)
!5796 = !DILocation(line: 556, column: 9, scope: !5789)
!5797 = !DILocation(line: 557, column: 45, scope: !5677)
!5798 = !DILocation(line: 558, column: 66, scope: !5677)
!5799 = !DILocation(line: 558, column: 45, scope: !5677)
!5800 = !DILocation(line: 557, column: 11, scope: !5677)
!5801 = !DILocation(line: 557, column: 9, scope: !5677)
!5802 = !DILocation(line: 559, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 559, column: 9)
!5804 = !DILocation(line: 559, column: 13, scope: !5803)
!5805 = !DILocation(line: 559, column: 9, scope: !5677)
!5806 = !DILocation(line: 560, column: 18, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !16, line: 559, column: 21)
!5808 = !DILocation(line: 560, column: 9, scope: !5807)
!5809 = !DILocation(line: 561, column: 9, scope: !5807)
!5810 = !DILocation(line: 563, column: 31, scope: !5677)
!5811 = !DILocation(line: 563, column: 56, scope: !5677)
!5812 = !DILocation(line: 563, column: 34, scope: !5677)
!5813 = !DILocation(line: 563, column: 10, scope: !5814)
!5814 = !DILexicalBlockFile(scope: !5677, file: !16, discriminator: 1)
!5815 = !DILocation(line: 563, column: 8, scope: !5677)
!5816 = !DILocation(line: 564, column: 22, scope: !5677)
!5817 = !DILocation(line: 564, column: 5, scope: !5677)
!5818 = !DILocation(line: 565, column: 9, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 565, column: 9)
!5820 = !DILocation(line: 565, column: 12, scope: !5819)
!5821 = !DILocation(line: 565, column: 9, scope: !5677)
!5822 = !DILocation(line: 566, column: 9, scope: !5819)
!5823 = !DILocation(line: 567, column: 11, scope: !5677)
!5824 = !DILocation(line: 567, column: 9, scope: !5677)
!5825 = !DILocation(line: 568, column: 9, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 568, column: 9)
!5827 = !DILocation(line: 568, column: 13, scope: !5826)
!5828 = !DILocation(line: 568, column: 9, scope: !5677)
!5829 = !DILocation(line: 569, column: 9, scope: !5826)
!5830 = !DILocation(line: 570, column: 31, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 570, column: 9)
!5832 = !DILocation(line: 570, column: 36, scope: !5831)
!5833 = !DILocation(line: 570, column: 10, scope: !5831)
!5834 = !DILocation(line: 570, column: 9, scope: !5677)
!5835 = !DILocation(line: 571, column: 9, scope: !5831)
!5836 = !DILocation(line: 572, column: 8, scope: !5677)
!5837 = !DILocation(line: 574, column: 14, scope: !5677)
!5838 = !DILocation(line: 574, column: 21, scope: !5677)
!5839 = !DILocation(line: 574, column: 5, scope: !5677)
!5840 = !DILocation(line: 575, column: 12, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 575, column: 5)
!5842 = !DILocation(line: 575, column: 10, scope: !5841)
!5843 = !DILocation(line: 575, column: 17, scope: !5844)
!5844 = !DILexicalBlockFile(scope: !5845, file: !16, discriminator: 1)
!5845 = distinct !DILexicalBlock(scope: !5841, file: !16, line: 575, column: 5)
!5846 = !DILocation(line: 575, column: 43, scope: !5844)
!5847 = !DILocation(line: 575, column: 21, scope: !5844)
!5848 = !DILocation(line: 575, column: 19, scope: !5844)
!5849 = !DILocation(line: 575, column: 5, scope: !5844)
!5850 = !DILocalVariable(name: "ext", scope: !5851, file: !16, line: 576, type: !324)
!5851 = distinct !DILexicalBlock(scope: !5845, file: !16, line: 575, column: 55)
!5852 = !DILocation(line: 576, column: 25, scope: !5851)
!5853 = !DILocation(line: 576, column: 55, scope: !5851)
!5854 = !DILocation(line: 576, column: 61, scope: !5851)
!5855 = !DILocation(line: 576, column: 31, scope: !5851)
!5856 = !DILocation(line: 577, column: 35, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5851, file: !16, line: 577, column: 13)
!5858 = !DILocation(line: 577, column: 40, scope: !5857)
!5859 = !DILocation(line: 577, column: 14, scope: !5857)
!5860 = !DILocation(line: 577, column: 13, scope: !5851)
!5861 = !DILocation(line: 578, column: 13, scope: !5857)
!5862 = !DILocation(line: 579, column: 5, scope: !5851)
!5863 = !DILocation(line: 575, column: 51, scope: !5864)
!5864 = !DILexicalBlockFile(scope: !5845, file: !16, discriminator: 2)
!5865 = !DILocation(line: 575, column: 5, scope: !5864)
!5866 = distinct !{!5866, !5867}
!5867 = !DILocation(line: 575, column: 5, scope: !5677)
!5868 = !DILocation(line: 580, column: 31, scope: !5677)
!5869 = !DILocation(line: 580, column: 36, scope: !5677)
!5870 = !DILocation(line: 580, column: 42, scope: !5677)
!5871 = !DILocation(line: 580, column: 48, scope: !5677)
!5872 = !DILocation(line: 580, column: 54, scope: !5677)
!5873 = !DILocation(line: 581, column: 30, scope: !5677)
!5874 = !DILocation(line: 581, column: 37, scope: !5677)
!5875 = !DILocation(line: 580, column: 13, scope: !5677)
!5876 = !DILocation(line: 580, column: 6, scope: !5677)
!5877 = !DILocation(line: 580, column: 11, scope: !5677)
!5878 = !DILocation(line: 582, column: 10, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 582, column: 9)
!5880 = !DILocation(line: 582, column: 9, scope: !5879)
!5881 = !DILocation(line: 582, column: 15, scope: !5879)
!5882 = !DILocation(line: 582, column: 9, scope: !5677)
!5883 = !DILocation(line: 583, column: 18, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5879, file: !16, line: 582, column: 23)
!5885 = !DILocation(line: 583, column: 9, scope: !5884)
!5886 = !DILocation(line: 584, column: 9, scope: !5884)
!5887 = !DILocation(line: 587, column: 9, scope: !5677)
!5888 = !DILocation(line: 588, column: 5, scope: !5677)
!5889 = !DILocation(line: 591, column: 9, scope: !5677)
!5890 = !DILocation(line: 591, column: 5, scope: !5677)
!5891 = !DILocation(line: 597, column: 9, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5677, file: !16, line: 597, column: 9)
!5893 = !DILocation(line: 597, column: 13, scope: !5892)
!5894 = !DILocation(line: 597, column: 9, scope: !5677)
!5895 = !DILocation(line: 598, column: 21, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5892, file: !16, line: 597, column: 21)
!5897 = !DILocation(line: 598, column: 9, scope: !5896)
!5898 = !DILocation(line: 599, column: 21, scope: !5896)
!5899 = !DILocation(line: 599, column: 9, scope: !5896)
!5900 = !DILocation(line: 600, column: 21, scope: !5896)
!5901 = !DILocation(line: 600, column: 9, scope: !5896)
!5902 = !DILocation(line: 601, column: 25, scope: !5896)
!5903 = !DILocation(line: 601, column: 9, scope: !5896)
!5904 = !DILocation(line: 602, column: 5, scope: !5896)
!5905 = !DILocation(line: 603, column: 22, scope: !5677)
!5906 = !DILocation(line: 603, column: 5, scope: !5677)
!5907 = !DILocation(line: 604, column: 23, scope: !5677)
!5908 = !DILocation(line: 604, column: 5, scope: !5677)
!5909 = !DILocation(line: 605, column: 25, scope: !5677)
!5910 = !DILocation(line: 605, column: 5, scope: !5677)
!5911 = !DILocation(line: 606, column: 12, scope: !5677)
!5912 = !DILocation(line: 606, column: 5, scope: !5677)
!5913 = distinct !DISubprogram(name: "sk_OPENSSL_STRING_value", scope: !248, file: !248, line: 159, type: !5914, isLocal: true, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!241, !5916, !239}
!5916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5917, size: 64, align: 64)
!5917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !247)
!5918 = !DILocalVariable(name: "sk", arg: 1, scope: !5913, file: !248, line: 159, type: !5916)
!5919 = !DILocation(line: 159, column: 501, scope: !5913)
!5920 = !DILocalVariable(name: "idx", arg: 2, scope: !5913, file: !248, line: 159, type: !239)
!5921 = !DILocation(line: 159, column: 509, scope: !5913)
!5922 = !DILocation(line: 159, column: 571, scope: !5913)
!5923 = !DILocation(line: 159, column: 548, scope: !5913)
!5924 = !DILocation(line: 159, column: 575, scope: !5913)
!5925 = !DILocation(line: 159, column: 531, scope: !5913)
!5926 = !DILocation(line: 159, column: 516, scope: !5913)
!5927 = distinct !DISubprogram(name: "sk_X509_EXTENSION_num", scope: !257, file: !257, line: 85, type: !5928, isLocal: true, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5928 = !DISubroutineType(types: !5929)
!5929 = !{!239, !5930}
!5930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5931, size: 64, align: 64)
!5931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5722)
!5932 = !DILocalVariable(name: "sk", arg: 1, scope: !5927, file: !257, line: 85, type: !5930)
!5933 = !DILocation(line: 85, column: 387, scope: !5927)
!5934 = !DILocation(line: 85, column: 438, scope: !5927)
!5935 = !DILocation(line: 85, column: 415, scope: !5927)
!5936 = !DILocation(line: 85, column: 400, scope: !5927)
!5937 = !DILocation(line: 85, column: 393, scope: !5927)
!5938 = distinct !DISubprogram(name: "sk_X509_EXTENSION_value", scope: !257, file: !257, line: 85, type: !5939, isLocal: true, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{!324, !5930, !239}
!5941 = !DILocalVariable(name: "sk", arg: 1, scope: !5938, file: !257, line: 85, type: !5930)
!5942 = !DILocation(line: 85, column: 561, scope: !5938)
!5943 = !DILocalVariable(name: "idx", arg: 2, scope: !5938, file: !257, line: 85, type: !239)
!5944 = !DILocation(line: 85, column: 569, scope: !5938)
!5945 = !DILocation(line: 85, column: 641, scope: !5938)
!5946 = !DILocation(line: 85, column: 618, scope: !5938)
!5947 = !DILocation(line: 85, column: 645, scope: !5938)
!5948 = !DILocation(line: 85, column: 601, scope: !5938)
!5949 = !DILocation(line: 85, column: 583, scope: !5938)
!5950 = !DILocation(line: 85, column: 576, scope: !5938)
!5951 = distinct !DISubprogram(name: "print_connection_info", scope: !16, file: !16, line: 2848, type: !5952, isLocal: true, isDefinition: true, scopeLine: 2849, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{null, !2608}
!5954 = !DILocalVariable(name: "con", arg: 1, scope: !5951, file: !16, line: 2848, type: !2608)
!5955 = !DILocation(line: 2848, column: 40, scope: !5951)
!5956 = !DILocalVariable(name: "str", scope: !5951, file: !16, line: 2850, type: !349)
!5957 = !DILocation(line: 2850, column: 17, scope: !5951)
!5958 = !DILocalVariable(name: "peer", scope: !5951, file: !16, line: 2851, type: !476)
!5959 = !DILocation(line: 2851, column: 11, scope: !5951)
!5960 = !DILocalVariable(name: "buf", scope: !5951, file: !16, line: 2852, type: !5961)
!5961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 65536, align: 8, elements: !5962)
!5962 = !{!5963}
!5963 = !DISubrange(count: 8192)
!5964 = !DILocation(line: 2852, column: 10, scope: !5951)
!5965 = !DILocalVariable(name: "next_proto_neg", scope: !5951, file: !16, line: 2854, type: !319)
!5966 = !DILocation(line: 2854, column: 26, scope: !5951)
!5967 = !DILocalVariable(name: "next_proto_neg_len", scope: !5951, file: !16, line: 2855, type: !331)
!5968 = !DILocation(line: 2855, column: 14, scope: !5951)
!5969 = !DILocalVariable(name: "exportedkeymat", scope: !5951, file: !16, line: 2857, type: !237)
!5970 = !DILocation(line: 2857, column: 20, scope: !5951)
!5971 = !DILocalVariable(name: "i", scope: !5951, file: !16, line: 2858, type: !239)
!5972 = !DILocation(line: 2858, column: 9, scope: !5951)
!5973 = !DILocation(line: 2860, column: 9, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2860, column: 9)
!5975 = !DILocation(line: 2860, column: 9, scope: !5951)
!5976 = !DILocation(line: 2861, column: 27, scope: !5974)
!5977 = !DILocation(line: 2861, column: 9, scope: !5974)
!5978 = !DILocation(line: 2863, column: 31, scope: !5951)
!5979 = !DILocation(line: 2863, column: 58, scope: !5951)
!5980 = !DILocation(line: 2863, column: 42, scope: !5951)
!5981 = !DILocation(line: 2863, column: 5, scope: !5982)
!5982 = !DILexicalBlockFile(scope: !5951, file: !16, discriminator: 1)
!5983 = !DILocation(line: 2865, column: 37, scope: !5951)
!5984 = !DILocation(line: 2865, column: 12, scope: !5951)
!5985 = !DILocation(line: 2865, column: 10, scope: !5951)
!5986 = !DILocation(line: 2866, column: 9, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2866, column: 9)
!5988 = !DILocation(line: 2866, column: 14, scope: !5987)
!5989 = !DILocation(line: 2866, column: 9, scope: !5951)
!5990 = !DILocation(line: 2867, column: 20, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !16, line: 2866, column: 22)
!5992 = !DILocation(line: 2867, column: 9, scope: !5991)
!5993 = !DILocation(line: 2868, column: 28, scope: !5991)
!5994 = !DILocation(line: 2868, column: 39, scope: !5991)
!5995 = !DILocation(line: 2868, column: 9, scope: !5991)
!5996 = !DILocation(line: 2869, column: 24, scope: !5991)
!5997 = !DILocation(line: 2869, column: 35, scope: !5991)
!5998 = !DILocation(line: 2869, column: 9, scope: !5991)
!5999 = !DILocation(line: 2870, column: 19, scope: !5991)
!6000 = !DILocation(line: 2870, column: 9, scope: !5991)
!6001 = !DILocation(line: 2871, column: 14, scope: !5991)
!6002 = !DILocation(line: 2872, column: 5, scope: !5991)
!6003 = !DILocation(line: 2874, column: 32, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2874, column: 9)
!6005 = !DILocation(line: 2874, column: 37, scope: !6004)
!6006 = !DILocation(line: 2874, column: 9, scope: !6004)
!6007 = !DILocation(line: 2874, column: 55, scope: !6004)
!6008 = !DILocation(line: 2874, column: 9, scope: !5951)
!6009 = !DILocation(line: 2875, column: 20, scope: !6004)
!6010 = !DILocation(line: 2875, column: 54, scope: !6004)
!6011 = !DILocation(line: 2875, column: 9, scope: !6004)
!6012 = !DILocation(line: 2876, column: 54, scope: !5951)
!6013 = !DILocation(line: 2876, column: 31, scope: !5951)
!6014 = !DILocation(line: 2876, column: 11, scope: !5982)
!6015 = !DILocation(line: 2876, column: 9, scope: !5951)
!6016 = !DILocation(line: 2877, column: 23, scope: !5951)
!6017 = !DILocation(line: 2877, column: 34, scope: !5951)
!6018 = !DILocation(line: 2877, column: 5, scope: !5951)
!6019 = !DILocation(line: 2879, column: 29, scope: !5951)
!6020 = !DILocation(line: 2879, column: 40, scope: !5951)
!6021 = !DILocation(line: 2879, column: 5, scope: !5951)
!6022 = !DILocation(line: 2880, column: 22, scope: !5951)
!6023 = !DILocation(line: 2880, column: 33, scope: !5951)
!6024 = !DILocation(line: 2880, column: 5, scope: !5951)
!6025 = !DILocation(line: 2882, column: 20, scope: !5951)
!6026 = !DILocation(line: 2882, column: 31, scope: !5951)
!6027 = !DILocation(line: 2882, column: 5, scope: !5951)
!6028 = !DILocation(line: 2883, column: 16, scope: !5951)
!6029 = !DILocation(line: 2883, column: 46, scope: !5951)
!6030 = !DILocation(line: 2883, column: 50, scope: !5951)
!6031 = !DILocation(line: 2883, column: 45, scope: !5951)
!6032 = !DILocation(line: 2883, column: 60, scope: !5982)
!6033 = !DILocation(line: 2883, column: 45, scope: !5982)
!6034 = !DILocation(line: 2883, column: 45, scope: !6035)
!6035 = !DILexicalBlockFile(scope: !5951, file: !16, discriminator: 2)
!6036 = !DILocation(line: 2883, column: 45, scope: !6037)
!6037 = !DILexicalBlockFile(scope: !5951, file: !16, discriminator: 3)
!6038 = !DILocation(line: 2883, column: 5, scope: !6037)
!6039 = !DILocation(line: 2886, column: 36, scope: !5951)
!6040 = !DILocation(line: 2886, column: 5, scope: !5951)
!6041 = !DILocation(line: 2887, column: 9, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2887, column: 9)
!6043 = !DILocation(line: 2887, column: 9, scope: !5951)
!6044 = !DILocation(line: 2888, column: 20, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6042, file: !16, line: 2887, column: 25)
!6046 = !DILocation(line: 2888, column: 9, scope: !6045)
!6047 = !DILocation(line: 2889, column: 19, scope: !6045)
!6048 = !DILocation(line: 2889, column: 30, scope: !6045)
!6049 = !DILocation(line: 2889, column: 46, scope: !6045)
!6050 = !DILocation(line: 2889, column: 9, scope: !6045)
!6051 = !DILocation(line: 2890, column: 20, scope: !6045)
!6052 = !DILocation(line: 2890, column: 9, scope: !6045)
!6053 = !DILocation(line: 2891, column: 5, scope: !6045)
!6054 = !DILocalVariable(name: "srtp_profile", scope: !6055, file: !16, line: 2895, type: !6056)
!6055 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2894, column: 5)
!6056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 64, align: 64)
!6057 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRTP_PROTECTION_PROFILE", file: !337, line: 225, baseType: !6058)
!6058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "srtp_protection_profile_st", file: !337, line: 222, size: 128, align: 64, elements: !6059)
!6059 = !{!6060, !6061}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6058, file: !337, line: 223, baseType: !349, size: 64, align: 64)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6058, file: !337, line: 224, baseType: !593, size: 64, align: 64, offset: 64)
!6062 = !DILocation(line: 2895, column: 34, scope: !6055)
!6063 = !DILocation(line: 2896, column: 45, scope: !6055)
!6064 = !DILocation(line: 2896, column: 15, scope: !6055)
!6065 = !DILocation(line: 2898, column: 13, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6055, file: !16, line: 2898, column: 13)
!6067 = !DILocation(line: 2898, column: 13, scope: !6055)
!6068 = !DILocation(line: 2899, column: 24, scope: !6066)
!6069 = !DILocation(line: 2900, column: 24, scope: !6066)
!6070 = !DILocation(line: 2900, column: 38, scope: !6066)
!6071 = !DILocation(line: 2899, column: 13, scope: !6066)
!6072 = !DILocation(line: 2903, column: 28, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2903, column: 9)
!6074 = !DILocation(line: 2903, column: 9, scope: !6073)
!6075 = !DILocation(line: 2903, column: 9, scope: !5951)
!6076 = !DILocation(line: 2904, column: 20, scope: !6073)
!6077 = !DILocation(line: 2904, column: 9, scope: !6073)
!6078 = !DILocation(line: 2905, column: 16, scope: !5951)
!6079 = !DILocation(line: 2906, column: 26, scope: !5951)
!6080 = !DILocation(line: 2906, column: 16, scope: !5951)
!6081 = !DILocation(line: 2905, column: 5, scope: !5951)
!6082 = !DILocation(line: 2907, column: 26, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2907, column: 9)
!6084 = !DILocation(line: 2907, column: 10, scope: !6083)
!6085 = !DILocation(line: 2907, column: 31, scope: !6083)
!6086 = !DILocation(line: 2907, column: 9, scope: !5951)
!6087 = !DILocation(line: 2908, column: 20, scope: !6083)
!6088 = !DILocation(line: 2908, column: 9, scope: !6083)
!6089 = !DILocation(line: 2910, column: 9, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !5951, file: !16, line: 2910, column: 9)
!6091 = !DILocation(line: 2910, column: 27, scope: !6090)
!6092 = !DILocation(line: 2910, column: 9, scope: !5951)
!6093 = !DILocation(line: 2911, column: 20, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6090, file: !16, line: 2910, column: 35)
!6095 = !DILocation(line: 2911, column: 9, scope: !6094)
!6096 = !DILocation(line: 2912, column: 20, scope: !6094)
!6097 = !DILocation(line: 2912, column: 52, scope: !6094)
!6098 = !DILocation(line: 2912, column: 9, scope: !6094)
!6099 = !DILocation(line: 2913, column: 20, scope: !6094)
!6100 = !DILocation(line: 2913, column: 57, scope: !6094)
!6101 = !DILocation(line: 2913, column: 9, scope: !6094)
!6102 = !DILocation(line: 2914, column: 37, scope: !6094)
!6103 = !DILocation(line: 2914, column: 26, scope: !6094)
!6104 = !DILocation(line: 2914, column: 24, scope: !6094)
!6105 = !DILocation(line: 2915, column: 41, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6094, file: !16, line: 2915, column: 13)
!6107 = !DILocation(line: 2915, column: 46, scope: !6106)
!6108 = !DILocation(line: 2916, column: 41, scope: !6106)
!6109 = !DILocation(line: 2917, column: 41, scope: !6106)
!6110 = !DILocation(line: 2918, column: 48, scope: !6106)
!6111 = !DILocation(line: 2918, column: 41, scope: !6106)
!6112 = !DILocation(line: 2915, column: 14, scope: !6106)
!6113 = !DILocation(line: 2915, column: 13, scope: !6094)
!6114 = !DILocation(line: 2920, column: 24, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6106, file: !16, line: 2919, column: 53)
!6116 = !DILocation(line: 2920, column: 13, scope: !6115)
!6117 = !DILocation(line: 2921, column: 9, scope: !6115)
!6118 = !DILocation(line: 2922, column: 24, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6106, file: !16, line: 2921, column: 16)
!6120 = !DILocation(line: 2922, column: 13, scope: !6119)
!6121 = !DILocation(line: 2923, column: 20, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6119, file: !16, line: 2923, column: 13)
!6123 = !DILocation(line: 2923, column: 18, scope: !6122)
!6124 = !DILocation(line: 2923, column: 25, scope: !6125)
!6125 = !DILexicalBlockFile(scope: !6126, file: !16, discriminator: 1)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !16, line: 2923, column: 13)
!6127 = !DILocation(line: 2923, column: 29, scope: !6125)
!6128 = !DILocation(line: 2923, column: 27, scope: !6125)
!6129 = !DILocation(line: 2923, column: 13, scope: !6125)
!6130 = !DILocation(line: 2924, column: 28, scope: !6126)
!6131 = !DILocation(line: 2924, column: 62, scope: !6126)
!6132 = !DILocation(line: 2924, column: 47, scope: !6126)
!6133 = !DILocation(line: 2924, column: 17, scope: !6126)
!6134 = !DILocation(line: 2923, column: 47, scope: !6135)
!6135 = !DILexicalBlockFile(scope: !6126, file: !16, discriminator: 2)
!6136 = !DILocation(line: 2923, column: 13, scope: !6135)
!6137 = distinct !{!6137, !6138}
!6138 = !DILocation(line: 2923, column: 13, scope: !6119)
!6139 = !DILocation(line: 2925, column: 24, scope: !6119)
!6140 = !DILocation(line: 2925, column: 13, scope: !6119)
!6141 = !DILocation(line: 2927, column: 21, scope: !6094)
!6142 = !DILocation(line: 2927, column: 9, scope: !6094)
!6143 = !DILocation(line: 2928, column: 5, scope: !6094)
!6144 = !DILocation(line: 2934, column: 25, scope: !5951)
!6145 = !DILocation(line: 2934, column: 16, scope: !5951)
!6146 = !DILocation(line: 2934, column: 11, scope: !5951)
!6147 = !DILocation(line: 2935, column: 1, scope: !5951)
!6148 = distinct !DISubprogram(name: "close_accept_socket", scope: !16, file: !16, line: 2721, type: !244, isLocal: true, isDefinition: true, scopeLine: 2722, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6149 = !DILocation(line: 2723, column: 16, scope: !6148)
!6150 = !DILocation(line: 2723, column: 5, scope: !6148)
!6151 = !DILocation(line: 2724, column: 9, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6148, file: !16, line: 2724, column: 9)
!6153 = !DILocation(line: 2724, column: 23, scope: !6152)
!6154 = !DILocation(line: 2724, column: 9, scope: !6148)
!6155 = !DILocation(line: 2725, column: 25, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6152, file: !16, line: 2724, column: 29)
!6157 = !DILocation(line: 2725, column: 9, scope: !6156)
!6158 = !DILocation(line: 2726, column: 5, scope: !6156)
!6159 = !DILocation(line: 2727, column: 1, scope: !6148)
!6160 = distinct !DISubprogram(name: "init_ssl_connection", scope: !16, file: !16, line: 2739, type: !6161, isLocal: true, isDefinition: true, scopeLine: 2740, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{!239, !2608}
!6163 = !DILocalVariable(name: "con", arg: 1, scope: !6160, file: !16, line: 2739, type: !2608)
!6164 = !DILocation(line: 2739, column: 37, scope: !6160)
!6165 = !DILocalVariable(name: "i", scope: !6160, file: !16, line: 2741, type: !239)
!6166 = !DILocation(line: 2741, column: 9, scope: !6160)
!6167 = !DILocalVariable(name: "verify_err", scope: !6160, file: !16, line: 2742, type: !321)
!6168 = !DILocation(line: 2742, column: 10, scope: !6160)
!6169 = !DILocalVariable(name: "retry", scope: !6160, file: !16, line: 2743, type: !239)
!6170 = !DILocation(line: 2743, column: 9, scope: !6160)
!6171 = !DILocation(line: 2745, column: 9, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6160, file: !16, line: 2745, column: 9)
!6173 = !DILocation(line: 2745, column: 20, scope: !6172)
!6174 = !DILocation(line: 2745, column: 23, scope: !6175)
!6175 = !DILexicalBlockFile(scope: !6172, file: !16, discriminator: 1)
!6176 = !DILocation(line: 2745, column: 9, scope: !6175)
!6177 = !DILocalVariable(name: "client", scope: !6178, file: !16, line: 2746, type: !6179)
!6178 = distinct !DILexicalBlock(scope: !6172, file: !16, line: 2745, column: 34)
!6179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6180, size: 64, align: 64)
!6180 = !DIDerivedType(tag: DW_TAG_typedef, name: "BIO_ADDR", file: !210, line: 187, baseType: !6181)
!6181 = !DICompositeType(tag: DW_TAG_union_type, name: "bio_addr_st", file: !210, line: 187, flags: DIFlagFwdDecl)
!6182 = !DILocation(line: 2746, column: 19, scope: !6178)
!6183 = !DILocation(line: 2748, column: 13, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6178, file: !16, line: 2748, column: 13)
!6185 = !DILocation(line: 2748, column: 13, scope: !6178)
!6186 = !DILocation(line: 2749, column: 27, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !16, line: 2749, column: 17)
!6188 = distinct !DILexicalBlock(scope: !6184, file: !16, line: 2748, column: 25)
!6189 = !DILocation(line: 2749, column: 25, scope: !6187)
!6190 = !DILocation(line: 2749, column: 43, scope: !6187)
!6191 = !DILocation(line: 2749, column: 17, scope: !6188)
!6192 = !DILocation(line: 2750, column: 28, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6187, file: !16, line: 2749, column: 51)
!6194 = !DILocation(line: 2750, column: 17, scope: !6193)
!6195 = !DILocation(line: 2751, column: 17, scope: !6193)
!6196 = !DILocation(line: 2753, column: 31, scope: !6188)
!6197 = !DILocation(line: 2753, column: 36, scope: !6188)
!6198 = !DILocation(line: 2753, column: 17, scope: !6188)
!6199 = !DILocation(line: 2753, column: 15, scope: !6188)
!6200 = !DILocation(line: 2754, column: 9, scope: !6188)
!6201 = !DILocation(line: 2755, column: 31, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6184, file: !16, line: 2754, column: 16)
!6203 = !DILocation(line: 2755, column: 17, scope: !6202)
!6204 = !DILocation(line: 2755, column: 15, scope: !6202)
!6205 = !DILocation(line: 2757, column: 13, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6178, file: !16, line: 2757, column: 13)
!6207 = !DILocation(line: 2757, column: 15, scope: !6206)
!6208 = !DILocation(line: 2757, column: 13, scope: !6178)
!6209 = !DILocalVariable(name: "wbio", scope: !6210, file: !16, line: 2758, type: !265)
!6210 = distinct !DILexicalBlock(scope: !6206, file: !16, line: 2757, column: 20)
!6211 = !DILocation(line: 2758, column: 18, scope: !6210)
!6212 = !DILocalVariable(name: "fd", scope: !6210, file: !16, line: 2759, type: !239)
!6213 = !DILocation(line: 2759, column: 17, scope: !6210)
!6214 = !DILocation(line: 2761, column: 17, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6210, file: !16, line: 2761, column: 17)
!6216 = !DILocation(line: 2761, column: 17, scope: !6210)
!6217 = !DILocation(line: 2762, column: 37, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !16, line: 2761, column: 29)
!6219 = !DILocation(line: 2762, column: 24, scope: !6218)
!6220 = !DILocation(line: 2762, column: 22, scope: !6218)
!6221 = !DILocation(line: 2763, column: 21, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6218, file: !16, line: 2763, column: 21)
!6223 = !DILocation(line: 2763, column: 21, scope: !6218)
!6224 = !DILocation(line: 2764, column: 30, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6222, file: !16, line: 2763, column: 27)
!6226 = !DILocation(line: 2764, column: 41, scope: !6225)
!6227 = !DILocation(line: 2764, column: 21, scope: !6225)
!6228 = !DILocation(line: 2765, column: 17, scope: !6225)
!6229 = !DILocation(line: 2767, column: 22, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6218, file: !16, line: 2767, column: 21)
!6231 = !DILocation(line: 2767, column: 27, scope: !6230)
!6232 = !DILocation(line: 2767, column: 42, scope: !6233)
!6233 = !DILexicalBlockFile(scope: !6230, file: !16, discriminator: 1)
!6234 = !DILocation(line: 2767, column: 46, scope: !6233)
!6235 = !DILocation(line: 2767, column: 30, scope: !6233)
!6236 = !DILocation(line: 2767, column: 57, scope: !6233)
!6237 = !DILocation(line: 2767, column: 21, scope: !6233)
!6238 = !DILocation(line: 2768, column: 32, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6230, file: !16, line: 2767, column: 63)
!6240 = !DILocation(line: 2768, column: 21, scope: !6239)
!6241 = !DILocation(line: 2769, column: 35, scope: !6239)
!6242 = !DILocation(line: 2769, column: 21, scope: !6239)
!6243 = !DILocation(line: 2770, column: 21, scope: !6239)
!6244 = !DILocation(line: 2773, column: 37, scope: !6218)
!6245 = !DILocation(line: 2773, column: 59, scope: !6218)
!6246 = !DILocation(line: 2773, column: 50, scope: !6218)
!6247 = !DILocation(line: 2773, column: 28, scope: !6218)
!6248 = !DILocation(line: 2773, column: 23, scope: !6218)
!6249 = !DILocation(line: 2774, column: 31, scope: !6218)
!6250 = !DILocation(line: 2774, column: 17, scope: !6218)
!6251 = !DILocation(line: 2775, column: 28, scope: !6218)
!6252 = !DILocation(line: 2776, column: 13, scope: !6218)
!6253 = !DILocation(line: 2777, column: 27, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6215, file: !16, line: 2776, column: 20)
!6255 = !DILocation(line: 2779, column: 28, scope: !6210)
!6256 = !DILocation(line: 2779, column: 17, scope: !6210)
!6257 = !DILocation(line: 2779, column: 15, scope: !6210)
!6258 = !DILocation(line: 2780, column: 9, scope: !6210)
!6259 = !DILocation(line: 2781, column: 27, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6206, file: !16, line: 2780, column: 16)
!6261 = !DILocation(line: 2781, column: 13, scope: !6260)
!6262 = !DILocation(line: 2783, column: 5, scope: !6178)
!6263 = !DILocation(line: 2784, column: 9, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6172, file: !16, line: 2783, column: 12)
!6265 = distinct !{!6265, !6263}
!6266 = !DILocation(line: 2785, column: 28, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6264, file: !16, line: 2784, column: 12)
!6268 = !DILocation(line: 2785, column: 17, scope: !6267)
!6269 = !DILocation(line: 2785, column: 15, scope: !6267)
!6270 = !DILocation(line: 2787, column: 17, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !16, line: 2787, column: 17)
!6272 = !DILocation(line: 2787, column: 19, scope: !6271)
!6273 = !DILocation(line: 2787, column: 17, scope: !6267)
!6274 = !DILocation(line: 2788, column: 38, scope: !6271)
!6275 = !DILocation(line: 2788, column: 43, scope: !6271)
!6276 = !DILocation(line: 2788, column: 25, scope: !6271)
!6277 = !DILocation(line: 2788, column: 23, scope: !6271)
!6278 = !DILocation(line: 2788, column: 17, scope: !6271)
!6279 = !DILocation(line: 2804, column: 13, scope: !6267)
!6280 = !DILocation(line: 2804, column: 20, scope: !6281)
!6281 = !DILexicalBlockFile(scope: !6267, file: !16, discriminator: 1)
!6282 = !DILocation(line: 2804, column: 22, scope: !6281)
!6283 = !DILocation(line: 2805, column: 20, scope: !6267)
!6284 = !DILocation(line: 2805, column: 37, scope: !6281)
!6285 = !DILocation(line: 2805, column: 42, scope: !6281)
!6286 = !DILocation(line: 2805, column: 23, scope: !6281)
!6287 = !DILocation(line: 2805, column: 45, scope: !6281)
!6288 = !DILocation(line: 2804, column: 13, scope: !6289)
!6289 = !DILexicalBlockFile(scope: !6267, file: !16, discriminator: 2)
!6290 = !DILocation(line: 2806, column: 28, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6267, file: !16, line: 2805, column: 51)
!6292 = !DILocation(line: 2807, column: 46, scope: !6291)
!6293 = !DILocation(line: 2806, column: 17, scope: !6291)
!6294 = !DILocation(line: 2808, column: 53, scope: !6291)
!6295 = !DILocation(line: 2808, column: 17, scope: !6291)
!6296 = !DILocation(line: 2810, column: 62, scope: !6291)
!6297 = !DILocation(line: 2811, column: 62, scope: !6291)
!6298 = !DILocation(line: 2810, column: 21, scope: !6291)
!6299 = !DILocation(line: 2809, column: 40, scope: !6291)
!6300 = !DILocation(line: 2812, column: 39, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6291, file: !16, line: 2812, column: 21)
!6302 = !DILocation(line: 2812, column: 21, scope: !6301)
!6303 = !DILocation(line: 2812, column: 21, scope: !6291)
!6304 = !DILocation(line: 2813, column: 32, scope: !6301)
!6305 = !DILocation(line: 2814, column: 50, scope: !6301)
!6306 = !DILocation(line: 2814, column: 56, scope: !6301)
!6307 = !DILocation(line: 2813, column: 21, scope: !6301)
!6308 = !DILocation(line: 2816, column: 32, scope: !6301)
!6309 = !DILocation(line: 2816, column: 21, scope: !6301)
!6310 = !DILocation(line: 2817, column: 32, scope: !6291)
!6311 = !DILocation(line: 2817, column: 21, scope: !6291)
!6312 = !DILocation(line: 2817, column: 19, scope: !6291)
!6313 = !DILocation(line: 2818, column: 21, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6291, file: !16, line: 2818, column: 21)
!6315 = !DILocation(line: 2818, column: 23, scope: !6314)
!6316 = !DILocation(line: 2818, column: 21, scope: !6291)
!6317 = !DILocation(line: 2819, column: 42, scope: !6314)
!6318 = !DILocation(line: 2819, column: 47, scope: !6314)
!6319 = !DILocation(line: 2819, column: 29, scope: !6314)
!6320 = !DILocation(line: 2819, column: 27, scope: !6314)
!6321 = !DILocation(line: 2819, column: 21, scope: !6314)
!6322 = !DILocation(line: 2804, column: 13, scope: !6323)
!6323 = !DILexicalBlockFile(scope: !6267, file: !16, discriminator: 3)
!6324 = distinct !{!6324, !6279}
!6325 = !DILocation(line: 2822, column: 9, scope: !6267)
!6326 = !DILocation(line: 2822, column: 18, scope: !6327)
!6327 = !DILexicalBlockFile(scope: !6264, file: !16, discriminator: 1)
!6328 = !DILocation(line: 2822, column: 20, scope: !6327)
!6329 = !DILocation(line: 2822, column: 24, scope: !6327)
!6330 = !DILocation(line: 2822, column: 49, scope: !6331)
!6331 = !DILexicalBlockFile(scope: !6264, file: !16, discriminator: 2)
!6332 = !DILocation(line: 2822, column: 27, scope: !6331)
!6333 = !DILocation(line: 2822, column: 24, scope: !6331)
!6334 = !DILocation(line: 2822, column: 9, scope: !6323)
!6335 = !DILocation(line: 2825, column: 9, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6160, file: !16, line: 2825, column: 9)
!6337 = !DILocation(line: 2825, column: 11, scope: !6336)
!6338 = !DILocation(line: 2825, column: 9, scope: !6160)
!6339 = !DILocation(line: 2826, column: 15, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6341, file: !16, line: 2826, column: 13)
!6341 = distinct !DILexicalBlock(scope: !6336, file: !16, line: 2825, column: 17)
!6342 = !DILocation(line: 2826, column: 26, scope: !6340)
!6343 = !DILocation(line: 2826, column: 29, scope: !6344)
!6344 = !DILexicalBlockFile(scope: !6340, file: !16, discriminator: 1)
!6345 = !DILocation(line: 2826, column: 40, scope: !6344)
!6346 = !DILocation(line: 2826, column: 43, scope: !6347)
!6347 = !DILexicalBlockFile(scope: !6340, file: !16, discriminator: 2)
!6348 = !DILocation(line: 2826, column: 45, scope: !6347)
!6349 = !DILocation(line: 2827, column: 17, scope: !6340)
!6350 = !DILocation(line: 2827, column: 22, scope: !6344)
!6351 = !DILocation(line: 2827, column: 33, scope: !6344)
!6352 = !DILocation(line: 2827, column: 37, scope: !6347)
!6353 = !DILocation(line: 2827, column: 47, scope: !6347)
!6354 = !DILocation(line: 2827, column: 50, scope: !6355)
!6355 = !DILexicalBlockFile(scope: !6340, file: !16, discriminator: 3)
!6356 = !DILocation(line: 2826, column: 13, scope: !6357)
!6357 = !DILexicalBlockFile(scope: !6341, file: !16, discriminator: 3)
!6358 = !DILocation(line: 2828, column: 24, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6340, file: !16, line: 2827, column: 58)
!6360 = !DILocation(line: 2828, column: 13, scope: !6359)
!6361 = !DILocation(line: 2829, column: 13, scope: !6359)
!6362 = !DILocation(line: 2832, column: 20, scope: !6341)
!6363 = !DILocation(line: 2832, column: 9, scope: !6341)
!6364 = !DILocation(line: 2834, column: 44, scope: !6341)
!6365 = !DILocation(line: 2834, column: 22, scope: !6341)
!6366 = !DILocation(line: 2834, column: 20, scope: !6341)
!6367 = !DILocation(line: 2835, column: 13, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6341, file: !16, line: 2835, column: 13)
!6369 = !DILocation(line: 2835, column: 24, scope: !6368)
!6370 = !DILocation(line: 2835, column: 13, scope: !6341)
!6371 = !DILocation(line: 2836, column: 24, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !16, line: 2835, column: 30)
!6373 = !DILocation(line: 2837, column: 54, scope: !6372)
!6374 = !DILocation(line: 2837, column: 24, scope: !6372)
!6375 = !DILocation(line: 2836, column: 13, scope: !6372)
!6376 = !DILocation(line: 2838, column: 9, scope: !6372)
!6377 = !DILocation(line: 2840, column: 26, scope: !6341)
!6378 = !DILocation(line: 2840, column: 9, scope: !6341)
!6379 = !DILocation(line: 2841, column: 9, scope: !6341)
!6380 = !DILocation(line: 2844, column: 27, scope: !6160)
!6381 = !DILocation(line: 2844, column: 5, scope: !6160)
!6382 = !DILocation(line: 2845, column: 5, scope: !6160)
!6383 = !DILocation(line: 2846, column: 1, scope: !6160)
!6384 = distinct !DISubprogram(name: "is_retryable", scope: !16, file: !16, line: 2729, type: !2821, isLocal: true, isDefinition: true, scopeLine: 2730, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6385 = !DILocalVariable(name: "con", arg: 1, scope: !6384, file: !16, line: 2729, type: !2608)
!6386 = !DILocation(line: 2729, column: 30, scope: !6384)
!6387 = !DILocalVariable(name: "i", arg: 2, scope: !6384, file: !16, line: 2729, type: !239)
!6388 = !DILocation(line: 2729, column: 39, scope: !6384)
!6389 = !DILocalVariable(name: "err", scope: !6384, file: !16, line: 2731, type: !239)
!6390 = !DILocation(line: 2731, column: 9, scope: !6384)
!6391 = !DILocation(line: 2731, column: 29, scope: !6384)
!6392 = !DILocation(line: 2731, column: 34, scope: !6384)
!6393 = !DILocation(line: 2731, column: 15, scope: !6384)
!6394 = !DILocation(line: 2734, column: 13, scope: !6384)
!6395 = !DILocation(line: 2734, column: 17, scope: !6384)
!6396 = !DILocation(line: 2735, column: 12, scope: !6384)
!6397 = !DILocation(line: 2735, column: 16, scope: !6398)
!6398 = !DILexicalBlockFile(scope: !6384, file: !16, discriminator: 1)
!6399 = !DILocation(line: 2735, column: 20, scope: !6398)
!6400 = !DILocation(line: 2736, column: 12, scope: !6384)
!6401 = !DILocation(line: 2736, column: 16, scope: !6398)
!6402 = !DILocation(line: 2736, column: 20, scope: !6398)
!6403 = !DILocation(line: 2736, column: 12, scope: !6404)
!6404 = !DILexicalBlockFile(scope: !6384, file: !16, discriminator: 2)
!6405 = !DILocation(line: 2734, column: 5, scope: !6398)
!6406 = distinct !DISubprogram(name: "sk_SSL_CIPHER_num", scope: !337, file: !337, line: 967, type: !6407, isLocal: true, isDefinition: true, scopeLine: 967, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!239, !6409}
!6409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6410, size: 64, align: 64)
!6410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3960)
!6411 = !DILocalVariable(name: "sk", arg: 1, scope: !6406, file: !337, line: 967, type: !6409)
!6412 = !DILocation(line: 967, column: 343, scope: !6406)
!6413 = !DILocation(line: 967, column: 394, scope: !6406)
!6414 = !DILocation(line: 967, column: 371, scope: !6406)
!6415 = !DILocation(line: 967, column: 356, scope: !6406)
!6416 = !DILocation(line: 967, column: 349, scope: !6406)
!6417 = distinct !DISubprogram(name: "sk_SSL_CIPHER_value", scope: !337, file: !337, line: 967, type: !6418, isLocal: true, isDefinition: true, scopeLine: 967, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6418 = !DISubroutineType(types: !6419)
!6419 = !{!334, !6409, !239}
!6420 = !DILocalVariable(name: "sk", arg: 1, scope: !6417, file: !337, line: 967, type: !6409)
!6421 = !DILocation(line: 967, column: 511, scope: !6417)
!6422 = !DILocalVariable(name: "idx", arg: 2, scope: !6417, file: !337, line: 967, type: !239)
!6423 = !DILocation(line: 967, column: 519, scope: !6417)
!6424 = !DILocation(line: 967, column: 593, scope: !6417)
!6425 = !DILocation(line: 967, column: 570, scope: !6417)
!6426 = !DILocation(line: 967, column: 597, scope: !6417)
!6427 = !DILocation(line: 967, column: 553, scope: !6417)
!6428 = !DILocation(line: 967, column: 533, scope: !6417)
!6429 = !DILocation(line: 967, column: 526, scope: !6417)
!6430 = distinct !DISubprogram(name: "add_session", scope: !16, file: !16, line: 3537, type: !6431, isLocal: true, isDefinition: true, scopeLine: 3538, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!239, !2608, !399}
!6433 = !DILocalVariable(name: "ssl", arg: 1, scope: !6430, file: !16, line: 3537, type: !2608)
!6434 = !DILocation(line: 3537, column: 29, scope: !6430)
!6435 = !DILocalVariable(name: "session", arg: 2, scope: !6430, file: !16, line: 3537, type: !399)
!6436 = !DILocation(line: 3537, column: 47, scope: !6430)
!6437 = !DILocalVariable(name: "sess", scope: !6430, file: !16, line: 3539, type: !414)
!6438 = !DILocation(line: 3539, column: 25, scope: !6430)
!6439 = !DILocation(line: 3539, column: 32, scope: !6430)
!6440 = !DILocalVariable(name: "p", scope: !6430, file: !16, line: 3540, type: !237)
!6441 = !DILocation(line: 3540, column: 20, scope: !6430)
!6442 = !DILocation(line: 3542, column: 24, scope: !6430)
!6443 = !DILocation(line: 3542, column: 34, scope: !6430)
!6444 = !DILocation(line: 3542, column: 40, scope: !6430)
!6445 = !DILocation(line: 3542, column: 5, scope: !6430)
!6446 = !DILocation(line: 3543, column: 36, scope: !6430)
!6447 = !DILocation(line: 3543, column: 20, scope: !6430)
!6448 = !DILocation(line: 3543, column: 5, scope: !6430)
!6449 = !DILocation(line: 3543, column: 11, scope: !6430)
!6450 = !DILocation(line: 3543, column: 18, scope: !6430)
!6451 = !DILocation(line: 3544, column: 9, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6430, file: !16, line: 3544, column: 9)
!6453 = !DILocation(line: 3544, column: 15, scope: !6452)
!6454 = !DILocation(line: 3544, column: 22, scope: !6452)
!6455 = !DILocation(line: 3544, column: 9, scope: !6430)
!6456 = !DILocation(line: 3545, column: 20, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6452, file: !16, line: 3544, column: 27)
!6458 = !DILocation(line: 3545, column: 9, scope: !6457)
!6459 = !DILocation(line: 3546, column: 21, scope: !6457)
!6460 = !DILocation(line: 3546, column: 9, scope: !6457)
!6461 = !DILocation(line: 3547, column: 9, scope: !6457)
!6462 = !DILocation(line: 3550, column: 50, scope: !6430)
!6463 = !DILocation(line: 3550, column: 31, scope: !6430)
!6464 = !DILocation(line: 3550, column: 19, scope: !6430)
!6465 = !DILocation(line: 3550, column: 25, scope: !6430)
!6466 = !DILocation(line: 3550, column: 16, scope: !6467)
!6467 = !DILexicalBlockFile(scope: !6430, file: !16, discriminator: 1)
!6468 = !DILocation(line: 3550, column: 5, scope: !6430)
!6469 = !DILocation(line: 3550, column: 11, scope: !6430)
!6470 = !DILocation(line: 3550, column: 14, scope: !6430)
!6471 = !DILocation(line: 3551, column: 28, scope: !6430)
!6472 = !DILocation(line: 3551, column: 34, scope: !6430)
!6473 = !DILocation(line: 3551, column: 17, scope: !6430)
!6474 = !DILocation(line: 3551, column: 5, scope: !6430)
!6475 = !DILocation(line: 3551, column: 11, scope: !6430)
!6476 = !DILocation(line: 3551, column: 15, scope: !6430)
!6477 = !DILocation(line: 3552, column: 10, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6430, file: !16, line: 3552, column: 9)
!6479 = !DILocation(line: 3552, column: 16, scope: !6478)
!6480 = !DILocation(line: 3552, column: 9, scope: !6430)
!6481 = !DILocation(line: 3553, column: 20, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6478, file: !16, line: 3552, column: 20)
!6483 = !DILocation(line: 3553, column: 9, scope: !6482)
!6484 = !DILocation(line: 3554, column: 21, scope: !6482)
!6485 = !DILocation(line: 3554, column: 27, scope: !6482)
!6486 = !DILocation(line: 3554, column: 9, scope: !6482)
!6487 = !DILocation(line: 3555, column: 21, scope: !6482)
!6488 = !DILocation(line: 3555, column: 27, scope: !6482)
!6489 = !DILocation(line: 3555, column: 9, scope: !6482)
!6490 = !DILocation(line: 3556, column: 21, scope: !6482)
!6491 = !DILocation(line: 3556, column: 9, scope: !6482)
!6492 = !DILocation(line: 3557, column: 9, scope: !6482)
!6493 = !DILocation(line: 3559, column: 9, scope: !6430)
!6494 = !DILocation(line: 3559, column: 15, scope: !6430)
!6495 = !DILocation(line: 3559, column: 7, scope: !6430)
!6496 = !DILocation(line: 3562, column: 25, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6430, file: !16, line: 3562, column: 9)
!6498 = !DILocation(line: 3562, column: 9, scope: !6497)
!6499 = !DILocation(line: 3562, column: 41, scope: !6497)
!6500 = !DILocation(line: 3562, column: 47, scope: !6497)
!6501 = !DILocation(line: 3562, column: 38, scope: !6497)
!6502 = !DILocation(line: 3562, column: 9, scope: !6430)
!6503 = !DILocation(line: 3563, column: 20, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6497, file: !16, line: 3562, column: 55)
!6505 = !DILocation(line: 3563, column: 9, scope: !6504)
!6506 = !DILocation(line: 3564, column: 21, scope: !6504)
!6507 = !DILocation(line: 3564, column: 27, scope: !6504)
!6508 = !DILocation(line: 3564, column: 9, scope: !6504)
!6509 = !DILocation(line: 3565, column: 21, scope: !6504)
!6510 = !DILocation(line: 3565, column: 27, scope: !6504)
!6511 = !DILocation(line: 3565, column: 9, scope: !6504)
!6512 = !DILocation(line: 3566, column: 21, scope: !6504)
!6513 = !DILocation(line: 3566, column: 9, scope: !6504)
!6514 = !DILocation(line: 3567, column: 9, scope: !6504)
!6515 = !DILocation(line: 3570, column: 18, scope: !6430)
!6516 = !DILocation(line: 3570, column: 5, scope: !6430)
!6517 = !DILocation(line: 3570, column: 11, scope: !6430)
!6518 = !DILocation(line: 3570, column: 16, scope: !6430)
!6519 = !DILocation(line: 3571, column: 13, scope: !6430)
!6520 = !DILocation(line: 3571, column: 11, scope: !6430)
!6521 = !DILocation(line: 3572, column: 16, scope: !6430)
!6522 = !DILocation(line: 3572, column: 5, scope: !6430)
!6523 = !DILocation(line: 3573, column: 5, scope: !6430)
!6524 = !DILocation(line: 3574, column: 1, scope: !6430)
!6525 = distinct !DISubprogram(name: "get_session", scope: !16, file: !16, line: 3576, type: !6526, isLocal: true, isDefinition: true, scopeLine: 3578, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6526 = !DISubroutineType(types: !6527)
!6527 = !{!399, !2608, !319, !239, !3048}
!6528 = !DILocalVariable(name: "ssl", arg: 1, scope: !6525, file: !16, line: 3576, type: !2608)
!6529 = !DILocation(line: 3576, column: 38, scope: !6525)
!6530 = !DILocalVariable(name: "id", arg: 2, scope: !6525, file: !16, line: 3576, type: !319)
!6531 = !DILocation(line: 3576, column: 64, scope: !6525)
!6532 = !DILocalVariable(name: "idlen", arg: 3, scope: !6525, file: !16, line: 3576, type: !239)
!6533 = !DILocation(line: 3576, column: 72, scope: !6525)
!6534 = !DILocalVariable(name: "do_copy", arg: 4, scope: !6525, file: !16, line: 3577, type: !3048)
!6535 = !DILocation(line: 3577, column: 38, scope: !6525)
!6536 = !DILocalVariable(name: "sess", scope: !6525, file: !16, line: 3579, type: !414)
!6537 = !DILocation(line: 3579, column: 25, scope: !6525)
!6538 = !DILocation(line: 3580, column: 6, scope: !6525)
!6539 = !DILocation(line: 3580, column: 14, scope: !6525)
!6540 = !DILocation(line: 3581, column: 17, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6525, file: !16, line: 3581, column: 5)
!6542 = !DILocation(line: 3581, column: 15, scope: !6541)
!6543 = !DILocation(line: 3581, column: 10, scope: !6541)
!6544 = !DILocation(line: 3581, column: 24, scope: !6545)
!6545 = !DILexicalBlockFile(scope: !6546, file: !16, discriminator: 1)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !16, line: 3581, column: 5)
!6547 = !DILocation(line: 3581, column: 5, scope: !6545)
!6548 = !DILocation(line: 3582, column: 13, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !16, line: 3582, column: 13)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !16, line: 3581, column: 49)
!6551 = !DILocation(line: 3582, column: 27, scope: !6549)
!6552 = !DILocation(line: 3582, column: 33, scope: !6549)
!6553 = !DILocation(line: 3582, column: 19, scope: !6549)
!6554 = !DILocation(line: 3582, column: 39, scope: !6549)
!6555 = !DILocation(line: 3582, column: 50, scope: !6556)
!6556 = !DILexicalBlockFile(scope: !6549, file: !16, discriminator: 1)
!6557 = !DILocation(line: 3582, column: 56, scope: !6556)
!6558 = !DILocation(line: 3582, column: 60, scope: !6556)
!6559 = !DILocation(line: 3582, column: 64, scope: !6556)
!6560 = !DILocation(line: 3582, column: 43, scope: !6556)
!6561 = !DILocation(line: 3582, column: 13, scope: !6556)
!6562 = !DILocalVariable(name: "p", scope: !6563, file: !16, line: 3583, type: !319)
!6563 = distinct !DILexicalBlock(scope: !6549, file: !16, line: 3582, column: 72)
!6564 = !DILocation(line: 3583, column: 34, scope: !6563)
!6565 = !DILocation(line: 3583, column: 38, scope: !6563)
!6566 = !DILocation(line: 3583, column: 44, scope: !6563)
!6567 = !DILocation(line: 3584, column: 24, scope: !6563)
!6568 = !DILocation(line: 3584, column: 13, scope: !6563)
!6569 = !DILocation(line: 3585, column: 45, scope: !6563)
!6570 = !DILocation(line: 3585, column: 51, scope: !6563)
!6571 = !DILocation(line: 3585, column: 20, scope: !6563)
!6572 = !DILocation(line: 3585, column: 13, scope: !6563)
!6573 = !DILocation(line: 3587, column: 5, scope: !6550)
!6574 = !DILocation(line: 3581, column: 37, scope: !6575)
!6575 = !DILexicalBlockFile(scope: !6546, file: !16, discriminator: 2)
!6576 = !DILocation(line: 3581, column: 43, scope: !6575)
!6577 = !DILocation(line: 3581, column: 35, scope: !6575)
!6578 = !DILocation(line: 3581, column: 5, scope: !6575)
!6579 = distinct !{!6579, !6580}
!6580 = !DILocation(line: 3581, column: 5, scope: !6525)
!6581 = !DILocation(line: 3588, column: 16, scope: !6525)
!6582 = !DILocation(line: 3588, column: 5, scope: !6525)
!6583 = !DILocation(line: 3589, column: 5, scope: !6525)
!6584 = !DILocation(line: 3590, column: 1, scope: !6525)
!6585 = distinct !DISubprogram(name: "del_session", scope: !16, file: !16, line: 3592, type: !6586, isLocal: true, isDefinition: true, scopeLine: 3593, flags: DIFlagPrototyped, isOptimized: false, unit: !0, variables: !409)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{null, !362, !399}
!6588 = !DILocalVariable(name: "sctx", arg: 1, scope: !6585, file: !16, line: 3592, type: !362)
!6589 = !DILocation(line: 3592, column: 34, scope: !6585)
!6590 = !DILocalVariable(name: "session", arg: 2, scope: !6585, file: !16, line: 3592, type: !399)
!6591 = !DILocation(line: 3592, column: 53, scope: !6585)
!6592 = !DILocalVariable(name: "sess", scope: !6585, file: !16, line: 3594, type: !414)
!6593 = !DILocation(line: 3594, column: 25, scope: !6585)
!6594 = !DILocalVariable(name: "prev", scope: !6585, file: !16, line: 3594, type: !414)
!6595 = !DILocation(line: 3594, column: 32, scope: !6585)
!6596 = !DILocalVariable(name: "id", scope: !6585, file: !16, line: 3595, type: !319)
!6597 = !DILocation(line: 3595, column: 26, scope: !6585)
!6598 = !DILocalVariable(name: "idlen", scope: !6585, file: !16, line: 3596, type: !331)
!6599 = !DILocation(line: 3596, column: 18, scope: !6585)
!6600 = !DILocation(line: 3597, column: 29, scope: !6585)
!6601 = !DILocation(line: 3597, column: 10, scope: !6585)
!6602 = !DILocation(line: 3597, column: 8, scope: !6585)
!6603 = !DILocation(line: 3598, column: 17, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6585, file: !16, line: 3598, column: 5)
!6605 = !DILocation(line: 3598, column: 15, scope: !6604)
!6606 = !DILocation(line: 3598, column: 10, scope: !6604)
!6607 = !DILocation(line: 3598, column: 24, scope: !6608)
!6608 = !DILexicalBlockFile(scope: !6609, file: !16, discriminator: 1)
!6609 = distinct !DILexicalBlock(scope: !6604, file: !16, line: 3598, column: 5)
!6610 = !DILocation(line: 3598, column: 5, scope: !6608)
!6611 = !DILocation(line: 3599, column: 13, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !16, line: 3599, column: 13)
!6613 = distinct !DILexicalBlock(scope: !6609, file: !16, line: 3598, column: 49)
!6614 = !DILocation(line: 3599, column: 22, scope: !6612)
!6615 = !DILocation(line: 3599, column: 28, scope: !6612)
!6616 = !DILocation(line: 3599, column: 19, scope: !6612)
!6617 = !DILocation(line: 3599, column: 34, scope: !6612)
!6618 = !DILocation(line: 3599, column: 45, scope: !6619)
!6619 = !DILexicalBlockFile(scope: !6612, file: !16, discriminator: 1)
!6620 = !DILocation(line: 3599, column: 51, scope: !6619)
!6621 = !DILocation(line: 3599, column: 55, scope: !6619)
!6622 = !DILocation(line: 3599, column: 59, scope: !6619)
!6623 = !DILocation(line: 3599, column: 38, scope: !6619)
!6624 = !DILocation(line: 3599, column: 13, scope: !6619)
!6625 = !DILocation(line: 3600, column: 17, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !16, line: 3600, column: 17)
!6627 = distinct !DILexicalBlock(scope: !6612, file: !16, line: 3599, column: 67)
!6628 = !DILocation(line: 3600, column: 17, scope: !6627)
!6629 = !DILocation(line: 3601, column: 30, scope: !6626)
!6630 = !DILocation(line: 3601, column: 36, scope: !6626)
!6631 = !DILocation(line: 3601, column: 17, scope: !6626)
!6632 = !DILocation(line: 3601, column: 23, scope: !6626)
!6633 = !DILocation(line: 3601, column: 28, scope: !6626)
!6634 = !DILocation(line: 3603, column: 25, scope: !6626)
!6635 = !DILocation(line: 3603, column: 31, scope: !6626)
!6636 = !DILocation(line: 3603, column: 23, scope: !6626)
!6637 = !DILocation(line: 3604, column: 25, scope: !6627)
!6638 = !DILocation(line: 3604, column: 31, scope: !6627)
!6639 = !DILocation(line: 3604, column: 13, scope: !6627)
!6640 = !DILocation(line: 3605, column: 25, scope: !6627)
!6641 = !DILocation(line: 3605, column: 31, scope: !6627)
!6642 = !DILocation(line: 3605, column: 13, scope: !6627)
!6643 = !DILocation(line: 3606, column: 25, scope: !6627)
!6644 = !DILocation(line: 3606, column: 13, scope: !6627)
!6645 = !DILocation(line: 3607, column: 13, scope: !6627)
!6646 = !DILocation(line: 3609, column: 16, scope: !6613)
!6647 = !DILocation(line: 3609, column: 14, scope: !6613)
!6648 = !DILocation(line: 3610, column: 5, scope: !6613)
!6649 = !DILocation(line: 3598, column: 37, scope: !6650)
!6650 = !DILexicalBlockFile(scope: !6609, file: !16, discriminator: 2)
!6651 = !DILocation(line: 3598, column: 43, scope: !6650)
!6652 = !DILocation(line: 3598, column: 35, scope: !6650)
!6653 = !DILocation(line: 3598, column: 5, scope: !6650)
!6654 = distinct !{!6654, !6655}
!6655 = !DILocation(line: 3598, column: 5, scope: !6585)
!6656 = !DILocation(line: 3611, column: 1, scope: !6585)
